<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01301" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::Material</compoundname>
    <includes refid="a00152" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <templateparamlist>
      <param>
        <type>class MaterialImpl</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01301_1aa30c942d1fd3c011dab0e23e1df0ef63" prot="public" static="no">
        <type>MaterialImpl</type>
        <definition>using Ikarus::Material&lt; MaterialImpl &gt;::MaterialImplType =  MaterialImpl</definition>
        <argsstring></argsstring>
        <name>MaterialImplType</name>
        <qualifiedname>Ikarus::Material::MaterialImplType</qualifiedname>
        <briefdescription>
<para>Type of material implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="76" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01301_1a9c276dd6faf7062d02dde5c01644fd10" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Material&lt; MaterialImpl &gt;::isReduced</definition>
        <argsstring></argsstring>
        <name>isReduced</name>
        <qualifiedname>Ikarus::Material::isReduced</qualifiedname>
        <initializer>= traits::isSpecializationNonTypeAndTypes&lt;<ref refid="a01321" kindref="compound">VanishingStress</ref>, MaterialImpl&gt;::value</initializer>
        <briefdescription>
<para>Static constant for determining if the material has vanishing stress components (is reduced). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="81" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="81" bodyend="-1"/>
        <referencedby refid="a00308_1ga30500f2c49b7d1997c7eb7b6ee90ad75" compoundref="a00062" startline="577" endline="602">Ikarus::enlargeIfReduced</referencedby>
        <referencedby refid="a00313_1ab6a92f48acd6be62f36b7f499491fc8a" compoundref="a00152" startline="38" endline="44">Ikarus::hasCorrectSize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01301_1a001e7e5968c6dfce64ac6932e2a0517a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const MaterialImpl &amp;</type>
        <definition>constexpr const MaterialImpl &amp; Ikarus::Material&lt; MaterialImpl &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Material::impl</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="88" column="34" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="88" bodyend="88"/>
        <referencedby refid="a01301_1ada3530e97519400e78b32ec1989343f9" compoundref="a00152" startline="102" endline="102">Ikarus::Material&lt; MaterialImpl &gt;::name</referencedby>
        <referencedby refid="a01301_1afae928f196f5ad1aeaffd2aaf0fcca45" compoundref="a00152" startline="180" endline="182">Ikarus::Material&lt; MaterialImpl &gt;::rebind</referencedby>
        <referencedby refid="a01301_1a297b4cab80330a8c473dbc06552c8808" compoundref="a00152" startline="116" endline="127">Ikarus::Material&lt; MaterialImpl &gt;::storedEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01301_1a61cc58c93007911d68bf6a8b6bbc2bd5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr MaterialImpl &amp;</type>
        <definition>constexpr MaterialImpl &amp; Ikarus::Material&lt; MaterialImpl &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Material::impl</qualifiedname>
        <briefdescription>
<para>Accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="95" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1ada3530e97519400e78b32ec1989343f9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::Material&lt; MaterialImpl &gt;::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::Material::name</qualifiedname>
        <briefdescription>
<para>Get the name of the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="102" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a297b4cab80330a8c473dbc06552c8808" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00302_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">StrainTags</ref></type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; MaterialImpl &gt;::storedEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>storedEnergy</name>
        <qualifiedname>Ikarus::Material::storedEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
    <requiresclause>CorrectStrainSize&lt;MaterialImpl, Derived&gt;    </requiresclause>
        <briefdescription>
<para>Return the stored potential energy of the material. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the free Helmholtz energy of the material</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00320" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="116" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="116" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1af10f8631c73d1c4cb78f8b6d44bf6f1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00302_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">StrainTags</ref></type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; MaterialImpl &gt;::stresses</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>stresses</name>
        <qualifiedname>Ikarus::Material::stresses</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
    <requiresclause>CorrectStrainSize&lt;MaterialImpl, Derived&gt;    </requiresclause>
        <briefdescription>
<para>Get the stresses of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00320" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vectorial or Matrix return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="140" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a00e7bb30244df751617e1e613d382ea0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00302_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">StrainTags</ref></type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; MaterialImpl &gt;::tangentModuli</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>tangentModuli</name>
        <qualifiedname>Ikarus::Material::tangentModuli</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
    <requiresclause>CorrectStrainSize&lt;MaterialImpl, Derived&gt;    </requiresclause>
        <briefdescription>
<para>Get the tangentModuli of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00320" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli in Voigt notation or as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="161" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1afae928f196f5ad1aeaffd2aaf0fcca45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarTypeOther</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; MaterialImpl &gt;::rebind</definition>
        <argsstring>() const</argsstring>
        <name>rebind</name>
        <qualifiedname>Ikarus::Material::rebind</qualifiedname>
        <briefdescription>
<para>Rebind material to a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
<para>Useful for using automatic differentiation.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarTypeOther</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type to rebind to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rebound material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="180" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="180" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01301_1afb23205a5ea513fae56cfeedd509366b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; MaterialImpl &gt;::stressesMaybeTransformInputToVoigt</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>stressesMaybeTransformInputToVoigt</name>
        <qualifiedname>Ikarus::Material::stressesMaybeTransformInputToVoigt</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="186" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="186" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a3ee0b7001b5a5f1c6713831d74774767" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; MaterialImpl &gt;::tangentModuliMaybeTransformInputToVoigt</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>tangentModuliMaybeTransformInputToVoigt</name>
        <qualifiedname>Ikarus::Material::tangentModuliMaybeTransformInputToVoigt</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="197" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="197" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface classf or materials. </para>
    </briefdescription>
    <detaileddescription>
<para>Consider a hyper elastic material with the free Helmholtz energy <formula id="15">\[\require{cases}\psi: \begin{cases}\mathbb{R}^{3\times 3} &amp;\rightarrow \mathbb{R} \\ \BC
&amp;\mapsto \psi(\BC) \end{cases}.\]</formula></para>
<para>Then, the value of this potential energy is return by <ref refid="a01301_1a297b4cab80330a8c473dbc06552c8808" kindref="member">storedEnergy </ref> and its first derivative (the stresses) by <ref refid="a01301_1af10f8631c73d1c4cb78f8b6d44bf6f1a" kindref="member">stresses </ref> and the second derivatives (the tangent moduli) by <ref refid="a01301_1a00e7bb30244df751617e1e613d382ea0" kindref="member">tangentModuli </ref>.</para>
<para>The passed strains can be in several formats, i.e., <formula id="16">$\BC$</formula> can be the <ulink url="https://en.wikipedia.org/wiki/Finite_strain_theory#Cauchy_strain_tensor_(right_Cauchy%E2%80%93Green_deformation_tensor)">right Cauchy-Green tensor</ulink>, the <ulink url="https://en.wikipedia.org/wiki/Finite_strain_theory#Deformation_gradient_tensor">deformation gradient</ulink> <formula id="17">$\mathbf{F}$</formula> or linear strains. The current supported tags are given by <ref refid="a00302_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">Ikarus::StrainTags</ref>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the underlying material implementation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::LinearElasticityT&lt; ScalarType_ &gt;</label>
        <link refid="a01305"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::Material&lt; MaterialImpl &gt;</label>
        <link refid="a01301"/>
      </node>
      <node id="5">
        <label>Ikarus::NeoHookeT&lt; ScalarType_ &gt;</label>
        <link refid="a01309"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::StVenantKirchhoffT&lt; ScalarType_ &gt;</label>
        <link refid="a01313"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Ikarus::VanishingStress&lt; stressIndexPair, MaterialImpl &gt;</label>
        <link refid="a01321"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::Material&lt; LinearElasticityT&lt; ScalarType_ &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; LinearElasticityT&lt; ScalarType_ &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Ikarus::Material&lt; StVenantKirchhoffT&lt; ScalarType &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; StVenantKirchhoffT&lt; ScalarType &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Material&lt; StVenantKirchhoffT&lt; ScalarType_ &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; StVenantKirchhoffT&lt; ScalarType_ &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Ikarus::Material&lt; VanishingStress&lt; stressIndexPair, MaterialImpl &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; VanishingStress&lt; stressIndexPair, MaterialImpl &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Ikarus::StVenantKirchhoffT&lt; ScalarType &gt;</label>
        <link refid="a01313"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; ScalarType &gt;</edgelabel>
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="75" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="75" bodyend="206"/>
    <listofallmembers>
      <member refid="a01301_1a001e7e5968c6dfce64ac6932e2a0517a" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>impl</name></member>
      <member refid="a01301_1a61cc58c93007911d68bf6a8b6bbc2bd5" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>impl</name></member>
      <member refid="a01301_1a9c276dd6faf7062d02dde5c01644fd10" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>isReduced</name></member>
      <member refid="a01301_1aa30c942d1fd3c011dab0e23e1df0ef63" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>MaterialImplType</name></member>
      <member refid="a01301_1ada3530e97519400e78b32ec1989343f9" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>name</name></member>
      <member refid="a01301_1afae928f196f5ad1aeaffd2aaf0fcca45" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>rebind</name></member>
      <member refid="a01301_1a297b4cab80330a8c473dbc06552c8808" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>storedEnergy</name></member>
      <member refid="a01301_1af10f8631c73d1c4cb78f8b6d44bf6f1a" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>stresses</name></member>
      <member refid="a01301_1afb23205a5ea513fae56cfeedd509366b" prot="private" virt="non-virtual"><scope>Ikarus::Material</scope><name>stressesMaybeTransformInputToVoigt</name></member>
      <member refid="a01301_1a00e7bb30244df751617e1e613d382ea0" prot="public" virt="non-virtual"><scope>Ikarus::Material</scope><name>tangentModuli</name></member>
      <member refid="a01301_1a3ee0b7001b5a5f1c6713831d74774767" prot="private" virt="non-virtual"><scope>Ikarus::Material</scope><name>tangentModuliMaybeTransformInputToVoigt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
