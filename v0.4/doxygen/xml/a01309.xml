<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01309" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::NeoHookeT</compoundname>
    <basecompoundref refid="a01301" prot="public" virt="non-virtual">Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</basecompoundref>
    <includes refid="a00161" local="no">ikarus/finiteelements/mechanics/materials/neohooke.hh</includes>
    <templateparamlist>
      <param>
        <type>typename ScalarType_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01309_1a2c6a3eab38f9a88b18a869d9e66eda53" prot="public" static="no">
        <type>ScalarType_</type>
        <definition>using Ikarus::NeoHookeT&lt; ScalarType_ &gt;::ScalarType =  ScalarType_</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Ikarus::NeoHookeT::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="45" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01309_1a273e05e32f6a9728440ad3da6669ec7a" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="a01309_1a2c6a3eab38f9a88b18a869d9e66eda53" kindref="member">ScalarType</ref>, <ref refid="a01309_1a5eebe95a0e13399abd7f26020f0c0f3a" kindref="member">worldDimension</ref>, <ref refid="a01309_1a5eebe95a0e13399abd7f26020f0c0f3a" kindref="member">worldDimension</ref> &gt;</type>
        <definition>using Ikarus::NeoHookeT&lt; ScalarType_ &gt;::StrainMatrix =  Eigen::Matrix&lt;ScalarType, worldDimension, worldDimension&gt;</definition>
        <argsstring></argsstring>
        <name>StrainMatrix</name>
        <qualifiedname>Ikarus::NeoHookeT::StrainMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="47" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01309_1ac8ebe95bef84eb82bf38ed45261f2173" prot="public" static="no">
        <type><ref refid="a01309_1a273e05e32f6a9728440ad3da6669ec7a" kindref="member">StrainMatrix</ref></type>
        <definition>using Ikarus::NeoHookeT&lt; ScalarType_ &gt;::StressMatrix =  StrainMatrix</definition>
        <argsstring></argsstring>
        <name>StressMatrix</name>
        <qualifiedname>Ikarus::NeoHookeT::StressMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="48" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01301_1aa30c942d1fd3c011dab0e23e1df0ef63" prot="public" static="no">
        <type><ref refid="a01309" kindref="compound">NeoHookeT</ref>&lt; ScalarType_ &gt;</type>
        <definition>using Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::MaterialImplType =  NeoHookeT&lt; ScalarType_ &gt;</definition>
        <argsstring></argsstring>
        <name>MaterialImplType</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::MaterialImplType</qualifiedname>
        <briefdescription>
<para>Type of material implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="76" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01309_1a5eebe95a0e13399abd7f26020f0c0f3a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::NeoHookeT&lt; ScalarType_ &gt;::worldDimension</definition>
        <argsstring></argsstring>
        <name>worldDimension</name>
        <qualifiedname>Ikarus::NeoHookeT::worldDimension</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="46" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1a505b0b0ada1c096262412fda6a823cef" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::NeoHookeT&lt; ScalarType_ &gt;::strainTag</definition>
        <argsstring></argsstring>
        <name>strainTag</name>
        <qualifiedname>Ikarus::NeoHookeT::strainTag</qualifiedname>
        <initializer>= <ref refid="a00302_1ggacef1e451de1a99845c59d7391064fb8faea40a9960a7a89c4f366beeab85d07d2" kindref="member">StrainTags::rightCauchyGreenTensor</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="50" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1aa0b04d47fd84e036f8487cf9641abb41" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::NeoHookeT&lt; ScalarType_ &gt;::stressTag</definition>
        <argsstring></argsstring>
        <name>stressTag</name>
        <qualifiedname>Ikarus::NeoHookeT::stressTag</qualifiedname>
        <initializer>= <ref refid="a00302_1gga70b4ce43c53cc5e949d49919f437501eab13248d68ac5516c015337b68346fc21" kindref="member">StressTags::PK2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="51" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1ab6adef71801c1e3d9cff0fc522950c1f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::NeoHookeT&lt; ScalarType_ &gt;::tangentModuliTag</definition>
        <argsstring></argsstring>
        <name>tangentModuliTag</name>
        <qualifiedname>Ikarus::NeoHookeT::tangentModuliTag</qualifiedname>
        <initializer>= <ref refid="a00302_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">TangentModuliTags::Material</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="52" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1a39c43bb592cf54c9a2fd3b60c741a252" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NeoHookeT&lt; ScalarType_ &gt;::energyAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>energyAcceptsVoigt</name>
        <qualifiedname>Ikarus::NeoHookeT::energyAcceptsVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="53" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1a37a9776bddff633282912937c1e737a3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NeoHookeT&lt; ScalarType_ &gt;::stressToVoigt</definition>
        <argsstring></argsstring>
        <name>stressToVoigt</name>
        <qualifiedname>Ikarus::NeoHookeT::stressToVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="54" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1ada1f302b0b332d6cff1ddfa62ac72871" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NeoHookeT&lt; ScalarType_ &gt;::stressAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>stressAcceptsVoigt</name>
        <qualifiedname>Ikarus::NeoHookeT::stressAcceptsVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="55" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1ad72e02a26d4a3b6d8d29f6341a15952a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NeoHookeT&lt; ScalarType_ &gt;::moduliToVoigt</definition>
        <argsstring></argsstring>
        <name>moduliToVoigt</name>
        <qualifiedname>Ikarus::NeoHookeT::moduliToVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="56" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1a0f1786af1344f46596f6e58babd87543" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NeoHookeT&lt; ScalarType_ &gt;::moduliAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>moduliAcceptsVoigt</name>
        <qualifiedname>Ikarus::NeoHookeT::moduliAcceptsVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="57" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01309_1a38a89c3043d1eaa77d3a743b89a99480" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::NeoHookeT&lt; ScalarType_ &gt;::derivativeFactor</definition>
        <argsstring></argsstring>
        <name>derivativeFactor</name>
        <qualifiedname>Ikarus::NeoHookeT::derivativeFactor</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="58" column="29" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01301_1a9c276dd6faf7062d02dde5c01644fd10" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::isReduced</definition>
        <argsstring></argsstring>
        <name>isReduced</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::isReduced</qualifiedname>
        <briefdescription>
<para>Static constant for determining if the material has vanishing stress components (is reduced). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="81" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="a01309_1a65f7f8af8bb74bba74ea19836eceab25" prot="public" static="no" mutable="no">
        <type><ref refid="a01357" kindref="compound">LamesFirstParameterAndShearModulus</ref></type>
        <definition>LamesFirstParameterAndShearModulus Ikarus::NeoHookeT&lt; ScalarType_ &gt;::lambdaAndmu</definition>
        <argsstring></argsstring>
        <name>lambdaAndmu</name>
        <qualifiedname>Ikarus::NeoHookeT::lambdaAndmu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="134" column="40" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="134" bodyend="-1"/>
        <referencedby refid="a01309_1a5d32fe6c728cb508b20bc11099baf6a1" compoundref="a00161" startline="130" endline="132">Ikarus::NeoHookeT&lt; ScalarType_ &gt;::rebind</referencedby>
        <referencedby refid="a01309_1a49da0bb7428a0cf780cdcad97ec97b74" compoundref="a00161" startline="67" endline="76">Ikarus::NeoHookeT&lt; ScalarType_ &gt;::storedEnergyImpl</referencedby>
        <referencedby refid="a01309_1a2cfcf4034eb9e07c06829785ea92c3f4" compoundref="a00161" startline="86" endline="98">Ikarus::NeoHookeT&lt; ScalarType_ &gt;::stressesImpl</referencedby>
        <referencedby refid="a01309_1aec2dfac0aca87f7998a0f0c2b3b63133" compoundref="a00161" startline="108" endline="122">Ikarus::NeoHookeT&lt; ScalarType_ &gt;::tangentModuliImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01309_1a437008f3343a4f701fdd4c5e425313ce" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::NeoHookeT&lt; ScalarType_ &gt;::nameImpl</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nameImpl</name>
        <qualifiedname>Ikarus::NeoHookeT::nameImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="37" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="a01309_1a10eb1792f7a78e2f52c625a01301f5ef" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::NeoHookeT&lt; ScalarType_ &gt;::NeoHookeT</definition>
        <argsstring>(const LamesFirstParameterAndShearModulus &amp;mpt)</argsstring>
        <name>NeoHookeT</name>
        <qualifiedname>Ikarus::NeoHookeT::NeoHookeT</qualifiedname>
        <param>
          <type>const <ref refid="a01357" kindref="compound">LamesFirstParameterAndShearModulus</ref> &amp;</type>
          <declname>mpt</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="a01309" kindref="compound">NeoHookeT</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpt</parametername>
</parameternamelist>
<parameterdescription>
<para>The Lame&apos;s parameters (first parameter and shear modulus). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="43" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="a01309_1a49da0bb7428a0cf780cdcad97ec97b74" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type><ref refid="a01309_1a2c6a3eab38f9a88b18a869d9e66eda53" kindref="member">ScalarType</ref></type>
        <definition>ScalarType Ikarus::NeoHookeT&lt; ScalarType_ &gt;::storedEnergyImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C) const noexcept</argsstring>
        <name>storedEnergyImpl</name>
        <qualifiedname>Ikarus::NeoHookeT::storedEnergyImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Computes the stored energy in the Neo-Hookean material model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived type of the input matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The right Cauchy-Green tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ScalarType The stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="67" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="67" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="a01309_1a2cfcf4034eb9e07c06829785ea92c3f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NeoHookeT&lt; ScalarType_ &gt;::stressesImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C) const</argsstring>
        <name>stressesImpl</name>
        <qualifiedname>Ikarus::NeoHookeT::stressesImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Computes the stresses in the Neo-Hookean material model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to return stresses in Voigt notation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived type of the input matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The right Cauchy-Green tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>StressMatrix The stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="86" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="86" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="a01309_1aec2dfac0aca87f7998a0f0c2b3b63133" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NeoHookeT&lt; ScalarType_ &gt;::tangentModuliImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C) const</argsstring>
        <name>tangentModuliImpl</name>
        <qualifiedname>Ikarus::NeoHookeT::tangentModuliImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Computes the tangent moduli in the Neo-Hookean material model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to return tangent moduli in Voigt notation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived type of the input matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The right Cauchy-Green tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::TensorFixedSize&lt;ScalarType, Eigen::Sizes&lt;3, 3, 3, 3&gt;&gt; The tangent moduli. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="108" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="108" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="a01309_1a5d32fe6c728cb508b20bc11099baf6a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarTypeOther</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NeoHookeT&lt; ScalarType_ &gt;::rebind</definition>
        <argsstring>() const</argsstring>
        <name>rebind</name>
        <qualifiedname>Ikarus::NeoHookeT::rebind</qualifiedname>
        <briefdescription>
<para>Rebinds the material to a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarTypeOther</parametername>
</parameternamelist>
<parameterdescription>
<para>The target scalar type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NeoHookeT&lt;ScalarTypeOther&gt; The rebound NeoHooke material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="130" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a001e7e5968c6dfce64ac6932e2a0517a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="a01309" kindref="compound">NeoHookeT</ref>&lt; ScalarType_ &gt; &amp;</type>
        <definition>constexpr const NeoHookeT&lt; ScalarType_ &gt;  &amp; Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="88" column="34" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a61cc58c93007911d68bf6a8b6bbc2bd5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="a01309" kindref="compound">NeoHookeT</ref>&lt; ScalarType_ &gt; &amp;</type>
        <definition>constexpr NeoHookeT&lt; ScalarType_ &gt;  &amp; Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="95" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1ada3530e97519400e78b32ec1989343f9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::name</qualifiedname>
        <briefdescription>
<para>Get the name of the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="102" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a297b4cab80330a8c473dbc06552c8808" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::storedEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>storedEnergy</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::storedEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Return the stored potential energy of the material. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the free Helmholtz energy of the material</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00320" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="116" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="116" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1af10f8631c73d1c4cb78f8b6d44bf6f1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::stresses</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>stresses</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::stresses</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the stresses of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00320" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vectorial or Matrix return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="140" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="a01301_1a00e7bb30244df751617e1e613d382ea0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt;  &gt;::tangentModuli</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>tangentModuli</name>
        <qualifiedname>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;::tangentModuli</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the tangentModuli of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00320" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli in Voigt notation or as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="161" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="161" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the Neo-Hookean material model.</para>
<para>The energy is computed as. </para>
    </briefdescription>
    <detaileddescription>
<para><formula id="24">\[ \psi(\BC) = \frac{\mu}{2} (\tr \BC-3- 2 \log \sqrt{\det \BC}) + \frac{\lambda}{2} (\log \sqrt{\det \BC})^2 ,\]</formula> where <formula id="25">$ \BC $</formula> denotes the right Cauchy-Green strain tensor.</para>
<para>The second Piola-Kirchhoff stresses are computed as <formula id="26">\[ \BS(\BC) =\fracpt{\psi(\BC)}{\BC} = \mu (\BI-\BC^{-1}) + \lambda \log \sqrt{\det \BC}  \BC^{-1},\]</formula></para>
<para>and the material tangent moduli are computed as <formula id="27">\[ \BBC(\BC) =\fracpt{^2\psi(\BC)}{\BC^2} =  \lambda \BC^{-1} \otimes  \BC^{-1} + 2 (\mu- \lambda \log
\sqrt{\det \BC} ) \CI,\]</formula> where <formula id="28">$ \CI_{IJKL} =  \frac{1}{2}({(\BC^{-1})}^{IK}{(\BC^{-1})}^{JL}+{(\BC^{-1})}^{IL} {(\BC^{-1})}^{JK}).$</formula></para>
<para><simplesect kind="remark"><para>See <ref refid="a02523_1CITEREF_bonet2008nonlinear" kindref="member">[1]</ref>, Section 6.4.3 for a discussion of this material </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType_</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strains and stresses,.... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::Material&lt; MaterialImpl &gt;</label>
        <link refid="a01301"/>
      </node>
      <node id="1">
        <label>Ikarus::NeoHookeT&lt; ScalarType_ &gt;</label>
        <link refid="a01309"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Ikarus::LamesFirstParameterAndShearModulus</label>
        <link refid="a01357"/>
      </node>
      <node id="3">
        <label>Ikarus::Material&lt; MaterialImpl &gt;</label>
        <link refid="a01301"/>
      </node>
      <node id="1">
        <label>Ikarus::NeoHookeT&lt; ScalarType_ &gt;</label>
        <link refid="a01309"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>lambdaAndmu</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::Material&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</label>
        <link refid="a01301"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NeoHookeT&lt; ScalarType_ &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" line="36" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh" bodystart="36" bodyend="135"/>
    <listofallmembers>
      <member refid="a01309_1a38a89c3043d1eaa77d3a743b89a99480" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>derivativeFactor</name></member>
      <member refid="a01309_1a39c43bb592cf54c9a2fd3b60c741a252" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>energyAcceptsVoigt</name></member>
      <member refid="a01301_1a001e7e5968c6dfce64ac6932e2a0517a" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>impl</name></member>
      <member refid="a01301_1a61cc58c93007911d68bf6a8b6bbc2bd5" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>impl</name></member>
      <member refid="a01301_1a9c276dd6faf7062d02dde5c01644fd10" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>isReduced</name></member>
      <member refid="a01309_1a65f7f8af8bb74bba74ea19836eceab25" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>lambdaAndmu</name></member>
      <member refid="a01301_1aa30c942d1fd3c011dab0e23e1df0ef63" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>MaterialImplType</name></member>
      <member refid="a01309_1a0f1786af1344f46596f6e58babd87543" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>moduliAcceptsVoigt</name></member>
      <member refid="a01309_1ad72e02a26d4a3b6d8d29f6341a15952a" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>moduliToVoigt</name></member>
      <member refid="a01301_1ada3530e97519400e78b32ec1989343f9" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>name</name></member>
      <member refid="a01309_1a437008f3343a4f701fdd4c5e425313ce" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>nameImpl</name></member>
      <member refid="a01309_1a10eb1792f7a78e2f52c625a01301f5ef" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>NeoHookeT</name></member>
      <member refid="a01309_1a5d32fe6c728cb508b20bc11099baf6a1" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>rebind</name></member>
      <member refid="a01309_1a2c6a3eab38f9a88b18a869d9e66eda53" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>ScalarType</name></member>
      <member refid="a01301_1a297b4cab80330a8c473dbc06552c8808" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>storedEnergy</name></member>
      <member refid="a01309_1a49da0bb7428a0cf780cdcad97ec97b74" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>storedEnergyImpl</name></member>
      <member refid="a01309_1a273e05e32f6a9728440ad3da6669ec7a" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>StrainMatrix</name></member>
      <member refid="a01309_1a505b0b0ada1c096262412fda6a823cef" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>strainTag</name></member>
      <member refid="a01309_1ada1f302b0b332d6cff1ddfa62ac72871" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>stressAcceptsVoigt</name></member>
      <member refid="a01301_1af10f8631c73d1c4cb78f8b6d44bf6f1a" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>stresses</name></member>
      <member refid="a01309_1a2cfcf4034eb9e07c06829785ea92c3f4" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>stressesImpl</name></member>
      <member refid="a01309_1ac8ebe95bef84eb82bf38ed45261f2173" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>StressMatrix</name></member>
      <member refid="a01309_1aa0b04d47fd84e036f8487cf9641abb41" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>stressTag</name></member>
      <member refid="a01309_1a37a9776bddff633282912937c1e737a3" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>stressToVoigt</name></member>
      <member refid="a01301_1a00e7bb30244df751617e1e613d382ea0" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>tangentModuli</name></member>
      <member refid="a01309_1aec2dfac0aca87f7998a0f0c2b3b63133" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>tangentModuliImpl</name></member>
      <member refid="a01309_1ab6adef71801c1e3d9cff0fc522950c1f" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>tangentModuliTag</name></member>
      <member refid="a01309_1a5eebe95a0e13399abd7f26020f0c0f3a" prot="public" virt="non-virtual"><scope>Ikarus::NeoHookeT</scope><name>worldDimension</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
