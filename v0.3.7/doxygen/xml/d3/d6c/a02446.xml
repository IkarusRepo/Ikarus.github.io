<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d3/d6c/a02446" kind="file" language="C++">
    <compoundname>finiteelements/mechanics/linearelastic.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">optional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">dune/fufem/boundarypatch.hh</includes>
    <includes local="no">dune/geometry/quadraturerules.hh</includes>
    <includes local="no">dune/localfefunctions/expressions/linearStrainsExpr.hh</includes>
    <includes local="no">dune/localfefunctions/impl/standardLocalFunction.hh</includes>
    <includes local="no">dune/localfefunctions/manifolds/realTuple.hh</includes>
    <includes refid="d3/d00/a00113" local="no">ikarus/finiteelements/febases/powerbasisfe.hh</includes>
    <includes refid="dc/de6/a00167" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="dc/dfe/a00125" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="d6/db8/a00158" local="no">ikarus/finiteelements/mechanics/materials.hh</includes>
    <includes refid="df/d6a/a00119" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includes refid="d5/d16/a00029" local="no">ikarus/utils/defaultfunctions.hh</includes>
    <includes refid="df/d03/a00062" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includedby refid="dc/d4e/a02449" local="no">linearelastic.hh</includedby>
    <includedby refid="de/df3/a00185" local="no">registerelement.hh</includedby>
    <incdepgraph>
      <node id="10">
        <label>ikarus/finiteelements/febases/powerbasisfe.hh</label>
        <link refid="d3/d00/a00113"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="dc/de6/a00167"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="dc/dfe/a00125"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="df/dc8/a00122"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>linearelastic.hh</label>
        <link refid="d3/d6c/a02446"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/finiteelements/mechanics/materials.hh</label>
        <link refid="d6/db8/a00158"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/finiteelements/mechanics/materials/linearelasticity.hh</label>
        <link refid="da/d1e/a00149"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ikarus/finiteelements/mechanics/materials/neohooke.hh</label>
        <link refid="d7/d9a/a00152"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="d5/db1/a00140"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>svk.hh</label>
        <link refid="de/d76/a00134"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>tags.hh</label>
        <link refid="d9/db6/a00146"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ikarus/finiteelements/mechanics/materials/vanishingstress.hh</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="d6/de1/a00233"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="d5/ddf/a00224"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="dd/d52/a00221"/>
      </node>
      <node id="12">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="db/db2/a00020"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ikarus/utils/math.hh</label>
        <link refid="dd/d32/a00041"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="da/d45/a00011"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="d3/de5/a00209"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="de/db1/a00197"/>
      </node>
      <node id="38">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/traits.hh</label>
        <link refid="d9/d2e/a00056"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Eigen/Core</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="55">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="48">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="13">
        <label>concepts</label>
      </node>
      <node id="26">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="30">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="21">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="42">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="46">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="5">
        <label>dune/fufem/boundarypatch.hh</label>
      </node>
      <node id="16">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="17">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="6">
        <label>dune/geometry/quadraturerules.hh</label>
      </node>
      <node id="47">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="7">
        <label>dune/localfefunctions/expressions/linearStrainsExpr.hh</label>
      </node>
      <node id="8">
        <label>dune/localfefunctions/impl/standardLocalFunction.hh</label>
      </node>
      <node id="9">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="61">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="53">
        <label>memory</label>
      </node>
      <node id="39">
        <label>numeric</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="45">
        <label>random</label>
      </node>
      <node id="40">
        <label>ranges</label>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="20">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="41">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="37">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="54">
        <label>variant</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>linearelastic.hh</label>
        <link refid="d3/d6c/a02446"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d1/d04/a02443"/>
      </node>
      <node id="2">
        <label>linearelastic.hh</label>
        <link refid="dc/d4e/a02449"/>
      </node>
      <node id="3">
        <label>registerelement.hh</label>
        <link refid="de/df3/a00185"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d2/d1d/a01277" prot="public">Ikarus::LinearElastic</innerclass>
    <innernamespace refid="da/d50/a00301">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the LinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DUNE_LOCALFEFUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/fufem/boundarypatch.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/geometry/quadraturerules.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/expressions/linearStrainsExpr.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/impl/standardLocalFunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/manifolds/realTuple.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="d3/d00/a00113" kindref="compound">ikarus/finiteelements/febases/powerbasisfe.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="dc/de6/a00167" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="dc/dfe/a00125" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="d6/db8/a00158" kindref="compound">ikarus/finiteelements/mechanics/materials.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="df/d6a/a00119" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="d5/d16/a00029" kindref="compound">ikarus/utils/defaultfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="df/d03/a00062" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d50/a00301" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FERequirements_<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="44" refid="d2/d1d/a01277" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277" kindref="compound">LinearElastic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/df7/a01201" kindref="compound">PowerBasisFE</ref>&lt;typename<sp/>Basis_::FlatBasis&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="d2/d1d/a01277_1a5935304c8f08a48d0e3606949be5c8af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1a5935304c8f08a48d0e3606949be5c8af" kindref="member">Basis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Basis_;</highlight></codeline>
<codeline lineno="47" refid="d2/d1d/a01277_1ad39b9dca6c279697e13d795bccba67c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1ad39b9dca6c279697e13d795bccba67c9" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="d2/d9b/a01433_1ab9e57abdb5f4abeb030f6122df75849e" kindref="member">Basis::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="48" refid="d2/d1d/a01277_1a46df9b5887e5f1c87dfd24aeca94824a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="de/df7/a01201" kindref="compound">BaseDisp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="de/df7/a01201" kindref="compound">PowerBasisFE&lt;FlatBasis&gt;</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>globalIndices<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FERequirements_;</highlight></codeline>
<codeline lineno="50" refid="d2/d1d/a01277_1abe2be58bcd10e27f8e57aab7558dc058" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="dc/dab/a01237" kindref="compound">ResultRequirementsType</ref><sp/><sp/>=<sp/><ref refid="dc/dab/a01237" kindref="compound">ResultRequirements&lt;FERequirementType&gt;</ref>;</highlight></codeline>
<codeline lineno="51" refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" kindref="member">LocalView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FlatBasis::LocalView;</highlight></codeline>
<codeline lineno="52" refid="d2/d1d/a01277_1a35694c311107f0ab0a8d356567e55abb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1a35694c311107f0ab0a8d356567e55abb" kindref="member">Element</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element;</highlight></codeline>
<codeline lineno="53" refid="d2/d1d/a01277_1ac4d98d49f5d7dc9b3797097d918ae3f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="de/d90/a01313" kindref="compound">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="de/d90/a01313" kindref="compound">TraitsFromLocalView&lt;LocalView, useEigenRef&gt;</ref>;</highlight></codeline>
<codeline lineno="54" refid="d2/d1d/a01277_1a5cd6f438ba78449bf2ed541a86473ffe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1a5cd6f438ba78449bf2ed541a86473ffe" kindref="member">Geometry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Element::Geometry;</highlight></codeline>
<codeline lineno="55" refid="d2/d1d/a01277_1a0c13329c6d3d67101c1017b4df6bcefa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1a0c13329c6d3d67101c1017b4df6bcefa" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FlatBasis::GridView;</highlight></codeline>
<codeline lineno="56" refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="de/d90/a01313_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="57" refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" kindref="member">worldDim</ref><sp/>=<sp/><ref refid="de/d90/a01313_1a47ccda97cc8e04f87be6d2c3a165ba98" kindref="member">Traits::worlddim</ref>;</highlight></codeline>
<codeline lineno="58" refid="d2/d1d/a01277_1a1d9cc0964e73991e6a06ad38e7bfb78a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d2/d1d/a01277_1a1d9cc0964e73991e6a06ad38e7bfb78a" kindref="member">LocalBasisType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VolumeLoad<sp/>=<sp/>utils::LoadDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeumannBoundaryLoad<sp/>=<sp/>utils::LoadDefault&gt;</highlight></codeline>
<codeline lineno="74" refid="d2/d1d/a01277_1a99c658e2b0aa008672bfbc67e11c56db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1a99c658e2b0aa008672bfbc67e11c56db" kindref="member">LinearElastic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a5935304c8f08a48d0e3606949be5c8af" kindref="member">Basis</ref>&amp;<sp/>globalBasis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element&amp;<sp/>element,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>emod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VolumeLoad<sp/>p_volumeLoad<sp/>=<sp/>{},<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/>p_neumannBoundary<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeumannBoundaryLoad<sp/>p_neumannBoundaryLoad<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d2/d1d/a01277_1a46df9b5887e5f1c87dfd24aeca94824a" kindref="member">BaseDisp</ref>(globalBasis.flat(),<sp/>element),<sp/><ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>{p_neumannBoundary},<sp/><ref refid="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" kindref="member">emod_</ref>{emod},<sp/><ref refid="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" kindref="member">nu_</ref>{nu}<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().bind(element);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>first_child<sp/>=<sp/>this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().tree().child(0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/><sp/>=<sp/>first_child.finiteElement();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_shared&lt;const<sp/>Geometry&gt;(this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().geometry());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>fe.size();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>(fe.localBasis().order());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::CachedLocalBasis(fe.localBasis());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().getQuadratureRule(<ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>);<sp/>})</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().isTrimmed())</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref>.bind(this-&gt;localView().element().impl().getQuadratureRule(<ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>),<sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref>.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/><ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref>.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/><ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;VolumeLoad,<sp/>utils::LoadDefault&gt;)<sp/><ref refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" kindref="member">volumeLoad</ref><sp/>=<sp/>p_volumeLoad;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;NeumannBoundaryLoad,<sp/>utils::LoadDefault&gt;)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref><sp/>=<sp/>p_neumannBoundaryLoad;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(((not<sp/>p_neumannBoundary<sp/>and<sp/>not<sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref>)<sp/>or<sp/>(p_neumannBoundary<sp/>and<sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref>))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>you<sp/>pass<sp/>a<sp/>Neumann<sp/>boundary<sp/>you<sp/>should<sp/>also<sp/>pass<sp/>the<sp/>function<sp/>for<sp/>the<sp/>Neumann<sp/>load!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="111" refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.getGlobalSolution(<ref refid="da/ddc/a00288_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">Ikarus::FESolutions::displacement</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/><sp/><sp/><sp/><sp/>=<sp/>Ikarus::FEHelper::localSolutionBlockVector&lt;FERequirementType&gt;(d,<sp/>this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>(),<sp/>dx);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::StandardLocalFunction<sp/>uFunction(<ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref>,<sp/>disp,<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uFunction;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="127" refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::linearStrains(<ref refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(par,<sp/>dx));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/d50/a00301_1a90678a80e6b2b4849072623df02dae58" kindref="member">planeStressLinearElasticMaterialTangent</ref>(<ref refid="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" kindref="member">emod_</ref>,<sp/><ref refid="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" kindref="member">nu_</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/d50/a00301_1afc9c57d60ca4a8c1075c44d926e497a8" kindref="member">linearElasticMaterialTangent3D</ref>(<ref refid="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" kindref="member">emod_</ref>,<sp/><ref refid="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" kindref="member">nu_</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="d2/d1d/a01277_1a23a003fe0c49bfc18714da0889b00c65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a23a003fe0c49bfc18714da0889b00c65" kindref="member">materialTangentFunction</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[&amp;]([[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gp)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();<sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="d2/d1d/a01277_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" kindref="member">calculateScalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateScalarImpl&lt;double&gt;(par);<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="d2/d1d/a01277_1a35aa251bcd641913a8448b9502030349" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a35aa251bcd641913a8448b9502030349" kindref="member">calculateVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;&gt;<sp/>force)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateVectorImpl&lt;double&gt;(par,<sp/>force);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" kindref="member">calculateMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;&gt;<sp/>K)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(par);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d1/de3/a00306" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopJ<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(j)),<sp/>on(<ref refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K.template<sp/>block&lt;myDim,<sp/>myDim&gt;(i<sp/>*<sp/><ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref>,<sp/>j<sp/>*<sp/><ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref>)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="d2/d1d/a01277_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" kindref="member">calculateAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/dab/a01237" kindref="compound">ResultRequirementsType</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/da1/a01233" kindref="compound">ResultTypeMap&lt;double&gt;</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::Indices;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d1/de3/a00306" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(req.<ref refid="dc/dab/a01237_1a55da3509459a63cd2ffcb20df9039d0d" kindref="member">getFERequirements</ref>());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/>=<sp/><ref refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epsVoigt<sp/><sp/>=<sp/>eps.evaluate(local,<sp/>on(<ref refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="da/ddc/a00288_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">linearStress</ref><sp/>=<sp/>(C<sp/>*<sp/>epsVoigt).eval();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.<ref refid="dc/dab/a01237_1aa75a1bfbcca39d7c30d1b1141eae4795" kindref="member">isResultRequested</ref>(<ref refid="da/ddc/a00288_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">ResultType::linearStress</ref>))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="d6/da1/a01233_1aa399a96000daf40950e388eb0b23a7c0" kindref="member">insertOrAssignResult</ref>(<ref refid="da/ddc/a00288_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">ResultType::linearStress</ref>,<sp/><ref refid="da/ddc/a00288_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">linearStress</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>requested<sp/>result<sp/>type<sp/>is<sp/>NOT<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Geometry&gt;<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>;</highlight></codeline>
<codeline lineno="222" refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt;&gt;<sp/><ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;Eigen::Vector&lt;double,<sp/>worldDim&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector&lt;double, worldDim&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;)&gt;</highlight></codeline>
<codeline lineno="224" refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" kindref="member">volumeLoad</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;Eigen::Vector&lt;double,<sp/>worldDim&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector&lt;double, worldDim&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;)&gt;</highlight></codeline>
<codeline lineno="226" refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref>;</highlight></codeline>
<codeline lineno="227" refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/><ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>;</highlight></codeline>
<codeline lineno="228" refid="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" kindref="member">emod_</ref>;</highlight></codeline>
<codeline lineno="229" refid="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" kindref="member">nu_</ref>;</highlight></codeline>
<codeline lineno="230" refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref>{0};</highlight></codeline>
<codeline lineno="231" refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>{};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="235" refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" kindref="member">calculateScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>ScalarType<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="da/ddc/a00288_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">Ikarus::FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d1/de3/a00306" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ScalarType<sp/>energy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/>=<sp/>eps.evaluate(gpIndex,<sp/>on(<ref refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>(0.5<sp/>*<sp/>EVoigt.dot(C<sp/>*<sp/>EVoigt))<sp/>*<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" kindref="member">volumeLoad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uVal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>uFunction.evaluate(gpIndex);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;double,<sp/>Traits::worlddim&gt;<sp/>fext<sp/>=<sp/><ref refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" kindref="member">volumeLoad</ref>(<ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;global(gp.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>-=<sp/>uVal.dot(fext)<sp/>*<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>or<sp/>surface<sp/>loads,<sp/>i.e.,<sp/>neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref><sp/>and<sp/>not<sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>element<sp/>=<sp/>this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>intersection<sp/>:<sp/>intersections(<ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>-&gt;gridView(),<sp/>element))<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>-&gt;contains(intersection))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>quadLine<sp/>=<sp/>Dune::QuadratureRules&lt;double,<sp/>myDim<sp/>-<sp/>1&gt;::rule(intersection.type(),<sp/><ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>curQuad<sp/>:<sp/>quadLine)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>position<sp/>of<sp/>the<sp/>quadrature<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector&lt;double, myDim&gt;</ref>&amp;<sp/>quadPos<sp/>=<sp/>intersection.geometryInInside().global(curQuad.position());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integrationElement<sp/>=<sp/>intersection.geometry().integrationElement(curQuad.position());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>of<sp/>the<sp/>local<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uVal<sp/>=<sp/>uFunction.evaluate(quadPos);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>of<sp/>the<sp/>Neumann<sp/>data<sp/>at<sp/>the<sp/>current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>neumannValue<sp/>=<sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref>(intersection.geometry().global(curQuad.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>-=<sp/>neumannValue.dot(uVal)<sp/>*<sp/>curQuad.weight()<sp/>*<sp/>integrationElement;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="289" refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" kindref="member">calculateVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ScalarType&gt;<sp/>force,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="da/ddc/a00288_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">Ikarus::FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d1/de3/a00306" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stresses<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(C<sp/>*<sp/>eps.evaluate(gpIndex,<sp/>on(<ref refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>))).eval();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;myDim&gt;(<ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>*<sp/>i)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>stresses<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" kindref="member">volumeLoad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;double,<sp/>Traits::worlddim&gt;<sp/>fext<sp/>=<sp/><ref refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" kindref="member">volumeLoad</ref>(<ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;global(gp.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>udCi<sp/>=<sp/>uFunction.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;myDim&gt;(<ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>*<sp/>i)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/>udCi<sp/>*<sp/>fext<sp/>*<sp/><ref refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" kindref="member">geo_</ref>-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces,<sp/>boundary<sp/>forces,<sp/>i.e.,<sp/>at<sp/>the<sp/>Neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>element<sp/>=<sp/>this-&gt;<ref refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>intersection<sp/>:<sp/>intersections(<ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>-&gt;gridView(),<sp/>element))<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" kindref="member">neumannBoundary</ref>-&gt;contains(intersection))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integration<sp/>rule<sp/>along<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>quadLine<sp/>=<sp/>Dune::QuadratureRules&lt;double,<sp/>myDim<sp/>-<sp/>1&gt;::rule(intersection.type(),<sp/><ref refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" kindref="member">order</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>curQuad<sp/>:<sp/>quadLine)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector&lt;double, myDim&gt;</ref>&amp;<sp/>quadPos<sp/>=<sp/>intersection.geometryInInside().global(curQuad.position());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integrationElement<sp/>=<sp/>intersection.geometry().integrationElement(curQuad.position());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>of<sp/>the<sp/>local<sp/>function<sp/>wrt<sp/>the<sp/>i-th<sp/>coeff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>udCi<sp/>=<sp/>uFunction.evaluateDerivative(quadPos,<sp/>wrt(coeff(i)));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>of<sp/>the<sp/>Neumann<sp/>data<sp/>at<sp/>the<sp/>current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>neumannValue<sp/>=<sp/><ref refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" kindref="member">neumannBoundaryLoad</ref>(intersection.geometry().global(curQuad.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;myDim&gt;(<ref refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>*<sp/>i)<sp/>-=<sp/>udCi<sp/>*<sp/>neumannValue<sp/>*<sp/>curQuad.weight()<sp/>*<sp/>integrationElement;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>error<sp/>LinearElastic<sp/>depends<sp/>on<sp/>dune-localfefunctions,<sp/>which<sp/>is<sp/>not<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh"/>
  </compounddef>
</doxygen>
