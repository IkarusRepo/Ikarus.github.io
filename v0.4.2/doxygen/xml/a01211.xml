<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01211" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::DenseFlatAssembler</compoundname>
    <basecompoundref refid="a01203" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</basecompoundref>
    <includes refid="a00218" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEC</type>
      </param>
      <param>
        <type>typename DV</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01211_1a54962e56b865ac1c9065c42d96fb6780" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEC &gt;</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEC&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="555" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01211_1aa2e4d50fb9ac8b9d9922d98e9bcaf81b" prot="public" static="no">
        <type><ref refid="a01203" kindref="compound">VectorFlatAssembler</ref>&lt; FEC, DV &gt;</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::Base =  VectorFlatAssembler&lt;FEC, DV&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::Base</qualifiedname>
        <briefdescription>
<para>Type alias for the base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="556" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01211_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" static="no">
        <type>typename DV::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::Basis =  typename DV::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="558" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01211_1abf6599ec65ab1574a3282a553584f9e9" prot="public" static="no">
        <type>DV</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::DirichletValuesType =  DV</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="559" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01211_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" static="no">
        <type>FEC</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainer =  FEC</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="560" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01211_1a333c76dd0740ef9d6f4e8424021f0315" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::Requirement</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FERequirement =  typename FEContainerRaw::value_type::Requirement</definition>
        <argsstring></argsstring>
        <name>FERequirement</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FERequirement</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="561" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01211_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="562" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01195_1acee7beef45351811911847086414709e" prot="public" static="no">
        <type>typename Basis::GridView</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="42" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01195_1ad65c9d93766e445ec688411634e9bce6" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="a01195_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;, const <ref refid="a01195_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref>, <ref refid="a01195_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="44" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01195_1ab329b44ba5ca22e6bdb3f7d65953caa7" prot="public" static="no">
        <type><ref refid="a01271" kindref="compound">AffordanceCollection</ref>&lt; <ref refid="a00351_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>, <ref refid="a00351_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>, <ref refid="a00351_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::AffordanceCollectionType =  AffordanceCollection&lt;ScalarAffordance, VectorAffordance, MatrixAffordance&gt;</definition>
        <argsstring></argsstring>
        <name>AffordanceCollectionType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::AffordanceCollectionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="120" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01211_1a0022585432c65ff80b9c28c9bca85921" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matRaw_</definition>
        <argsstring></argsstring>
        <name>matRaw_</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matRaw_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Raw dense matrix for assembly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="625" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01211_1a762b412ccf930a31926b67d1257101af" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::mat_</definition>
        <argsstring></argsstring>
        <name>mat_</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::mat_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Dense matrix quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="626" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01211_1ae97ca8d69633081e2ee4cf13dcbfb675" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matRed_</definition>
        <argsstring></argsstring>
        <name>matRed_</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matRed_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Reduced dense matrix quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="627" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="627" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01211_1ad225386e9ac269916f38107030c5508d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::DenseFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues)</argsstring>
        <name>DenseFlatAssembler</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::DenseFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="a01195_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="a01195_1abf6599ec65ab1574a3282a553584f9e9" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues</declname>
        </param>
        <briefdescription>
<para>&lt; Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="a01211" kindref="compound">DenseFlatAssembler</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirichletValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="570" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="570" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="a01211_1a973f4f71b6465a78b9ded9c09b13497f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::MatrixXd &amp;</type>
        <definition>const Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</definition>
        <argsstring>(const FERequirement &amp;feRequirements, MatrixAffordance affordance, DBCOption dbcOption=DBCOption::Full)</argsstring>
        <name>matrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matrix</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
          <defval><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref></defval>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and the affordance. For <ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref> a zero is written on fixed degrees of freedom rows and columns, and a one is written on the diagonal. For <ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eeca65e65c8ab0d8609ce12fc68a03cb8e00" kindref="member">DBCOption::Raw</ref> the untouched matrix is returned. For <ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eeca4335949a935758ca1b570689c3c6750b" kindref="member">DBCOption::Reduced</ref> the matrix is reduced in size by removing the fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affordance</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix affordance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dbcOption</parametername>
</parameternamelist>
<parameterdescription>
<para>The DBCOption</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the raw dense matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="585" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="585" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="a01211_1a6381a98e1358aa8e13ceaa3ac3011e9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::MatrixXd &amp;</type>
        <definition>const Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</definition>
        <argsstring>(DBCOption dbcOption)</argsstring>
        <name>matrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matrix</qualifiedname>
        <param>
          <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by the bound feRequirements and the affordance. For <ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref> a zero is written on fixed degrees of freedom rows and columns, and a one is written on the diagonal. For <ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eeca65e65c8ab0d8609ce12fc68a03cb8e00" kindref="member">DBCOption::Raw</ref> the untouched matrix is returned. For <ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eeca4335949a935758ca1b570689c3c6750b" kindref="member">DBCOption::Reduced</ref> the matrix is reduced in size by removing the fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbcOption</parametername>
</parameternamelist>
<parameterdescription>
<para>The DBCOption </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the raw dense matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="606" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="606" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="a01211_1aa198c22fc8dce6f01ff2984b474a0bd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::MatrixXd &amp;</type>
        <definition>const Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</definition>
        <argsstring>()</argsstring>
        <name>matrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> \brief  Calculates the matrix quantity requested by the bound  feRequirements, the affordance and the
</verbatim> dBCOption. <simplesect kind="see"><para>const Eigen::MatrixXd&amp; <ref refid="a01211_1a6381a98e1358aa8e13ceaa3ac3011e9c" kindref="member">matrix(DBCOption dbcOption)</ref> </para>
</simplesect>
<simplesect kind="return"><para>Reference to the dense matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="616" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="616" bodyend="616"/>
        <referencedby refid="a01211_1a6381a98e1358aa8e13ceaa3ac3011e9c" compoundref="a00218" startline="606" endline="608">Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01203_1a4bf435f73f05ccffa506159139a4a5fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</definition>
        <argsstring>(const FERequirement &amp;feRequirements, VectorAffordance affordance, DBCOption dbcOption=DBCOption::Full)</argsstring>
        <name>vector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vector</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
          <defval><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref></defval>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by the feRequirements and the affordance. Depending on the requested DBCOption, the raw, reduced or full vector is returned. Raw means the degrees of freedom associated with dirichlet boundary conditions are not changed. Full means that degrees of freedom associated with dirichlet boundary conditions are set to zero in the vector. Reduced means that degrees of freedom associated with dirichlet boundary conditions are removed and the returned vector has reduced size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affordance</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector affordance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dbcOption</parametername>
</parameternamelist>
<parameterdescription>
<para>The DBCOption </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="362" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="362" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="a01203_1ac06d14d576bc6a18c3d66f7774fc0c59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</definition>
        <argsstring>(DBCOption dbcOption)</argsstring>
        <name>vector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vector</qualifiedname>
        <param>
          <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by the bound feRequirements and the affordance. Depending on the requested DBCOption, the raw, reduced or full vector is returned. Raw means the degrees of freedom associated with dirichlet boundary conditions are not changed. Full means that degrees of freedom associated with dirichlet boundary conditions are set to zero in the vector. Reduced means that degrees of freedom associated with dirichlet boundary conditions are removed and the returned vector has reduced size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbcOption</parametername>
</parameternamelist>
<parameterdescription>
<para>The DBCOption </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="384" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="a01203_1a2a64033f5c431c36f8585cb2da243dcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</definition>
        <argsstring>()</argsstring>
        <name>vector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vector</qualifiedname>
        <briefdescription>
<para>Calculates the vectorial quantity requested by the bound feRequirements, the affordance and the dBCOption. Depending on the DBCOption, the raw, reduced or full vector is returned. Raw means the degrees of freedom associated with dirichlet boundary conditions are not changed. Full means that degrees of freedom associated with dirichlet boundary conditions are set to zero in the vector. Reduced means that degrees of freedom associated with dirichlet boundary conditions are removed and the returned vector has reduced size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="396" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="396" bodyend="396"/>
        <referencedby refid="a01203_1ac06d14d576bc6a18c3d66f7774fc0c59" compoundref="a00218" startline="384" endline="386">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01199_1a10b33007705d5b1f6884c7fb051d2060" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEC, DV &gt;::scalar</definition>
        <argsstring>(const FERequirement &amp;feRequirements, ScalarAffordance affordance)</argsstring>
        <name>scalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::scalar</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and affordance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affordance</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar affordance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="285" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="a01199_1a2f5173936e823cb5624159e0cb1abf79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEC, DV &gt;::scalar</definition>
        <argsstring>()</argsstring>
        <name>scalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::scalar</qualifiedname>
        <briefdescription>
<para>Calculates the scalar quantity requested by the bound feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="294" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="71" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="77" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; B, FEC &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="86" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1aa8da4086d468797668b6d551129e96dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="92" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="100" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="108" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="116" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a31f0e6f22fd268a6b1ca813db7cbc132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(const FERequirement &amp;req, AffordanceCollectionType affordanceCollection, DBCOption dbcOption=DBCOption::Full)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="a01195_1ab329b44ba5ca22e6bdb3f7d65953caa7" kindref="member">AffordanceCollectionType</ref></type>
          <declname>affordanceCollection</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
          <defval><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref></defval>
        </param>
        <briefdescription>
<para>Binds the assembler to a set of finite element requirement and affordance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affordanceCollection</parametername>
</parameternamelist>
<parameterdescription>
<para>The affordance collection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="128" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a3d33fb50019b516b6c9a2f32b3add005" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(const FERequirement &amp;req)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Binds the assembler to a finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="140" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a00f5e3e4ca579dea6acecf9625910658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(AffordanceCollectionType affordanceCollection)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type><ref refid="a01195_1ab329b44ba5ca22e6bdb3f7d65953caa7" kindref="member">AffordanceCollectionType</ref></type>
          <declname>affordanceCollection</declname>
        </param>
        <briefdescription>
<para>Binds the assembler to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>affordanceCollection</parametername>
</parameternamelist>
<parameterdescription>
<para>The affordance collection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="147" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a363ca54e8c3ae9838ab7621cecf24930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(DBCOption dbcOption)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
        </param>
        <briefdescription>
<para>Binds the assembler to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbcOption</parametername>
</parameternamelist>
<parameterdescription>
<para>The EnforcingDBC option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="156" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1add087b8554f56a2c014de606fd253301" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</definition>
        <argsstring>() const</argsstring>
        <name>bound</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bound</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to a finite element requirement and affordance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="164" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="164" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="a01195_1a6741ecbc2783722b5a049ce0939f94b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::boundToRequirement</definition>
        <argsstring>() const</argsstring>
        <name>boundToRequirement</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::boundToRequirement</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to a finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="177" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="177" bodyend="179"/>
        <referencedby refid="a01195_1add087b8554f56a2c014de606fd253301" compoundref="a00218" startline="164" endline="169">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01195_1a4a3a1767c8d26f75fe217de7d099844d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::boundToAffordanceCollection</definition>
        <argsstring>() const</argsstring>
        <name>boundToAffordanceCollection</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::boundToAffordanceCollection</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="187" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="187" bodyend="189"/>
        <referencedby refid="a01195_1add087b8554f56a2c014de606fd253301" compoundref="a00218" startline="164" endline="169">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01195_1a68d6a71fc6866363e9b8519c8f4334b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::boundToDBCOption</definition>
        <argsstring>() const</argsstring>
        <name>boundToDBCOption</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::boundToDBCOption</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="197" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="197" bodyend="199"/>
        <referencedby refid="a01195_1add087b8554f56a2c014de606fd253301" compoundref="a00218" startline="164" endline="169">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01195_1a6424b3d5449da29188bb931abb8ba551" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
        <definition>FERequirement &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::requirement</definition>
        <argsstring>()</argsstring>
        <name>requirement</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::requirement</qualifiedname>
        <briefdescription>
<para>Returns the requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="205" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="205" bodyend="210"/>
        <referencedby refid="a01207_1a67e315001064876edfa09041b5627ba3" compoundref="a00218" startline="479" endline="481">Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
        <referencedby refid="a01211_1a6381a98e1358aa8e13ceaa3ac3011e9c" compoundref="a00218" startline="606" endline="608">Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
        <referencedby refid="a01199_1a2f5173936e823cb5624159e0cb1abf79" compoundref="a00218" startline="294" endline="294">Ikarus::ScalarAssembler&lt; FEC, DV &gt;::scalar</referencedby>
        <referencedby refid="a01203_1ac06d14d576bc6a18c3d66f7774fc0c59" compoundref="a00218" startline="384" endline="386">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01195_1ae194120d201120bc7a4a6a929d576f94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01195_1ab329b44ba5ca22e6bdb3f7d65953caa7" kindref="member">AffordanceCollectionType</ref></type>
        <definition>AffordanceCollectionType Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::affordanceCollection</definition>
        <argsstring>() const</argsstring>
        <name>affordanceCollection</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::affordanceCollection</qualifiedname>
        <briefdescription>
<para>Returns the affordance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="216" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="216" bodyend="221"/>
        <referencedby refid="a01195_1a31f0e6f22fd268a6b1ca813db7cbc132" compoundref="a00218" startline="128" endline="133">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</referencedby>
        <referencedby refid="a01207_1a67e315001064876edfa09041b5627ba3" compoundref="a00218" startline="479" endline="481">Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
        <referencedby refid="a01211_1a6381a98e1358aa8e13ceaa3ac3011e9c" compoundref="a00218" startline="606" endline="608">Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
        <referencedby refid="a01199_1a2f5173936e823cb5624159e0cb1abf79" compoundref="a00218" startline="294" endline="294">Ikarus::ScalarAssembler&lt; FEC, DV &gt;::scalar</referencedby>
        <referencedby refid="a01203_1ac06d14d576bc6a18c3d66f7774fc0c59" compoundref="a00218" startline="384" endline="386">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01195_1a74f21be5d0b287d3dee421301051e4b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a00351_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
        <definition>DBCOption Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::dBCOption</definition>
        <argsstring>() const</argsstring>
        <name>dBCOption</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::dBCOption</qualifiedname>
        <briefdescription>
<para>Returns the dirichlet boundary condition enforcement option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="227" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="227" bodyend="232"/>
        <referencedby refid="a01207_1aae15a4403c966b9e074636d4e828873b" compoundref="a00218" startline="491" endline="491">Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
        <referencedby refid="a01211_1aa198c22fc8dce6f01ff2984b474a0bd4" compoundref="a00218" startline="616" endline="616">Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matrix</referencedby>
        <referencedby refid="a01203_1a2a64033f5c431c36f8585cb2da243dcf" compoundref="a00218" startline="396" endline="396">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vector</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01211_1ac0c4d7bfcdb1bd788fb9c664ef52600b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::assembleRawMatrixImpl</definition>
        <argsstring>(const FERequirement &amp;feRequirements, MatrixAffordance affordance, Eigen::MatrixXd &amp;assemblyMat)</argsstring>
        <name>assembleRawMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::assembleRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="619" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="271" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="a01211_1a5d6fadc93141ed4e85dd824deb0cc6f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::getRawMatrixImpl</definition>
        <argsstring>(const FERequirement &amp;feRequirements, MatrixAffordance affordance)</argsstring>
        <name>getRawMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="621" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="293" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="a01211_1a8fdca8c850d4031b2ce783f83243e33c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::getMatrixImpl</definition>
        <argsstring>(const FERequirement &amp;feRequirements, MatrixAffordance affordance)</argsstring>
        <name>getMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="622" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="300" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="a01211_1af9a51a3b8f6ca4dbfcde0f19870d3ae4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::getReducedMatrixImpl</definition>
        <argsstring>(const FERequirement &amp;feRequirements, MatrixAffordance affordance)</argsstring>
        <name>getReducedMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getReducedMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01195_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00351_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="623" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="316" bodyend="344"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01211" kindref="compound">DenseFlatAssembler</ref> assembles matrix quantities using a flat basis Indexing strategy. The matrix is stored in a dense matrix format. This format is exploited during the assembly process. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEC</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DV</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Requires <ref refid="a01759" kindref="compound">Ikarus::Concepts::FlatIndexBasis&lt;BasisEmbedded&gt;</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01211"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01195"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01199"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01203"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01211"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01195"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01199"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01203"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="552" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="553" bodyend="628"/>
    <listofallmembers>
      <member refid="a01195_1ae194120d201120bc7a4a6a929d576f94" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>affordanceCollection</name></member>
      <member refid="a01195_1ab329b44ba5ca22e6bdb3f7d65953caa7" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>AffordanceCollectionType</name></member>
      <member refid="a01211_1ac0c4d7bfcdb1bd788fb9c664ef52600b" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>assembleRawMatrixImpl</name></member>
      <member refid="a01211_1aa2e4d50fb9ac8b9d9922d98e9bcaf81b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>Base</name></member>
      <member refid="a01211_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>Basis</name></member>
      <member refid="a01195_1a31f0e6f22fd268a6b1ca813db7cbc132" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>bind</name></member>
      <member refid="a01195_1a3d33fb50019b516b6c9a2f32b3add005" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>bind</name></member>
      <member refid="a01195_1a00f5e3e4ca579dea6acecf9625910658" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>bind</name></member>
      <member refid="a01195_1a363ca54e8c3ae9838ab7621cecf24930" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>bind</name></member>
      <member refid="a01195_1add087b8554f56a2c014de606fd253301" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>bound</name></member>
      <member refid="a01195_1a4a3a1767c8d26f75fe217de7d099844d" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>boundToAffordanceCollection</name></member>
      <member refid="a01195_1a68d6a71fc6866363e9b8519c8f4334b1" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>boundToDBCOption</name></member>
      <member refid="a01195_1a6741ecbc2783722b5a049ce0939f94b7" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>boundToRequirement</name></member>
      <member refid="a01195_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="a01195_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="a01195_1a74f21be5d0b287d3dee421301051e4b3" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>dBCOption</name></member>
      <member refid="a01211_1ad225386e9ac269916f38107030c5508d" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>DenseFlatAssembler</name></member>
      <member refid="a01211_1abf6599ec65ab1574a3282a553584f9e9" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="a01195_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="a01211_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="a01211_1a54962e56b865ac1c9065c42d96fb6780" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="a01195_1ad65c9d93766e445ec688411634e9bce6" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="a01211_1a333c76dd0740ef9d6f4e8424021f0315" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FERequirement</name></member>
      <member refid="a01195_1aa8da4086d468797668b6d551129e96dd" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="a01195_1a09b56d7e0fd2161b781450e89a8a32d6" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="a01211_1a8fdca8c850d4031b2ce783f83243e33c" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getMatrixImpl</name></member>
      <member refid="a01211_1a5d6fadc93141ed4e85dd824deb0cc6f8" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawMatrixImpl</name></member>
      <member refid="a01211_1af9a51a3b8f6ca4dbfcde0f19870d3ae4" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedMatrixImpl</name></member>
      <member refid="a01211_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="a01195_1acee7beef45351811911847086414709e" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>GridView</name></member>
      <member refid="a01195_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="a01211_1a762b412ccf930a31926b67d1257101af" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>mat_</name></member>
      <member refid="a01211_1a0022585432c65ff80b9c28c9bca85921" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matRaw_</name></member>
      <member refid="a01211_1ae97ca8d69633081e2ee4cf13dcbfb675" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matRed_</name></member>
      <member refid="a01211_1a973f4f71b6465a78b9ded9c09b13497f" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matrix</name></member>
      <member refid="a01211_1a6381a98e1358aa8e13ceaa3ac3011e9c" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matrix</name></member>
      <member refid="a01211_1aa198c22fc8dce6f01ff2984b474a0bd4" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matrix</name></member>
      <member refid="a01195_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="a01195_1a6424b3d5449da29188bb931abb8ba551" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>requirement</name></member>
      <member refid="a01199_1a10b33007705d5b1f6884c7fb051d2060" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>scalar</name></member>
      <member refid="a01199_1a2f5173936e823cb5624159e0cb1abf79" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>scalar</name></member>
      <member refid="a01199_1aea70457453f4efbf67bf9541c43afff2" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="a01195_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>size</name></member>
      <member refid="a01203_1a4bf435f73f05ccffa506159139a4a5fa" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>vector</name></member>
      <member refid="a01203_1ac06d14d576bc6a18c3d66f7774fc0c59" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>vector</name></member>
      <member refid="a01203_1a2a64033f5c431c36f8585cb2da243dcf" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>vector</name></member>
      <member refid="a01203_1ae1d7d3cba6d1c1ab4373fff67e1a300c" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
