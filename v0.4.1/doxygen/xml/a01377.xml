<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01377" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::VolumeLoad</compoundname>
    <includes refid="a00254" local="no">ikarus/finiteelements/mechanics/loads/volume.hh</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="a01245" kindref="compound">PreFE</ref></type>
      </param>
      <param>
        <type>typename <ref refid="a01241" kindref="compound">FE</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01377_1a136c07d1bd0691d3935438ad6ee0fe0b" prot="public" static="no">
        <type><ref refid="a01245_1a9d8e27b97d32f23d3f27b43d67719712" kindref="member">PreFE::Traits</ref></type>
        <definition>using Ikarus::VolumeLoad&lt; PreFE, FE &gt;::Traits =  PreFE::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::VolumeLoad::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="48" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01377_1a984a422b523e0492e4ad99458c068413" prot="public" static="no">
        <type>typename <ref refid="a01301_1a07ae507e77464265d631a82eea32e45a" kindref="member">Traits::FERequirementType</ref></type>
        <definition>using Ikarus::VolumeLoad&lt; PreFE, FE &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::VolumeLoad::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="49" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01377_1ae433e4b77b746f7f7f180e60c43d0259" prot="public" static="no">
        <type><ref refid="a01381" kindref="compound">VolumeLoadPre</ref>&lt; <ref refid="a01377_1a390f831728fee1fe85969e060566473c" kindref="member">worldDim</ref> &gt;</type>
        <definition>using Ikarus::VolumeLoad&lt; PreFE, FE &gt;::Pre =  VolumeLoadPre&lt;worldDim&gt;</definition>
        <argsstring></argsstring>
        <name>Pre</name>
        <qualifiedname>Ikarus::VolumeLoad::Pre</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="51" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01377_1a390f831728fee1fe85969e060566473c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::VolumeLoad&lt; PreFE, FE &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::VolumeLoad::worldDim</qualifiedname>
        <initializer>= <ref refid="a01301_1aa72f0d4219850668dc72117052455aca" kindref="member">Traits::worlddim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="50" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="50" bodyend="-1"/>
        <referencedby refid="a01377_1a83859bce7bc0638942c2741f3b70bc72" compoundref="a00254" startline="87" endline="106">Ikarus::VolumeLoad&lt; PreFE, FE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01377_1a954e5a1c1b3f08e2f8b8947c8978e49a" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="a01377_1a390f831728fee1fe85969e060566473c" kindref="member">worldDim</ref> &gt;(const <ref refid="a01573" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01377_1a390f831728fee1fe85969e060566473c" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::VolumeLoad&lt; PreFE, FE &gt;::volumeLoad_</definition>
        <argsstring></argsstring>
        <name>volumeLoad_</name>
        <qualifiedname>Ikarus::VolumeLoad::volumeLoad_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="114" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01377_1a349da3ed5869491f4351dc09dbccf314" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::VolumeLoad&lt; PreFE, FE &gt;::VolumeLoad</definition>
        <argsstring>(const Pre &amp;pre={})</argsstring>
        <name>VolumeLoad</name>
        <qualifiedname>Ikarus::VolumeLoad::VolumeLoad</qualifiedname>
        <param>
          <type>const <ref refid="a01377_1ae433e4b77b746f7f7f180e60c43d0259" kindref="member">Pre</ref> &amp;</type>
          <declname>pre</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the Loads class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pre</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume load pre object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="58" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="58" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01377_1a984ec36198b6ab4ba72b98869359d89b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>::value auto</type>
        <definition>::value auto Ikarus::VolumeLoad&lt; PreFE, FE &gt;::calculateAtImpl</definition>
        <argsstring>(const FERequirementType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, Dune::PriorityTag&lt; 0 &gt;) const</argsstring>
        <name>calculateAtImpl</name>
        <qualifiedname>Ikarus::VolumeLoad::calculateAtImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01377_1a984a422b523e0492e4ad99458c068413" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01573" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01301_1ac9913312b3916225484a0e7125e4f94a" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>Dune::PriorityTag&lt; 0 &gt;</type>
        </param>
    <requiresclause>Dune::AlwaysFalse&lt;RT&lt;double, 1, 1&gt;&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="64" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="64" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="a01377_1a266e746c131e8037b26c2bc776ab23ac" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::VolumeLoad&lt; PreFE, FE &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::VolumeLoad::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01377_1a984a422b523e0492e4ad99458c068413" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="68" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="68" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="a01377_1a83859bce7bc0638942c2741f3b70bc72" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::VolumeLoad&lt; PreFE, FE &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::VolumeLoad::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01377_1a984a422b523e0492e4ad99458c068413" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="87" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="87" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01377_1a60a96f9bfe831cc61faa30e652a8266e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::VolumeLoad&lt; PreFE, FE &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::VolumeLoad::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01377_1a984a422b523e0492e4ad99458c068413" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="109" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="109" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01377_1a523b8d5b1f34554e6e384f71e0d4a403" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::VolumeLoad&lt; PreFE, FE &gt;::underlying</definition>
        <argsstring>() const</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::VolumeLoad::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="116" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="a01377_1afb3524715f086c9f43df3d522702643e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::VolumeLoad&lt; PreFE, FE &gt;::underlying</definition>
        <argsstring>()</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::VolumeLoad::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="117" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="117" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01377" kindref="compound">VolumeLoad</ref> class represents distributed volume load that can be applied. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a01245" kindref="compound">PreFE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the pre finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="a01241" kindref="compound">FE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the finite element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="45" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="46" bodyend="118"/>
    <listofallmembers>
      <member refid="a01377_1a984ec36198b6ab4ba72b98869359d89b" prot="protected" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>calculateAtImpl</name></member>
      <member refid="a01377_1a60a96f9bfe831cc61faa30e652a8266e" prot="protected" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01377_1a266e746c131e8037b26c2bc776ab23ac" prot="protected" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>calculateScalarImpl</name></member>
      <member refid="a01377_1a83859bce7bc0638942c2741f3b70bc72" prot="protected" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>calculateVectorImpl</name></member>
      <member refid="a01377_1a984a422b523e0492e4ad99458c068413" prot="public" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>FERequirementType</name></member>
      <member refid="a01377_1ae433e4b77b746f7f7f180e60c43d0259" prot="public" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>Pre</name></member>
      <member refid="a01377_1a136c07d1bd0691d3935438ad6ee0fe0b" prot="public" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>Traits</name></member>
      <member refid="a01377_1a523b8d5b1f34554e6e384f71e0d4a403" prot="private" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>underlying</name></member>
      <member refid="a01377_1afb3524715f086c9f43df3d522702643e" prot="private" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>underlying</name></member>
      <member refid="a01377_1a349da3ed5869491f4351dc09dbccf314" prot="public" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>VolumeLoad</name></member>
      <member refid="a01377_1a954e5a1c1b3f08e2f8b8947c8978e49a" prot="private" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>volumeLoad_</name></member>
      <member refid="a01377_1a390f831728fee1fe85969e060566473c" prot="public" virt="non-virtual"><scope>Ikarus::VolumeLoad</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
