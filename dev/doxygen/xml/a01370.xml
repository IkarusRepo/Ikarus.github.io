<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01370" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::ResultEvaluators::VonMises</compoundname>
    <includes refid="a00239" local="no">ikarus/io/resultevaluators.hh</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>dim</declname>
        <defname>dim</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01370_1afd2a803b2aaf8c2fb4296c1dc1f431fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultEvaluators::VonMises&lt; dim &gt;::operator()</definition>
        <argsstring>(const auto &amp;resultArray, const int comp) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Ikarus::ResultEvaluators::VonMises::operator()</qualifiedname>
        <param>
          <type>const auto &amp;</type>
          <declname>resultArray</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
<para>Calculate the result quantity (von Mises stress) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resultArray</parametername>
</parameternamelist>
<parameterdescription>
<para>EigenMatrix containing the stress state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>component of result (not used here) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>von Mises stress </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="36" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="36" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01370_1a473eff527cf8488ad4ef21749b5461cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Ikarus::ResultEvaluators::VonMises&lt; dim &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::ResultEvaluators::VonMises::name</qualifiedname>
        <briefdescription>
<para>Get the name of the result type (<ref refid="a01370" kindref="compound">VonMises</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String representing the name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="60" column="22" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="a01370_1a9bfcf1298b628c002d6431957dc1df53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Ikarus::ResultEvaluators::VonMises&lt; dim &gt;::ncomps</definition>
        <argsstring>()</argsstring>
        <name>ncomps</name>
        <qualifiedname>Ikarus::ResultEvaluators::VonMises::ncomps</qualifiedname>
        <briefdescription>
<para>Get the number of components in the result (always 1 for <ref refid="a01370" kindref="compound">VonMises</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of components </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="66" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="66" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(dim == 2 or dim == 3)    </requiresclause>
    <briefdescription>
<para>Struct for calculating von Mises stress. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="a01370" kindref="compound">VonMises</ref> struct provides a function call operator to calculate von Mises stress. In 2D, this assumes a plane stress state <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of stress state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="28" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="29" bodyend="67"/>
    <listofallmembers>
      <member refid="a01370_1a473eff527cf8488ad4ef21749b5461cd" prot="public" virt="non-virtual"><scope>Ikarus::ResultEvaluators::VonMises</scope><name>name</name></member>
      <member refid="a01370_1a9bfcf1298b628c002d6431957dc1df53" prot="public" virt="non-virtual"><scope>Ikarus::ResultEvaluators::VonMises</scope><name>ncomps</name></member>
      <member refid="a01370_1afd2a803b2aaf8c2fb4296c1dc1f431fe" prot="public" virt="non-virtual"><scope>Ikarus::ResultEvaluators::VonMises</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
