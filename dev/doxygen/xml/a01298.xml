<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01298" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::LinearElastic</compoundname>
    <basecompoundref refid="a01226" prot="public" virt="non-virtual">Ikarus::PowerBasisFE&lt; B &gt;</basecompoundref>
    <basecompoundref refid="a01306" prot="public" virt="non-virtual">Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</basecompoundref>
    <basecompoundref refid="a01302" prot="public" virt="non-virtual">Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</basecompoundref>
    <includes refid="a02455" local="no">ikarus/finiteelements/mechanics/linearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename B</type>
      </param>
      <param>
        <type>typename FER</type>
        <defval><ref refid="a01250" kindref="compound">FERequirements</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01298_1af7263c3f57fc7fddb14e13f1e468c55e" prot="public" static="no">
        <type><ref refid="a01258" kindref="compound">FETraits</ref>&lt; B, FER, useEigenRef &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::Traits =  FETraits&lt;B, FER, useEigenRef&gt;</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::LinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="51" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a686371c5896eae89ba0d81943eefc6d6" prot="public" static="no">
        <type>typename <ref refid="a01258_1ac38b6d826a6105100cb178a8e896e4bc" kindref="member">Traits::Basis</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::Basis =  typename Traits::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::LinearElastic::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="52" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a34d2bf79d243ef70b24780d7632be86e" prot="public" static="no">
        <type>typename <ref refid="a01258_1aa7a2eee69d868c1ca3bee04cf862d099" kindref="member">Traits::FlatBasis</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::FlatBasis =  typename Traits::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::LinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="53" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1acb9f819664701f2672f17dce540398bd" prot="public" static="no">
        <type>typename <ref refid="a01258_1af25ce4c31d34d582828b36c3ab80208f" kindref="member">Traits::FERequirementType</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::LinearElastic::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="54" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a2e5553a4af3992305782e011ad77805b" prot="public" static="no">
        <type>typename <ref refid="a01258_1ab45140c593175ec84e44e41c8681da90" kindref="member">Traits::LocalView</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::LinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="55" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1ade093ac3f4cf3bc94e4af77cc16aac7d" prot="public" static="no">
        <type>typename <ref refid="a01258_1a740ef7b268cb90f85febb9f0b0504993" kindref="member">Traits::Geometry</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::Geometry =  typename Traits::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::LinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="56" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a4b2b0a0b713bed04b793afd14b45d923" prot="public" static="no">
        <type>typename <ref refid="a01258_1aba50215af089c1b5508527fe4bc1b936" kindref="member">Traits::GridView</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::LinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="57" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a5d971c8e8339046424e4d1f1f2c9a16d" prot="public" static="no">
        <type>typename <ref refid="a01258_1a66ef325fde5f1608478498ae6581e33b" kindref="member">Traits::Element</ref></type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::LinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="58" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a8acfbc7577c1d54c9bda196afc94834e" prot="public" static="no">
        <type><ref refid="a01226" kindref="compound">PowerBasisFE</ref>&lt; <ref refid="a01298_1a686371c5896eae89ba0d81943eefc6d6" kindref="member">Basis</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::BaseDisp =  PowerBasisFE&lt;Basis&gt;</definition>
        <argsstring></argsstring>
        <name>BaseDisp</name>
        <qualifiedname>Ikarus::LinearElastic::BaseDisp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="59" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1acb4bb1f6ef106b48fc3db43487fcd614" prot="public" static="no">
        <type><ref refid="a01306" kindref="compound">Volume</ref>&lt; <ref refid="a01298" kindref="compound">LinearElastic</ref>, <ref refid="a01226_1a5ee5556c492d3350b2628c3945e625c6" kindref="member">Traits</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::VolumeType =  Volume&lt;LinearElastic, Traits&gt;</definition>
        <argsstring></argsstring>
        <name>VolumeType</name>
        <qualifiedname>Ikarus::LinearElastic::VolumeType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="60" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a7c1e9da574d58348cd8c504e2f9e73ad" prot="public" static="no">
        <type><ref refid="a01302" kindref="compound">Traction</ref>&lt; <ref refid="a01298" kindref="compound">LinearElastic</ref>, <ref refid="a01226_1a5ee5556c492d3350b2628c3945e625c6" kindref="member">Traits</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::TractionType =  Traction&lt;LinearElastic, Traits&gt;</definition>
        <argsstring></argsstring>
        <name>TractionType</name>
        <qualifiedname>Ikarus::LinearElastic::TractionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="61" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01298_1a60a2639d979520ad3a864a73913a6206" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="a01226_1aef04f88f70cb50c75515ee00412d5675" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().localBasis())</type>
        <definition>using Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::LinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="63" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01226_1acbfd17b79bb5882e5c7e74f922bae703" prot="public" static="no">
        <type>typename <ref refid="a01258_1aafbad167b59d1204a948e4aed9e7c8ea" kindref="member">Traits::GlobalIndex</ref></type>
        <definition>using Ikarus::PowerBasisFE&lt; B &gt;::GlobalIndex =  typename Traits::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::PowerBasisFE::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="29" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01226_1a5574b829dfa9bad6a600c7d203b73442" prot="public" static="no">
        <type>typename <ref refid="a01258_1a66ef325fde5f1608478498ae6581e33b" kindref="member">Traits::Element</ref></type>
        <definition>using Ikarus::PowerBasisFE&lt; B &gt;::GridElement =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>GridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE::GridElement</qualifiedname>
        <briefdescription>
<para>Type of the grid element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="30" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01298_1a8bbfc1afb01386fcde2a491f13fbc877" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::LinearElastic::myDim</qualifiedname>
        <initializer>= <ref refid="a01258_1a172046f544deb556462c3a2eb84aa479" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="62" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="62" bodyend="-1"/>
        <referencedby refid="a01298_1a078e95d6b83829fa717778f47ca33872" compoundref="a02455" startline="184" endline="204">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01298_1a8e52623d4850ccde18d34ee34b028ef7" compoundref="a02455" startline="264" endline="287">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01298_1a32ffbf97a5709decb3db826952ae1df5" compoundref="a02455" startline="139" endline="144">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01226_1a3a162d15d209caf4db3d68917ed6fa69" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::PowerBasisFE&lt; B &gt;::num_children</definition>
        <argsstring></argsstring>
        <name>num_children</name>
        <qualifiedname>Ikarus::PowerBasisFE::num_children</qualifiedname>
        <initializer>= FlatBasis::PreBasis::Node::degree()</initializer>
        <briefdescription>
<para>Number of children in the powerBasis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="48" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="48" bodyend="-1"/>
        <referencedby refid="a01226_1ae25d85da7c545b079c74d878eb71ce1b" compoundref="a00188" startline="63" endline="72">Ikarus::PowerBasisFE&lt; B &gt;::globalFlatIndices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01306_1a073fb2d3afae0bd3e0afe1c2534f9afd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::worldDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="25" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01302_1a1d2ad110e77cf497bc88ac1a8735fc97" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::worldDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="29" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01298_1af8a0ce4469397ea1550ef6e95fe672dd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="a01298_1ade093ac3f4cf3bc94e4af77cc16aac7d" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::LinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="229" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01298_1aa128fdbb1b45a83764cd30e33f6068ba" prot="private" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="a01298_1a60a2639d979520ad3a864a73913a6206" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::localBasis_</definition>
        <argsstring></argsstring>
        <name>localBasis_</name>
        <qualifiedname>Ikarus::LinearElastic::localBasis_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="230" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01298_1a8ad2fd56b151d9a2e0e798a47e6374c8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::emod_</definition>
        <argsstring></argsstring>
        <name>emod_</name>
        <qualifiedname>Ikarus::LinearElastic::emod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="231" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01298_1aeb3e3054885ec8fa67f54d641c1a3ae7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>Ikarus::LinearElastic::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="232" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01298_1a0be1959d68d3b192cb780ff45931abcb" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::numberOfNodes_</definition>
        <argsstring></argsstring>
        <name>numberOfNodes_</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="233" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01298_1a7377e4a955688de9055a06da38c58277" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <qualifiedname>Ikarus::LinearElastic::order_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="234" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01298_1a75984084ffce4fdda25c9cdd15d8e98d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumeLoad</type>
            <defval><ref refid="a01486" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
          <param>
            <type>typename NeumannBoundaryLoad</type>
            <defval><ref refid="a01486" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::LinearElastic</definition>
        <argsstring>(const Basis &amp;globalBasis, const typename LocalView::Element &amp;element, double emod, double nu, VolumeLoad volumeLoad={}, const BoundaryPatch&lt; GridView &gt; *neumannBoundary=nullptr, NeumannBoundaryLoad neumannBoundaryLoad={})</argsstring>
        <name>LinearElastic</name>
        <qualifiedname>Ikarus::LinearElastic::LinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1a686371c5896eae89ba0d81943eefc6d6" kindref="member">Basis</ref> &amp;</type>
          <declname>globalBasis</declname>
        </param>
        <param>
          <type>const typename LocalView::Element &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>double</type>
          <declname>emod</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>VolumeLoad</type>
          <declname>volumeLoad</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="a01298_1a4b2b0a0b713bed04b793afd14b45d923" kindref="member">GridView</ref> &gt; *</type>
          <declname>neumannBoundary</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>NeumannBoundaryLoad</type>
          <declname>neumannBoundaryLoad</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01298" kindref="compound">LinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the volume load function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NeumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>The global basis for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element for which the finite element is constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emod</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a01306" kindref="compound">Volume</ref> load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch (default is nullptr). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="79" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="79" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1aadc2cb33ce478106a0d8c4c7c89a76a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::displacementFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::LinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the displacement function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="113" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="113" bodyend="119"/>
        <referencedby refid="a01298_1aaccf80635025096e4ff250f47febd549" compoundref="a02455" startline="238" endline="261">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01298_1afcb7791c5c26c3b28eec8807265ca493" compoundref="a02455" startline="129" endline="132">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01298_1afcb7791c5c26c3b28eec8807265ca493" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::strainFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::LinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the strain function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="129" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="129" bodyend="132"/>
        <referencedby refid="a01298_1a6dcb4695a8a2d1d3cb9d555dd087f28c" compoundref="a02455" startline="216" endline="226">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="a01298_1a078e95d6b83829fa717778f47ca33872" compoundref="a02455" startline="184" endline="204">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01298_1aaccf80635025096e4ff250f47febd549" compoundref="a02455" startline="238" endline="261">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01298_1a8e52623d4850ccde18d34ee34b028ef7" compoundref="a02455" startline="264" endline="287">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01298_1a32ffbf97a5709decb3db826952ae1df5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::materialTangent</definition>
        <argsstring>() const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangent</qualifiedname>
        <briefdescription>
<para>Gets the material tangent matrix for the linear elastic material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The material tangent matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="139" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="139" bodyend="144"/>
        <referencedby refid="a01298_1a6dcb4695a8a2d1d3cb9d555dd087f28c" compoundref="a02455" startline="216" endline="226">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="a01298_1a078e95d6b83829fa717778f47ca33872" compoundref="a02455" startline="184" endline="204">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01298_1aaccf80635025096e4ff250f47febd549" compoundref="a02455" startline="238" endline="261">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01298_1a8e52623d4850ccde18d34ee34b028ef7" compoundref="a02455" startline="264" endline="287">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01298_1ae527a87d62737855206417b20e3f8cbb" compoundref="a02455" startline="152" endline="154">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::materialTangentFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01298_1ae527a87d62737855206417b20e3f8cbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::materialTangentFunction</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>materialTangentFunction</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangentFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Gets the material tangent function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="152" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1ad56291480c7edcf6c5b33800a66f054e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01298_1ade093ac3f4cf3bc94e4af77cc16aac7d" kindref="member">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>Ikarus::LinearElastic::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="156" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1aefdafc8d5989fd98386adbce42b5efb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::numberOfNodes</definition>
        <argsstring>() const</argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="157" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1a2f9ede566fc8a18d9fa9d2a0a0a3a104" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::LinearElastic::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="158" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1a5364887d6816973686f884369739e035" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar energy for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The scalar energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="166" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1aa539230c36a1fcbe81e33234c6fe35ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates the vector force for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the calculated force. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="174" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1a078e95d6b83829fa717778f47ca33872" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::LinearElastic::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix stiffness for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store the calculated stiffness. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="184" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="184" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1a6dcb4695a8a2d1d3cb9d555dd087f28c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00312_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref></type>
            <declname>resType</declname>
            <defname>resType</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateAt</definition>
        <argsstring>(const FERequirementType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::LinearElastic::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01490" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01258_1a172046f544deb556462c3a2eb84aa479" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
<para>Calculates a requested result at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object holding the global solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated result</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>resType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requested result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="216" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="216" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="a01226_1a0f2828bc60acbfe60cecbb3eca99ef13" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t Ikarus::PowerBasisFE&lt; B &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::PowerBasisFE::size</qualifiedname>
        <briefdescription>
<para>Get the size of the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="54" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="a01226_1ae25d85da7c545b079c74d878eb71ce1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::PowerBasisFE&lt; B &gt;::globalFlatIndices</definition>
        <argsstring>(std::vector&lt; GlobalIndex &gt; &amp;globalIndices) const</argsstring>
        <name>globalFlatIndices</name>
        <qualifiedname>Ikarus::PowerBasisFE::globalFlatIndices</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="a01226_1acbfd17b79bb5882e5c7e74f922bae703" kindref="member">GlobalIndex</ref> &gt; &amp;</type>
          <declname>globalIndices</declname>
        </param>
        <briefdescription>
<para>Get the global flat indices for the power basis. </para>
        </briefdescription>
        <detaileddescription>
<para>The global indices are collected in a FlatInterLeaved order. I.e. x_0, y_0, z_0, ..., x_n, y_n, z_n</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store global indices. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="63" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="a01226_1a426b90558224e8fc9165dd6e2784d42e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01226_1a5574b829dfa9bad6a600c7d203b73442" kindref="member">GridElement</ref> &amp;</type>
        <definition>const GridElement &amp; Ikarus::PowerBasisFE&lt; B &gt;::gridElement</definition>
        <argsstring>() const</argsstring>
        <name>gridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE::gridElement</qualifiedname>
        <briefdescription>
<para>Get the grid element associated with the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The grid element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="78" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="78" bodyend="78"/>
        <referencedby refid="a01338_1a765f9740fe927b34ab4d0add274be811" compoundref="a02461" startline="257" endline="269">Ikarus::NonLinearElastic&lt; B, MAT, FER, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="a01298_1a078e95d6b83829fa717778f47ca33872" compoundref="a02455" startline="184" endline="204">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01338_1a04e2110e0ff9db322567ace0ad778a2d" compoundref="a02461" startline="223" endline="245">Ikarus::NonLinearElastic&lt; B, MAT, FER, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01298_1aaccf80635025096e4ff250f47febd549" compoundref="a02455" startline="238" endline="261">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01338_1a29221e7dd472e3f821d850817814ca86" compoundref="a02461" startline="280" endline="302">Ikarus::NonLinearElastic&lt; B, MAT, FER, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01298_1a8e52623d4850ccde18d34ee34b028ef7" compoundref="a02455" startline="264" endline="287">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01338_1a0f93cbb54ccb1a8a2ee75fe62c2d57fc" compoundref="a02461" startline="305" endline="327">Ikarus::NonLinearElastic&lt; B, MAT, FER, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01226_1a04e6a87845af2aa6630237bc0fec5462" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01226_1aef04f88f70cb50c75515ee00412d5675" kindref="member">LocalView</ref> &amp;</type>
        <definition>const LocalView &amp; Ikarus::PowerBasisFE&lt; B &gt;::localView</definition>
        <argsstring>() const</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE::localView</qualifiedname>
        <briefdescription>
<para>Get the const reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The const reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="84" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="84" bodyend="84"/>
        <referencedby refid="a01298_1aadc2cb33ce478106a0d8c4c7c89a76a6" compoundref="a02455" startline="113" endline="119">Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::displacementFunction</referencedby>
        <referencedby refid="a01338_1a550c57ffc66443501bd41f9e4906043e" compoundref="a02461" startline="114" endline="120">Ikarus::NonLinearElastic&lt; B, MAT, FER, useEigenRef &gt;::displacementFunction</referencedby>
        <referencedby refid="a01290_1a48b4389c47d552e860a9d47a2a744bde" compoundref="a02449" startline="142" endline="148">Ikarus::KirchhoffLoveShell&lt; B, FER, useEigenRef &gt;::displacementFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01226_1aaa63813d6f71f54faca3c5d87b4db3e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01226_1aef04f88f70cb50c75515ee00412d5675" kindref="member">LocalView</ref> &amp;</type>
        <definition>LocalView &amp; Ikarus::PowerBasisFE&lt; B &gt;::localView</definition>
        <argsstring>()</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE::localView</qualifiedname>
        <briefdescription>
<para>Get the reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="90" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01306_1a57dda3eb802306012e41237636de1ec4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given FERequirements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="48" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a01306_1a60ccd349727ba418dbfb1a3012a1d856" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="57" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="a01306_1a50c6859b6c9a40fbb8ac9cc77d8087db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="67" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01302_1a96c3bc299da08a776e46b488aed3ded7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given FERequirements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="56" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="a01302_1af90d4b6149bb2241644c92855759e6f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="65" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="a01302_1aa4336b55618b836ca7b2b3aebf4242bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="75" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="75" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01298_1aaccf80635025096e4ff250f47febd549" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="238" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="238" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="a01298_1a8e52623d4850ccde18d34ee34b028ef7" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="264" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="264" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="a01306_1a7ec1326b708d8c08fee05ca7b601f997" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="73" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="a01306_1a9b91a057a51ab4487656d8bd94fdd234" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="91" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="91" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="a01306_1aaed2462e36f9d119ff5c60867ebcaf62" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="112" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="112" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="a01302_1a2576d38cb79bb0b5bf59f433fa7c1633" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="81" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="a01302_1aabcfd5d855e2230fe90abb12a1ba8d2b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Integration rule along the boundary</para>
<para>The value of the local function wrt the i-th coeff</para>
<para>Value of the Neumann data at the current position</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="115" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="115" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="a01302_1a38ba7822f8f38691c80a0b607e488d03" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt; , FETraits&lt; B, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01298_1acb9f819664701f2672f17dce540398bd" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="149" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="149" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01298" kindref="compound">LinearElastic</ref> class represents a linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis type for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FER</parametername>
</parameternamelist>
<parameterdescription>
<para>The requirements for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag indicating whether to use <ref refid="a00332" kindref="compound">Eigen</ref> references. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;</label>
        <link refid="a01298"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; B &gt;</label>
        <link refid="a01226"/>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; DFE, Traits &gt;</label>
        <link refid="a01302"/>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; DFE, Traits &gt;</label>
        <link refid="a01306"/>
      </node>
      <node id="5">
        <label>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01302"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01306"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; B, FER, useEigenRef &gt;</label>
        <link refid="a01298"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; B &gt;</label>
        <link refid="a01226"/>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; DFE, Traits &gt;</label>
        <link refid="a01302"/>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; DFE, Traits &gt;</label>
        <link refid="a01306"/>
      </node>
      <node id="5">
        <label>Ikarus::Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01302"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01306"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="46" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="49" bodyend="288"/>
    <listofallmembers>
      <member refid="a01298_1a8acfbc7577c1d54c9bda196afc94834e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>BaseDisp</name></member>
      <member refid="a01298_1a686371c5896eae89ba0d81943eefc6d6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Basis</name></member>
      <member refid="a01298_1a6dcb4695a8a2d1d3cb9d555dd087f28c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateAt</name></member>
      <member refid="a01298_1a078e95d6b83829fa717778f47ca33872" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="a01306_1a50c6859b6c9a40fbb8ac9cc77d8087db" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="a01302_1aa4336b55618b836ca7b2b3aebf4242bf" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="a01306_1aaed2462e36f9d119ff5c60867ebcaf62" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01302_1a38ba7822f8f38691c80a0b607e488d03" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01298_1a5364887d6816973686f884369739e035" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="a01306_1a57dda3eb802306012e41237636de1ec4" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="a01302_1a96c3bc299da08a776e46b488aed3ded7" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="a01298_1aaccf80635025096e4ff250f47febd549" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01306_1a7ec1326b708d8c08fee05ca7b601f997" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01302_1a2576d38cb79bb0b5bf59f433fa7c1633" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01298_1aa539230c36a1fcbe81e33234c6fe35ae" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="a01306_1a60ccd349727ba418dbfb1a3012a1d856" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="a01302_1af90d4b6149bb2241644c92855759e6f5" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="a01298_1a8e52623d4850ccde18d34ee34b028ef7" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01306_1a9b91a057a51ab4487656d8bd94fdd234" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01302_1aabcfd5d855e2230fe90abb12a1ba8d2b" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01298_1aadc2cb33ce478106a0d8c4c7c89a76a6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>displacementFunction</name></member>
      <member refid="a01298_1a5d971c8e8339046424e4d1f1f2c9a16d" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Element</name></member>
      <member refid="a01298_1a8ad2fd56b151d9a2e0e798a47e6374c8" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>emod_</name></member>
      <member refid="a01298_1acb9f819664701f2672f17dce540398bd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FERequirementType</name></member>
      <member refid="a01298_1a34d2bf79d243ef70b24780d7632be86e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FlatBasis</name></member>
      <member refid="a01298_1af8a0ce4469397ea1550ef6e95fe672dd" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geo_</name></member>
      <member refid="a01298_1ad56291480c7edcf6c5b33800a66f054e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geometry</name></member>
      <member refid="a01298_1ade093ac3f4cf3bc94e4af77cc16aac7d" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Geometry</name></member>
      <member refid="a01226_1ae25d85da7c545b079c74d878eb71ce1b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>globalFlatIndices</name></member>
      <member refid="a01226_1acbfd17b79bb5882e5c7e74f922bae703" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GlobalIndex</name></member>
      <member refid="a01226_1a5574b829dfa9bad6a600c7d203b73442" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridElement</name></member>
      <member refid="a01226_1a426b90558224e8fc9165dd6e2784d42e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>gridElement</name></member>
      <member refid="a01298_1a4b2b0a0b713bed04b793afd14b45d923" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridView</name></member>
      <member refid="a01298_1a75984084ffce4fdda25c9cdd15d8e98d" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LinearElastic</name></member>
      <member refid="a01298_1aa128fdbb1b45a83764cd30e33f6068ba" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localBasis_</name></member>
      <member refid="a01298_1a60a2639d979520ad3a864a73913a6206" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="a01226_1a04e6a87845af2aa6630237bc0fec5462" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="a01226_1aaa63813d6f71f54faca3c5d87b4db3e2" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="a01298_1a2e5553a4af3992305782e011ad77805b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalView</name></member>
      <member refid="a01298_1a32ffbf97a5709decb3db826952ae1df5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangent</name></member>
      <member refid="a01298_1ae527a87d62737855206417b20e3f8cbb" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangentFunction</name></member>
      <member refid="a01298_1a8bbfc1afb01386fcde2a491f13fbc877" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>myDim</name></member>
      <member refid="a01298_1aeb3e3054885ec8fa67f54d641c1a3ae7" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>nu_</name></member>
      <member refid="a01226_1a3a162d15d209caf4db3d68917ed6fa69" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>num_children</name></member>
      <member refid="a01298_1aefdafc8d5989fd98386adbce42b5efb1" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="a01298_1a0be1959d68d3b192cb780ff45931abcb" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes_</name></member>
      <member refid="a01298_1a2f9ede566fc8a18d9fa9d2a0a0a3a104" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order</name></member>
      <member refid="a01298_1a7377e4a955688de9055a06da38c58277" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order_</name></member>
      <member refid="a01226_1afd5535b2b8008b8bfcabb7421238fdea" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>PowerBasisFE</name></member>
      <member refid="a01226_1a0f2828bc60acbfe60cecbb3eca99ef13" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>size</name></member>
      <member refid="a01298_1afcb7791c5c26c3b28eec8807265ca493" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>strainFunction</name></member>
      <member refid="a01302_1a3fa13c11a3d654ba3800c233856574a6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traction</name></member>
      <member refid="a01298_1a7c1e9da574d58348cd8c504e2f9e73ad" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>TractionType</name></member>
      <member refid="a01298_1af7263c3f57fc7fddb14e13f1e468c55e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traits</name></member>
      <member refid="a01306_1af67372d55f4036736affad41565639bd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Volume</name></member>
      <member refid="a01298_1acb4bb1f6ef106b48fc3db43487fcd614" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>VolumeType</name></member>
      <member refid="a01306_1a073fb2d3afae0bd3e0afe1c2534f9afd" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
      <member refid="a01302_1a1d2ad110e77cf497bc88ac1a8735fc97" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; B, FERequirements&lt;&gt;, false &gt;, FETraits&lt; B, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
