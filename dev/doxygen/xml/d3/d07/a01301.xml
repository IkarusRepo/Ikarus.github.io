<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d3/d07/a01301" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::NewtonRaphsonWithSubsidiaryFunction</compoundname>
    <basecompoundref refid="d7/d68/a01413" prot="public" virt="non-virtual">IObservable&lt; NonLinearSolverMessages &gt;</basecompoundref>
    <includes refid="d5/de9/a00176" local="no">ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh</includes>
    <innerclass refid="dc/d9e/a01305" prot="public">Ikarus::NewtonRaphsonWithSubsidiaryFunction::NoPredictor</innerclass>
    <templateparamlist>
      <param>
        <type>typename NonLinearOperatorImpl</type>
      </param>
      <param>
        <type>typename <ref refid="dd/df3/a00219_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref></type>
        <defval>std::function&lt;typename NonLinearOperatorImpl::ValueType(                const typename NonLinearOperatorImpl::ValueType&amp;, const typename NonLinearOperatorImpl::ValueType&amp;)&gt;</defval>
      </param>
      <param>
        <type>typename UpdateType</type>
        <defval>std::conditional_t&lt;std::is_floating_point_v&lt;typename NonLinearOperatorImpl::template ParameterValue&lt;0&gt;&gt;,                                 typename NonLinearOperatorImpl::template ParameterValue&lt;0&gt;, Eigen::VectorXd&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d3/d07/a01301_1acb6a0f4d2a009aed717401834f9c4940" prot="public" static="no">
        <type>std::function&lt; typename NonLinearOperatorImpl::ValueType(const typename NonLinearOperatorImpl::ValueType &amp;, const typename NonLinearOperatorImpl::ValueType &amp;)&gt;</type>
        <definition>using Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::LinearSolverScalarFunctionType =  std::function&lt;typename NonLinearOperatorImpl::ValueType( const typename NonLinearOperatorImpl::ValueType&amp;, const typename NonLinearOperatorImpl::ValueType&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>LinearSolverScalarFunctionType</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::LinearSolverScalarFunctionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="33" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d07/a01301_1a6b418e718d02ad068ba501d6872d1fbd" prot="public" static="no">
        <type>typename NonLinearOperatorImpl::template ParameterValue&lt; 0 &gt;</type>
        <definition>using Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::ResultType =  typename NonLinearOperatorImpl::template ParameterValue&lt;0&gt;</definition>
        <argsstring></argsstring>
        <name>ResultType</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::ResultType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="40" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d07/a01301_1a9b70b7076da31ccb2840cad895ea2b99" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d3/d07/a01301_1a6b418e718d02ad068ba501d6872d1fbd" kindref="member">ResultType</ref> &amp;, const UpdateType &amp;)&gt;</type>
        <definition>using Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::UpdateFunctionType =  std::function&lt;void(ResultType&amp;, const UpdateType&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>UpdateFunctionType</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::UpdateFunctionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="41" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d07/a01301_1a8c54ef294047ea13c3af4eef9eef0a56" prot="public" static="no">
        <type>NonLinearOperatorImpl</type>
        <definition>using Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::NonLinearOperator =  NonLinearOperatorImpl</definition>
        <argsstring></argsstring>
        <name>NonLinearOperator</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::NonLinearOperator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="56" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d3/d07/a01301_1a8106230528b5d2afa50c9ff3700b4afe" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::isLinearSolver</definition>
        <argsstring></argsstring>
        <name>isLinearSolver</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::isLinearSolver</qualifiedname>
        <initializer>= <ref refid="da/daf/a01568" kindref="compound">Ikarus::Concepts::LinearSolverCheck</ref>&lt;<ref refid="dd/df3/a00219_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref>, typename NonLinearOperatorImpl::DerivativeType,
                                              typename NonLinearOperatorImpl::ValueType&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="36" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d07/a01301_1a80939d8595a9af6448ecacd2c2a19615" prot="private" static="no" mutable="no">
        <type>NonLinearOperatorImpl</type>
        <definition>NonLinearOperatorImpl Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::nonLinearOperator_</definition>
        <argsstring></argsstring>
        <name>nonLinearOperator_</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::nonLinearOperator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="155" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d07/a01301_1a22a8e0b3a3d723025daacdb847419fbc" prot="private" static="no" mutable="no">
        <type><ref refid="dd/df3/a00219_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref></type>
        <definition>LinearSolver Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::linearSolver</definition>
        <argsstring></argsstring>
        <name>linearSolver</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::linearSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="156" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d07/a01301_1a139349fbf04cf26516e58a1cf4e5ab69" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d07/a01301_1a9b70b7076da31ccb2840cad895ea2b99" kindref="member">UpdateFunctionType</ref></type>
        <definition>UpdateFunctionType Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::updateFunction</definition>
        <argsstring></argsstring>
        <name>updateFunction</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::updateFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="157" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d07/a01301_1a6e3bc3948b3224d0dee0949ea675de61" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d8c/a01297" kindref="compound">NewtonRaphsonWithSubsidiaryFunctionSettings</ref></type>
        <definition>NewtonRaphsonWithSubsidiaryFunctionSettings Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::settings</definition>
        <argsstring></argsstring>
        <name>settings</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::settings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="158" column="49" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d07/a01301_1af2c3c4c2cdb9dc56525a267ce8a37c58" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::NewtonRaphsonWithSubsidiaryFunction</definition>
        <argsstring>(const NonLinearOperatorImpl &amp;p_nonLinearOperator, LinearSolver &amp;&amp;p_linearSolver=[](const typename NonLinearOperatorImpl::ValueType &amp;a, const typename NonLinearOperatorImpl::ValueType &amp;b) { return a/b;}, std::function&lt; void(ResultType &amp;, const UpdateType &amp;)&gt; p_updateFunction=[](ResultType &amp;a, const UpdateType &amp;b) { using Ikarus::operator+=;a+=b;})</argsstring>
        <name>NewtonRaphsonWithSubsidiaryFunction</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::NewtonRaphsonWithSubsidiaryFunction</qualifiedname>
        <param>
          <type>const NonLinearOperatorImpl &amp;</type>
          <declname>p_nonLinearOperator</declname>
        </param>
        <param>
          <type><ref refid="dd/df3/a00219_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref> &amp;&amp;</type>
          <declname>p_linearSolver</declname>
          <defval>[](const typename NonLinearOperatorImpl::ValueType &amp;a, const typename NonLinearOperatorImpl::ValueType &amp;b) { return a/b;}</defval>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="d3/d07/a01301_1a6b418e718d02ad068ba501d6872d1fbd" kindref="member">ResultType</ref> &amp;, const UpdateType &amp;)&gt;</type>
          <declname>p_updateFunction</declname>
          <defval>[](<ref refid="d3/d07/a01301_1a6b418e718d02ad068ba501d6872d1fbd" kindref="member">ResultType</ref> &amp;a, const UpdateType &amp;b) { using Ikarus::operator+=;a+=b;}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="43" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="43" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d3/d07/a01301_1a5863885723cde3495120c7c5b93c0771" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::setup</definition>
        <argsstring>(const NewtonRaphsonWithSubsidiaryFunctionSettings &amp;p_settings)</argsstring>
        <name>setup</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::setup</qualifiedname>
        <param>
          <type>const <ref refid="dc/d8c/a01297" kindref="compound">NewtonRaphsonWithSubsidiaryFunctionSettings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="58" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d3/d07/a01301_1a0e4e4639be7f722369dd739586f3e739" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SolutionType</type>
            <defval><ref refid="dc/d9e/a01305" kindref="compound">NoPredictor</ref></defval>
          </param>
          <param>
            <type>typename SubsidiaryType</type>
          </param>
        </templateparamlist>
        <type><ref refid="db/d4b/a01309" kindref="compound">Ikarus::NonLinearSolverInformation</ref></type>
        <definition>Ikarus::NonLinearSolverInformation Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::solve</definition>
        <argsstring>(SubsidiaryType &amp;subsidiaryFunction, SubsidiaryArgs &amp;subsidiaryArgs)</argsstring>
        <name>solve</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::solve</qualifiedname>
        <param>
          <type>SubsidiaryType &amp;</type>
          <declname>subsidiaryFunction</declname>
        </param>
        <param>
          <type><ref refid="de/d1c/a01093" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>subsidiaryArgs</declname>
        </param>
    <requiresclause>std::is_same_v&lt;SolutionType, NoPredictor&gt; || std::is_convertible_v&lt; SolutionType, std::remove_cvref_t&lt;typename NonLinearOperatorImpl::ValueType&gt;&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Initializations</para>
<para>Determine Fext0 It is assumed that Fext = Fext0 * lambda such that dRdlambda = Fext0 Generalization for Fext0 = Fext0(lambda) is not implemented</para>
<para>Iterative solving scheme</para>
<para>Two-step solving procedure</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="64" column="44" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="64" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="d3/d07/a01301_1a17e845bb0405cb549575d2c04f73cd71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;::nonLinearOperator</definition>
        <argsstring>()</argsstring>
        <name>nonLinearOperator</name>
        <qualifiedname>Ikarus::NewtonRaphsonWithSubsidiaryFunction::nonLinearOperator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="152" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::subscribe</definition>
        <argsstring>(NonLinearSolverMessages message, std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>subscribe</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::subscribe</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; <ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="77" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::subscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::subscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; <ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="78" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::subscribeAll</definition>
        <argsstring>(std::initializer_list&lt; std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; &gt; observers)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::subscribeAll</qualifiedname>
        <param>
          <type>std::initializer_list&lt; std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; <ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt; &gt;</type>
          <declname>observers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="79" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::unSubscribe</definition>
        <argsstring>(NonLinearSolverMessages message, std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>unSubscribe</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::unSubscribe</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; <ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="80" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::unSubscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>unSubscribeAll</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::unSubscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; <ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="82" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, ScalarType val)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="84" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="85" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, const std::string &amp;val)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="86" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, double val2)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="87" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="88" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, Eigen::VectorX&lt; ScalarType &gt; vec)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>Eigen::VectorX&lt; ScalarType &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="90" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="176" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>IObservable&lt; MessageType &gt;</label>
        <link refid="d7/d68/a01413"/>
      </node>
      <node id="2">
        <label>IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="d7/d68/a01413"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;</label>
        <link refid="d3/d07/a01301"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>IObservable&lt; MessageType &gt;</label>
        <link refid="d7/d68/a01413"/>
      </node>
      <node id="2">
        <label>IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="d7/d68/a01413"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;</label>
        <link refid="d3/d07/a01301"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" line="31" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphsonwithscalarsubsidiaryfunction.hh" bodystart="31" bodyend="159"/>
    <listofallmembers>
      <member refid="d7/d68/a01413_1a9aafe435540e6e189f02cdf2156063fc" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>IObservable</name></member>
      <member refid="d3/d07/a01301_1a8106230528b5d2afa50c9ff3700b4afe" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>isLinearSolver</name></member>
      <member refid="d3/d07/a01301_1a22a8e0b3a3d723025daacdb847419fbc" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>linearSolver</name></member>
      <member refid="d3/d07/a01301_1acb6a0f4d2a009aed717401834f9c4940" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>LinearSolverScalarFunctionType</name></member>
      <member refid="d3/d07/a01301_1af2c3c4c2cdb9dc56525a267ce8a37c58" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>NewtonRaphsonWithSubsidiaryFunction</name></member>
      <member refid="d3/d07/a01301_1a8c54ef294047ea13c3af4eef9eef0a56" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>NonLinearOperator</name></member>
      <member refid="d3/d07/a01301_1a17e845bb0405cb549575d2c04f73cd71" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>nonLinearOperator</name></member>
      <member refid="d3/d07/a01301_1a80939d8595a9af6448ecacd2c2a19615" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>nonLinearOperator_</name></member>
      <member refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>notify</name></member>
      <member refid="d3/d07/a01301_1a6b418e718d02ad068ba501d6872d1fbd" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>ResultType</name></member>
      <member refid="d3/d07/a01301_1a6e3bc3948b3224d0dee0949ea675de61" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>settings</name></member>
      <member refid="d3/d07/a01301_1a5863885723cde3495120c7c5b93c0771" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>setup</name></member>
      <member refid="d3/d07/a01301_1a0e4e4639be7f722369dd739586f3e739" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>solve</name></member>
      <member refid="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>subscribe</name></member>
      <member refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>subscribeAll</name></member>
      <member refid="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>subscribeAll</name></member>
      <member refid="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>unSubscribe</name></member>
      <member refid="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>unSubscribeAll</name></member>
      <member refid="d3/d07/a01301_1a139349fbf04cf26516e58a1cf4e5ab69" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>updateFunction</name></member>
      <member refid="d3/d07/a01301_1a9b70b7076da31ccb2840cad895ea2b99" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>UpdateFunctionType</name></member>
      <member refid="d7/d68/a01413_1ae5717e23ba80e0081db869c6da4dee8c" prot="public" virt="virtual"><scope>Ikarus::NewtonRaphsonWithSubsidiaryFunction</scope><name>~IObservable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
