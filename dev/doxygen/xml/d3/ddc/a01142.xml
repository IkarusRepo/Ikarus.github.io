<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d3/ddc/a01142" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::VectorFlatAssembler</compoundname>
    <basecompoundref refid="d0/d39/a01138" prot="public" virt="non-virtual">Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</basecompoundref>
    <derivedcompoundref refid="d2/d7b/a01150" prot="public" virt="non-virtual">Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</derivedcompoundref>
    <derivedcompoundref refid="de/d07/a01146" prot="public" virt="non-virtual">Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</derivedcompoundref>
    <includes refid="d7/d3f/a00173" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEContainer_</type>
      </param>
      <param>
        <type>typename DirichletValuesType_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d3/ddc/a01142_1a323ef333466a74f0f6ebb4a5fd4b1855" prot="private" static="no">
        <type>std::remove_cvref_t&lt; FEContainer_ &gt;</type>
        <definition>using Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEContainer_&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="194" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/ddc/a01142_1a7605dc8a1d9905e97ed9bd90025433c1" prot="private" static="no">
        <type><ref refid="d0/d39/a01138" kindref="compound">ScalarAssembler</ref>&lt; FEContainer_, DirichletValuesType_ &gt;</type>
        <definition>using Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::Base =  ScalarAssembler&lt;FEContainer_, DirichletValuesType_&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="195" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/ddc/a01142_1a67e7b45a8acf9cbbcedfbf203e46c48d" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::vecRaw</definition>
        <argsstring></argsstring>
        <name>vecRaw</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vecRaw</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Raw vector without changes for dirichlet degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="251" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/ddc/a01142_1a349222e0212e4c167a0783f33c1c5dfc" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::vec</definition>
        <argsstring></argsstring>
        <name>vec</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vec</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Vector quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="252" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/ddc/a01142_1a267f5c600cad9170e533b8ced54a976d" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::vecRed</definition>
        <argsstring></argsstring>
        <name>vecRed</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vecRed</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Reduced vector quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="253" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/ddc/a01142_1ab29654e07434ec261e3f2b449eb36a8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::VectorFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues_)</argsstring>
        <name>VectorFlatAssembler</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::VectorFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="dd/de2/a01134_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="dd/de2/a01134_1ab0275407303cf74b78fe44f0ad405e06" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues_</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="d3/ddc/a01142" kindref="compound">VectorFlatAssembler</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirichletValues_</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="211" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="211" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="d3/ddc/a01142_1a1d7cf1f4e62251a01d2207310f336e75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="220" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="d3/ddc/a01142_1a99690d51394f943e44743365d4d3b57e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="231" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="d3/ddc/a01142_1a51fec3e98ce787300a069ccd30c75c67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. This vector has a reduced size by the number of fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated reduced vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="240" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="d0/d39/a01138_1a152538dd394310fc57729163cace3289" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="160" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="65" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1ac105af5d51473a274f597d509308c55f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="71" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1a796d9b40d32762d5857b49afb30cec2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; Basis, FEContainer &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="80" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1aa92c131a0915eb5864613bdbab5c4990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="86" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="94" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1a317a691c0aca9e9d5953845762c7f626" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="102" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="dd/de2/a01134_1a6179ef97228c75448f8d109f031bc667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="110" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="110" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/ddc/a01142_1ad0baa42abe5c4ea5980148b1e8efcb29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::VectorFlatAssembler&lt; Basis, FEContainer &gt;::assembleRawVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::VectorXd &amp;assemblyVec)</argsstring>
        <name>assembleRawVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::assembleRawVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>assemblyVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="245" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="33" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d3/ddc/a01142_1a88fcf1344096cdd83b7c689e5993ffc9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; Basis, FEContainer &gt;::getRawVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="246" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d3/ddc/a01142_1a385819d05bbc410eeb02a31afcd9cc6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; Basis, FEContainer &gt;::getVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="247" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="d3/ddc/a01142_1ab6a4e6bb1bf9396cc88e99323dc70df5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; Basis, FEContainer &gt;::getReducedVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="dd/de2/a01134_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="249" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="65" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d3/ddc/a01142_1aec6afbe8af2828aa945ab2b8f2c1aca6" prot="public" static="no">
        <type>typename DirichletValuesType_::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::Basis =  typename DirichletValuesType_::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="198" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/ddc/a01142_1ab0275407303cf74b78fe44f0ad405e06" prot="public" static="no">
        <type>DirichletValuesType_</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::DirichletValuesType =  DirichletValuesType_</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="199" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/ddc/a01142_1a030d83efead739f9abcb338d8f1d06b4" prot="public" static="no">
        <type>FEContainer_</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainer =  FEContainer_</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="200" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/ddc/a01142_1aba7339d4e117f0f310c8ba9cd6da1e5a" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="201" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/ddc/a01142_1a1b2ccee915a297c90f3865c71f2c3c14" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="202" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/de2/a01134_1a0c71856323f0e835ec785987c0aada18" prot="public" static="no">
        <type>typename <ref refid="d8/df1/a01414_1a066e94e24a8000ee0f47fff24c5c09b4" kindref="member">Basis::GridView</ref></type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="38" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/de2/a01134_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="dd/de2/a01134_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;, const <ref refid="dd/de2/a01134_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref>, <ref refid="dd/de2/a01134_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="40" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d3/ddc/a01142" kindref="compound">VectorFlatAssembler</ref> assembles vector quantities using a flat basis Indexing strategy. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEContainer_</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DirichletValuesType_</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d2/d7b/a01150"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="dd/de2/a01134"/>
      </node>
      <node id="2">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d0/d39/a01138"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/d07/a01146"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d3/ddc/a01142"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="dd/de2/a01134"/>
      </node>
      <node id="2">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d0/d39/a01138"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d3/ddc/a01142"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="193" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="193" bodyend="254"/>
    <listofallmembers>
      <member refid="d3/ddc/a01142_1ad0baa42abe5c4ea5980148b1e8efcb29" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>assembleRawVectorImpl</name></member>
      <member refid="d3/ddc/a01142_1a7605dc8a1d9905e97ed9bd90025433c1" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>Base</name></member>
      <member refid="d3/ddc/a01142_1aec6afbe8af2828aa945ab2b8f2c1aca6" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>Basis</name></member>
      <member refid="dd/de2/a01134_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="dd/de2/a01134_1a796d9b40d32762d5857b49afb30cec2a" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="d3/ddc/a01142_1ab0275407303cf74b78fe44f0ad405e06" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="dd/de2/a01134_1a6179ef97228c75448f8d109f031bc667" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="d3/ddc/a01142_1a030d83efead739f9abcb338d8f1d06b4" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="d3/ddc/a01142_1a323ef333466a74f0f6ebb4a5fd4b1855" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="dd/de2/a01134_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="d3/ddc/a01142_1aba7339d4e117f0f310c8ba9cd6da1e5a" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="dd/de2/a01134_1aa92c131a0915eb5864613bdbab5c4990" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="dd/de2/a01134_1aaa76896f0fdb0e6a116bb7790dbaceb1" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="d3/ddc/a01142_1a1d7cf1f4e62251a01d2207310f336e75" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="d3/ddc/a01142_1a88fcf1344096cdd83b7c689e5993ffc9" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getRawVectorImpl</name></member>
      <member refid="d3/ddc/a01142_1a51fec3e98ce787300a069ccd30c75c67" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="d3/ddc/a01142_1ab6a4e6bb1bf9396cc88e99323dc70df5" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getReducedVectorImpl</name></member>
      <member refid="d0/d39/a01138_1a152538dd394310fc57729163cace3289" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getScalar</name></member>
      <member refid="d3/ddc/a01142_1a99690d51394f943e44743365d4d3b57e" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getVector</name></member>
      <member refid="d3/ddc/a01142_1a385819d05bbc410eeb02a31afcd9cc6a" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getVectorImpl</name></member>
      <member refid="d3/ddc/a01142_1a1b2ccee915a297c90f3865c71f2c3c14" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="dd/de2/a01134_1a0c71856323f0e835ec785987c0aada18" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>GridView</name></member>
      <member refid="dd/de2/a01134_1a317a691c0aca9e9d5953845762c7f626" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="dd/de2/a01134_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="d0/d39/a01138_1a7fa7751093b40062b2250205cb1b27b2" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="dd/de2/a01134_1ac105af5d51473a274f597d509308c55f" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>size</name></member>
      <member refid="d3/ddc/a01142_1a349222e0212e4c167a0783f33c1c5dfc" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>vec</name></member>
      <member refid="d3/ddc/a01142_1a67e7b45a8acf9cbbcedfbf203e46c48d" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>vecRaw</name></member>
      <member refid="d3/ddc/a01142_1a267f5c600cad9170e533b8ced54a976d" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>vecRed</name></member>
      <member refid="d3/ddc/a01142_1ab29654e07434ec261e3f2b449eb36a8c" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
