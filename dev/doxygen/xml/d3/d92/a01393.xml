<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d3/d92/a01393" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ControlSubsamplingVertexVTKWriter</compoundname>
    <basecompoundref refid="d9/d6e/a01409" prot="public" virt="non-virtual">IObserver&lt; ControlMessages &gt;</basecompoundref>
    <includes refid="d1/d88/a00128" local="no">ikarus/utils/observer/controlvtkwriter.hh</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="dc/d2a/a01333" kindref="compound">Basis</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d3/d92/a01393_1adf8e3da64cce5e7ab1eac3d9d86383b1" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::components</definition>
        <argsstring></argsstring>
        <name>components</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::components</qualifiedname>
        <initializer>= Basis::LocalView::Tree::degree() == 0 ? 1 : Basis::LocalView::Tree::degree()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="21" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d92/a01393_1adbbc1938988978c29c8d7cd9ed37f2fb" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d2a/a01333" kindref="compound">Basis</ref> const  *</type>
        <definition>Basis const* Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::basis</definition>
        <argsstring></argsstring>
        <name>basis</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="57" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d92/a01393_1a1e8805e38384d29b624346bab98692aa" prot="private" static="no" mutable="no">
        <type>Dune::SubsamplingVTKWriter&lt; typename <ref refid="dc/d2a/a01333_1a066e94e24a8000ee0f47fff24c5c09b4" kindref="member">Basis::GridView</ref> &gt;</type>
        <definition>Dune::SubsamplingVTKWriter&lt;typename Basis::GridView&gt; Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::vtkWriter</definition>
        <argsstring></argsstring>
        <name>vtkWriter</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::vtkWriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="58" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d92/a01393_1a3eb4522d5e5fd498fb9dbfbf7089f430" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd const  *</type>
        <definition>Eigen::VectorXd const* Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::solution</definition>
        <argsstring></argsstring>
        <name>solution</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::solution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="59" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d92/a01393_1ad83d3662511414835be7def5fad8d6f0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::step</definition>
        <argsstring></argsstring>
        <name>step</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::step</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="60" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d92/a01393_1a657459a8fa6c83d018f874e12a0c9c90" prot="private" static="no" mutable="no">
        <type>Dune::VTK::FieldInfo</type>
        <definition>Dune::VTK::FieldInfo Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::fieldInfo</definition>
        <argsstring></argsstring>
        <name>fieldInfo</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::fieldInfo</qualifiedname>
        <initializer>{&quot;Default&quot;, Dune::VTK::FieldInfo::Type::scalar, 1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="61" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d92/a01393_1a8a222336492105c6724d10a16c7c6a3d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::prefixString</definition>
        <argsstring></argsstring>
        <name>prefixString</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::prefixString</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="62" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d92/a01393_1ace46c1a492224b02f5090aebce0f990e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::isFieldInfoSet</definition>
        <argsstring></argsstring>
        <name>isFieldInfoSet</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::isFieldInfoSet</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="63" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d92/a01393_1ac1580434b973badf5715358d5365a2b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::ControlSubsamplingVertexVTKWriter</definition>
        <argsstring>(const Basis &amp;p_basis, const Eigen::VectorXd &amp;sol, int refinementLevels=0)</argsstring>
        <name>ControlSubsamplingVertexVTKWriter</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::ControlSubsamplingVertexVTKWriter</qualifiedname>
        <param>
          <type>const <ref refid="dc/d2a/a01333" kindref="compound">Basis</ref> &amp;</type>
          <declname>p_basis</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>sol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>refinementLevels</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="24" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1a351251161ca8fbb31aaea0cffaac3e90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::setFieldInfo</definition>
        <argsstring>(std::string &amp;&amp;name, Dune::VTK::FieldInfo::Type type, std::size_t size, Dune::VTK::Precision prec=Dune::VTK::Precision::float32)</argsstring>
        <name>setFieldInfo</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::setFieldInfo</qualifiedname>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Dune::VTK::FieldInfo::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>Dune::VTK::Precision</type>
          <declname>prec</declname>
          <defval>Dune::VTK::Precision::float32</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="27" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1ab19f208c66b4af13d7248800d4fd1179" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::setFileNamePrefix</definition>
        <argsstring>(std::string &amp;&amp;p_name)</argsstring>
        <name>setFileNamePrefix</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::setFileNamePrefix</qualifiedname>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>p_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="33" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1aa0c6914ffa6bcdbf95d0e5a815ca44ef" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="35" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1a35eab78c57b72d9d79934fa4b630705c" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(Ikarus::ControlMessages, double) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">Ikarus::ControlMessages</ref></type>
        </param>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="49" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1a2c847ac9e465651b936c83521238d8f2" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(Ikarus::ControlMessages, int) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">Ikarus::ControlMessages</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="50" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1a7129177e8d4a20b6ad6c734d74c235ff" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(Ikarus::ControlMessages, const std::string &amp;) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">Ikarus::ControlMessages</ref></type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="51" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1aa3a96e930531409fe53e8ca505476a9c" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(Ikarus::ControlMessages, int, const std::string &amp;) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">Ikarus::ControlMessages</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="52" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1aa618f156fc59267db7471bac7a936c92" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(Ikarus::ControlMessages, int, double) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">Ikarus::ControlMessages</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="53" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d3/d92/a01393_1a0675ba03ed8b0651e6d9fe227cbf0372" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;::updateImpl</definition>
        <argsstring>(Ikarus::ControlMessages, const Eigen::VectorXd &amp;) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlSubsamplingVertexVTKWriter::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">Ikarus::ControlMessages</ref></type>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="54" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a6dd574999a4ed16c6b2552634a3ba843" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="17" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1ab310853f3a37debf0f75698058f1ad05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="22" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1ad02f19017df61eb1336bd6e8795bbdd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="27" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1afd44e2c321f482c928f28cfc88ae69b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="32" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1afbfeac9bc0114189435004716ece4eb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="37" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a0084fe0709c399962cf356f7e25261e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="42" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a821866903f9289af1676488bfb3eda2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="47" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <reimplementedby refid="dc/df4/a01401_1af2b8d089da72af4a1a8723481d81d0e4">updateImpl</reimplementedby>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="53" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1ab2d8b9b4021e539ee364669275e71a81" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, double val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <reimplementedby refid="dc/df4/a01401_1a4a8fecb9a5d6f4262be47a720e4e9e86">updateImpl</reimplementedby>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="54" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a1cf1227eba8a4618de3abbd1f0212e54" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, int val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="55" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a6e024032bd581010d3b620d21e2fc20e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, const std::string &amp;val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="56" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1afe9e2900ee9d19ccdf5d925e1f192c30" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="57" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a49b561ac00eca725b345625dca0842e4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, int val1, double val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="58" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6e/a01409_1a677bb40c340376225e092cfed7404fcf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <reimplementedby refid="dc/df4/a01401_1af95208747de9c103370e4549ef2a8bbf">updateImpl</reimplementedby>
        <param>
          <type><ref refid="dd/df3/a00219_1a35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="59" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>IObserver&lt; MessageType &gt;</label>
        <link refid="d9/d6e/a01409"/>
      </node>
      <node id="2">
        <label>IObserver&lt; ControlMessages &gt;</label>
        <link refid="d9/d6e/a01409"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;</label>
        <link refid="d3/d92/a01393"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>IObserver&lt; MessageType &gt;</label>
        <link refid="d9/d6e/a01409"/>
      </node>
      <node id="2">
        <label>IObserver&lt; ControlMessages &gt;</label>
        <link refid="d9/d6e/a01409"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;</label>
        <link refid="d3/d92/a01393"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" line="20" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh" bodystart="20" bodyend="64"/>
    <listofallmembers>
      <member refid="d3/d92/a01393_1adbbc1938988978c29c8d7cd9ed37f2fb" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>basis</name></member>
      <member refid="d3/d92/a01393_1adf8e3da64cce5e7ab1eac3d9d86383b1" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>components</name></member>
      <member refid="d3/d92/a01393_1ac1580434b973badf5715358d5365a2b6" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>ControlSubsamplingVertexVTKWriter</name></member>
      <member refid="d3/d92/a01393_1a657459a8fa6c83d018f874e12a0c9c90" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>fieldInfo</name></member>
      <member refid="d3/d92/a01393_1ace46c1a492224b02f5090aebce0f990e" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>isFieldInfoSet</name></member>
      <member refid="d3/d92/a01393_1a8a222336492105c6724d10a16c7c6a3d" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>prefixString</name></member>
      <member refid="d3/d92/a01393_1a351251161ca8fbb31aaea0cffaac3e90" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>setFieldInfo</name></member>
      <member refid="d3/d92/a01393_1ab19f208c66b4af13d7248800d4fd1179" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>setFileNamePrefix</name></member>
      <member refid="d3/d92/a01393_1a3eb4522d5e5fd498fb9dbfbf7089f430" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>solution</name></member>
      <member refid="d3/d92/a01393_1ad83d3662511414835be7def5fad8d6f0" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>step</name></member>
      <member refid="d9/d6e/a01409_1a6dd574999a4ed16c6b2552634a3ba843" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d9/d6e/a01409_1ab310853f3a37debf0f75698058f1ad05" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d9/d6e/a01409_1ad02f19017df61eb1336bd6e8795bbdd9" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d9/d6e/a01409_1afd44e2c321f482c928f28cfc88ae69b7" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d9/d6e/a01409_1afbfeac9bc0114189435004716ece4eb0" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d9/d6e/a01409_1a0084fe0709c399962cf356f7e25261e9" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d9/d6e/a01409_1a821866903f9289af1676488bfb3eda2f" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>update</name></member>
      <member refid="d3/d92/a01393_1aa0c6914ffa6bcdbf95d0e5a815ca44ef" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1a35eab78c57b72d9d79934fa4b630705c" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1a2c847ac9e465651b936c83521238d8f2" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1a7129177e8d4a20b6ad6c734d74c235ff" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1aa3a96e930531409fe53e8ca505476a9c" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1aa618f156fc59267db7471bac7a936c92" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1a0675ba03ed8b0651e6d9fe227cbf0372" prot="public" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1ab2d8b9b4021e539ee364669275e71a81" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1a1cf1227eba8a4618de3abbd1f0212e54" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1a6e024032bd581010d3b620d21e2fc20e" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1afe9e2900ee9d19ccdf5d925e1f192c30" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1a49b561ac00eca725b345625dca0842e4" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d9/d6e/a01409_1a677bb40c340376225e092cfed7404fcf" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>updateImpl</name></member>
      <member refid="d3/d92/a01393_1a1e8805e38384d29b624346bab98692aa" prot="private" virt="non-virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>vtkWriter</name></member>
      <member refid="d9/d6e/a01409_1a06d29abd8a33c41df2a6be73f04e8e12" prot="public" virt="virtual"><scope>Ikarus::ControlSubsamplingVertexVTKWriter</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
