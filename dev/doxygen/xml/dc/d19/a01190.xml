<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="dc/d19/a01190" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::AutoDiffFE</compoundname>
    <basecompoundref prot="public" virt="non-virtual">RealFE_</basecompoundref>
    <includes refid="d4/d81/a00110" local="no">ikarus/finiteelements/febases/autodifffe.hh</includes>
    <templateparamlist>
      <param>
        <type>typename RealFE_</type>
      </param>
      <param>
        <type>typename FERequirementType_</type>
        <defval><ref refid="d8/d15/a01218" kindref="compound">FERequirements</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>forceAutoDiff</declname>
        <defname>forceAutoDiff</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/d19/a01190_1ae3eeda5463148aeab6bec5e774791384" prot="public" static="no">
        <type>RealFE_</type>
        <definition>using Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::RealFE =  RealFE_</definition>
        <argsstring></argsstring>
        <name>RealFE</name>
        <qualifiedname>Ikarus::AutoDiffFE::RealFE</qualifiedname>
        <briefdescription>
<para>Type of the base finite element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="33" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d19/a01190_1a89a700073503fa0567afbcb5f4638b7e" prot="public" static="no">
        <type>typename RealFE::Basis</type>
        <definition>using Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::Basis =  typename RealFE::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::AutoDiffFE::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="34" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d19/a01190_1a0890448ef4b8fd1605b861cb3ffd4e21" prot="public" static="no">
        <type>typename Basis::FlatBasis::LocalView</type>
        <definition>using Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::LocalView =  typename Basis::FlatBasis::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::AutoDiffFE::LocalView</qualifiedname>
        <briefdescription>
<para>Type of the local view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="35" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d19/a01190_1a835f66b905198f76688ee989af180828" prot="public" static="no">
        <type><ref refid="d4/d34/a01298" kindref="compound">TraitsFromLocalView</ref>&lt; <ref refid="dc/d19/a01190_1a0890448ef4b8fd1605b861cb3ffd4e21" kindref="member">LocalView</ref>, useEigenRef &gt;</type>
        <definition>using Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::Traits =  TraitsFromLocalView&lt;LocalView, useEigenRef&gt;</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::AutoDiffFE::Traits</qualifiedname>
        <briefdescription>
<para>Type traits for local view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="36" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d19/a01190_1a20d9d81fd33709e9e4dd1c7223a1ccaa" prot="public" static="no">
        <type>typename LocalView::Element</type>
        <definition>using Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::Element =  typename LocalView::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::AutoDiffFE::Element</qualifiedname>
        <briefdescription>
<para>Type of the element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="37" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d19/a01190_1a1fcac1d2f958ed25af80263406a5051d" prot="public" static="no">
        <type>FERequirementType_</type>
        <definition>using Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::FERequirementType =  FERequirementType_</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::AutoDiffFE::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the Finite Element Requirements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="38" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d19/a01190_1a2650fc875e359aab7e22e59ccbed53f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; h) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="dc/d19/a01190_1a1fcac1d2f958ed25af80263406a5051d" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="46" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="46" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="dc/d19/a01190_1a70030068b3205be5d75548ce1f1c126f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; g) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="dc/d19/a01190_1a1fcac1d2f958ed25af80263406a5051d" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="88" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="88" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="dc/d19/a01190_1aa35fb8992a69d3b8a4272722eea90c8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::calculateLocalSystem</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; h, typename Traits::template VectorType&lt;&gt; g) const</argsstring>
        <name>calculateLocalSystem</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateLocalSystem</qualifiedname>
        <param>
          <type>const <ref refid="dc/d19/a01190_1a1fcac1d2f958ed25af80263406a5051d" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Calculate the local system associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="120" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="dc/d19/a01190_1a1ceee52422b438e6c24386e7c17dc124" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="dc/d19/a01190_1a1fcac1d2f958ed25af80263406a5051d" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="134" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="dc/d19/a01190_1af1726c92c0d829e25de3bfede15c4291" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="dc/d19/a01190_1ae3eeda5463148aeab6bec5e774791384" kindref="member">RealFE</ref> &amp;</type>
        <definition>const RealFE &amp; Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::realFE</definition>
        <argsstring>() const</argsstring>
        <name>realFE</name>
        <qualifiedname>Ikarus::AutoDiffFE::realFE</qualifiedname>
        <briefdescription>
<para>Get the reference to the base finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the base finite element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="153" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="dc/d19/a01190_1a0945c8f2eb83323d6b8767b4ce47c919" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;::AutoDiffFE</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>AutoDiffFE</name>
        <qualifiedname>Ikarus::AutoDiffFE::AutoDiffFE</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="dc/d19/a01190" kindref="compound">AutoDiffFE</ref> class. Forward the construction to the underlying element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Variadic template for constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="163" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="163" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="dc/d19/a01190" kindref="compound">AutoDiffFE</ref> class, an automatic differentiation wrapper for finite elements. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RealFE_</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the original finite element, which does not implement the derivatives </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FERequirementType_</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to use Eigen::Ref for references types in calculateMatrix,... </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forceAutoDiff</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to force the use of automatic differentiation, even when the real element implements the derivatives. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;</label>
        <link refid="dc/d19/a01190"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RealFE_</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::AutoDiffFE&lt; RealFE_, FERequirementType_, useEigenRef, forceAutoDiff &gt;</label>
        <link refid="dc/d19/a01190"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RealFE_</label>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" line="31" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/autodifffe.hh" bodystart="31" bodyend="164"/>
    <listofallmembers>
      <member refid="dc/d19/a01190_1a0945c8f2eb83323d6b8767b4ce47c919" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>AutoDiffFE</name></member>
      <member refid="dc/d19/a01190_1a89a700073503fa0567afbcb5f4638b7e" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>Basis</name></member>
      <member refid="dc/d19/a01190_1aa35fb8992a69d3b8a4272722eea90c8a" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateLocalSystem</name></member>
      <member refid="dc/d19/a01190_1a2650fc875e359aab7e22e59ccbed53f8" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateMatrix</name></member>
      <member refid="dc/d19/a01190_1a1ceee52422b438e6c24386e7c17dc124" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateScalar</name></member>
      <member refid="dc/d19/a01190_1a70030068b3205be5d75548ce1f1c126f" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateVector</name></member>
      <member refid="dc/d19/a01190_1a20d9d81fd33709e9e4dd1c7223a1ccaa" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>Element</name></member>
      <member refid="dc/d19/a01190_1a1fcac1d2f958ed25af80263406a5051d" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>FERequirementType</name></member>
      <member refid="dc/d19/a01190_1a0890448ef4b8fd1605b861cb3ffd4e21" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>LocalView</name></member>
      <member refid="dc/d19/a01190_1ae3eeda5463148aeab6bec5e774791384" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>RealFE</name></member>
      <member refid="dc/d19/a01190_1af1726c92c0d829e25de3bfede15c4291" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>realFE</name></member>
      <member refid="dc/d19/a01190_1a835f66b905198f76688ee989af180828" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>Traits</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
