<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="dc/dab/a01237" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::DirichletValues</compoundname>
    <includes refid="d5/dcb/a02456" local="no">ikarus/linearalgebra/dirichletvalues.hh</includes>
    <innerclass refid="d3/d07/a01241" prot="private">Ikarus::DirichletValues::DirichletFunctions</innerclass>
    <templateparamlist>
      <param>
        <type>typename Basis_</type>
      </param>
      <param>
        <type>typename FlagsType_</type>
        <defval>std::vector&lt;bool&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/dab/a01237_1a90174bec95fb08a186f29d1d98e350dc" prot="public" static="no">
        <type>std::remove_cvref_t&lt; Basis_ &gt;</type>
        <definition>using Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::Basis =  std::remove_cvref_t&lt;Basis_&gt;</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::DirichletValues::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="31" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/dab/a01237_1a824bc5693b4b784c8ec9c65aad07da92" prot="public" static="no">
        <type>FlagsType_</type>
        <definition>using Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::FlagsType =  FlagsType_</definition>
        <argsstring></argsstring>
        <name>FlagsType</name>
        <qualifiedname>Ikarus::DirichletValues::FlagsType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="32" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/dab/a01237_1a4b708d1ae34c1f28389273f209ea79f7" prot="public" static="no">
        <type>decltype(Dune::Functions::istlVectorBackend(std::declval&lt; <ref refid="dc/dab/a01237_1a824bc5693b4b784c8ec9c65aad07da92" kindref="member">FlagsType</ref> &amp; &gt;()))</type>
        <definition>using Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::BackendType =  decltype(Dune::Functions::istlVectorBackend(std::declval&lt;FlagsType&amp;&gt;()))</definition>
        <argsstring></argsstring>
        <name>BackendType</name>
        <qualifiedname>Ikarus::DirichletValues::BackendType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="34" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="dc/dab/a01237_1ac5610d23a04c8eab17dc643528503b1b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::worldDimension</definition>
        <argsstring></argsstring>
        <name>worldDimension</name>
        <qualifiedname>Ikarus::DirichletValues::worldDimension</qualifiedname>
        <initializer>= Basis::GridView::dimensionworld</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="33" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/dab/a01237_1a0d001d06c85d09b3ce74032e558120ed" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::inhomogeneousBoundaryVectorDummy</definition>
        <argsstring></argsstring>
        <name>inhomogeneousBoundaryVectorDummy</name>
        <qualifiedname>Ikarus::DirichletValues::inhomogeneousBoundaryVectorDummy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="151" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/dab/a01237_1a6e4534fed3152a0a42032c1146c81cbb" prot="private" static="no" mutable="no">
        <type><ref refid="dc/dab/a01237_1a90174bec95fb08a186f29d1d98e350dc" kindref="member">Basis</ref></type>
        <definition>Basis Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::basis_</definition>
        <argsstring></argsstring>
        <name>basis_</name>
        <qualifiedname>Ikarus::DirichletValues::basis_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="152" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/dab/a01237_1a693370b9ed600b74228864b4048583fe" prot="private" static="no" mutable="no">
        <type><ref refid="dc/dab/a01237_1a824bc5693b4b784c8ec9c65aad07da92" kindref="member">FlagsType</ref></type>
        <definition>FlagsType Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::dirichletFlags</definition>
        <argsstring></argsstring>
        <name>dirichletFlags</name>
        <qualifiedname>Ikarus::DirichletValues::dirichletFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="153" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/dab/a01237_1ad3797546a35b0e1e3cce9f3ab04626e7" prot="private" static="no" mutable="no">
        <type><ref refid="dc/dab/a01237_1a4b708d1ae34c1f28389273f209ea79f7" kindref="member">BackendType</ref></type>
        <definition>BackendType Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::dirichletFlagsBackend</definition>
        <argsstring></argsstring>
        <name>dirichletFlagsBackend</name>
        <qualifiedname>Ikarus::DirichletValues::dirichletFlagsBackend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="154" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/dab/a01237_1a5b41bff3c1c975e8cf0cec1da9f763fe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; DirichletFunctions &gt;</type>
        <definition>std::vector&lt;DirichletFunctions&gt; Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::dirichletFunctions</definition>
        <argsstring></argsstring>
        <name>dirichletFunctions</name>
        <qualifiedname>Ikarus::DirichletValues::dirichletFunctions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="161" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/dab/a01237_1a6c7e1cf2122e41f3f41ec87ec3415a47" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::DirichletValues</definition>
        <argsstring>(const Basis_ &amp;p_basis)</argsstring>
        <name>DirichletValues</name>
        <qualifiedname>Ikarus::DirichletValues::DirichletValues</qualifiedname>
        <param>
          <type>const Basis_ &amp;</type>
          <declname>p_basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="35" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1a7de80e6ad56431b46750ddbc2580c45e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::fixBoundaryDOFs</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>fixBoundaryDOFs</name>
        <qualifiedname>Ikarus::DirichletValues::fixBoundaryDOFs</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Function to fix (set boolean values to true or false) of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback that will be called with the boolean vector of fixed boundary degrees of freedom and the usual arguments of <computeroutput>Dune::Functions::forEachBoundaryDOF</computeroutput>, see <ref refid="dc/d28/a00223" kindref="compound">Dune</ref> book page 388 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="48" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="48" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ad62158c0ddba6753a04ed26097610bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::fixDOFs</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>fixDOFs</name>
        <qualifiedname>Ikarus::DirichletValues::fixDOFs</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Function to fix (set boolean values to true or false) of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback that will be called with the stored function space basis and the boolean vector of fixed boundary degrees of freedom </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="71" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1a9a1bebfa473fd329494f484d943148c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::basis</definition>
        <argsstring>() const</argsstring>
        <name>basis</name>
        <qualifiedname>Ikarus::DirichletValues::basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="76" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ac4547ca3a0f7c62ec907da614b0c720a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiIndex</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::isConstrained</definition>
        <argsstring>(const MultiIndex &amp;multiIndex) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::DirichletValues::isConstrained</qualifiedname>
        <param>
          <type>const MultiIndex &amp;</type>
          <declname>multiIndex</declname>
        </param>
    <requiresclause>(not std::integral&lt;MultiIndex&gt;)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="80" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ad54d4f91d00e803bca5191c10f6e9ba8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::isConstrained</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::DirichletValues::isConstrained</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="85" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1a1076b17755b91d92b46905319abe3114" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::fixedDOFsize</definition>
        <argsstring>() const</argsstring>
        <name>fixedDOFsize</name>
        <qualifiedname>Ikarus::DirichletValues::fixedDOFsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="88" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ae9bb578246b89ec0b5f0960955a36c04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::DirichletValues::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="91" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1af96b1166dd15062fdafd3ba40440c1c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::container</definition>
        <argsstring>() const</argsstring>
        <name>container</name>
        <qualifiedname>Ikarus::DirichletValues::container</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="94" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ac2d42d17c6813a4a04bc98fe4346a231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::storeInhomogeneousBoundaryCondition</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>storeInhomogeneousBoundaryCondition</name>
        <qualifiedname>Ikarus::DirichletValues::storeInhomogeneousBoundaryCondition</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Function to insert a function of inhomogeneous dirichlet boundary functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback that will be called with the current coordinate vector and the scalar load factor It creates internally the first derivative of the passed function and stores them simultaneously </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="103" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ad314b92f19e3c809aa6d1ea9c4ef9674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::evaluateInhomogeneousBoundaryCondition</definition>
        <argsstring>(Eigen::VectorXd &amp;xIh, const double &amp;lambda)</argsstring>
        <name>evaluateInhomogeneousBoundaryCondition</name>
        <qualifiedname>Ikarus::DirichletValues::evaluateInhomogeneousBoundaryCondition</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>xIh</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
<para>Function to evaluate all stored inhomogeneous dirichlet boundary functions at all positions where the corresponding degrees of freedom are true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xIh</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector where the interpolated result should be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>the load factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="119" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="119" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="dc/dab/a01237_1ae309809bc3f63a4b3cd29273e1dda01e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::DirichletValues&lt; Basis_, FlagsType_ &gt;::evaluateInhomogeneousBoundaryConditionDerivative</definition>
        <argsstring>(Eigen::VectorXd &amp;xIh, const double &amp;lambda)</argsstring>
        <name>evaluateInhomogeneousBoundaryConditionDerivative</name>
        <qualifiedname>Ikarus::DirichletValues::evaluateInhomogeneousBoundaryConditionDerivative</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>xIh</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
<para>Function to evaluate all stored inhomogeneous dirichlet boundary DERIVATIVE functions at all positions where the corresponding degrees of freedom are true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xIh</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector where the interpolated result should be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>the load factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="138" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="138" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" line="29" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/dirichletvalues.hh" bodystart="29" bodyend="162"/>
    <listofallmembers>
      <member refid="dc/dab/a01237_1a4b708d1ae34c1f28389273f209ea79f7" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>BackendType</name></member>
      <member refid="dc/dab/a01237_1a90174bec95fb08a186f29d1d98e350dc" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>Basis</name></member>
      <member refid="dc/dab/a01237_1a9a1bebfa473fd329494f484d943148c7" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>basis</name></member>
      <member refid="dc/dab/a01237_1a6e4534fed3152a0a42032c1146c81cbb" prot="private" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>basis_</name></member>
      <member refid="dc/dab/a01237_1af96b1166dd15062fdafd3ba40440c1c0" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>container</name></member>
      <member refid="dc/dab/a01237_1a693370b9ed600b74228864b4048583fe" prot="private" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>dirichletFlags</name></member>
      <member refid="dc/dab/a01237_1ad3797546a35b0e1e3cce9f3ab04626e7" prot="private" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>dirichletFlagsBackend</name></member>
      <member refid="dc/dab/a01237_1a5b41bff3c1c975e8cf0cec1da9f763fe" prot="private" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>dirichletFunctions</name></member>
      <member refid="dc/dab/a01237_1a6c7e1cf2122e41f3f41ec87ec3415a47" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>DirichletValues</name></member>
      <member refid="dc/dab/a01237_1ad314b92f19e3c809aa6d1ea9c4ef9674" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>evaluateInhomogeneousBoundaryCondition</name></member>
      <member refid="dc/dab/a01237_1ae309809bc3f63a4b3cd29273e1dda01e" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>evaluateInhomogeneousBoundaryConditionDerivative</name></member>
      <member refid="dc/dab/a01237_1a7de80e6ad56431b46750ddbc2580c45e" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>fixBoundaryDOFs</name></member>
      <member refid="dc/dab/a01237_1ad62158c0ddba6753a04ed26097610bbd" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>fixDOFs</name></member>
      <member refid="dc/dab/a01237_1a1076b17755b91d92b46905319abe3114" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>fixedDOFsize</name></member>
      <member refid="dc/dab/a01237_1a824bc5693b4b784c8ec9c65aad07da92" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>FlagsType</name></member>
      <member refid="dc/dab/a01237_1a0d001d06c85d09b3ce74032e558120ed" prot="private" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>inhomogeneousBoundaryVectorDummy</name></member>
      <member refid="dc/dab/a01237_1ac4547ca3a0f7c62ec907da614b0c720a" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>isConstrained</name></member>
      <member refid="dc/dab/a01237_1ad54d4f91d00e803bca5191c10f6e9ba8" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>isConstrained</name></member>
      <member refid="dc/dab/a01237_1ae9bb578246b89ec0b5f0960955a36c04" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>size</name></member>
      <member refid="dc/dab/a01237_1ac2d42d17c6813a4a04bc98fe4346a231" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>storeInhomogeneousBoundaryCondition</name></member>
      <member refid="dc/dab/a01237_1ac5610d23a04c8eab17dc643528503b1b" prot="public" virt="non-virtual"><scope>Ikarus::DirichletValues</scope><name>worldDimension</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
