<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="dd/d6e/a01339" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ResultFunction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Dune::VTKFunction&lt; ElementType_::GridView &gt;</basecompoundref>
    <includes refid="db/ddf/a00164" local="no">ikarus/io/resultfunction.hh</includes>
    <templateparamlist>
      <param>
        <type>typename ElementType_</type>
      </param>
      <param>
        <type>typename UserFunction</type>
        <defval>Impl::DefaultUserFunction</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dd/d6e/a01339_1af9644b833b303bd3cabf3f4fb284effc" prot="public" static="no">
        <type>ElementType_</type>
        <definition>using Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::ElementType =  ElementType_</definition>
        <argsstring></argsstring>
        <name>ElementType</name>
        <qualifiedname>Ikarus::ResultFunction::ElementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="50" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d6e/a01339_1aa661da19892469d54bc070dbd0e04631" prot="public" static="no">
        <type>typename ElementType::ResultRequirementsType</type>
        <definition>using Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::ResultRequirements =  typename ElementType::ResultRequirementsType</definition>
        <argsstring></argsstring>
        <name>ResultRequirements</name>
        <qualifiedname>Ikarus::ResultFunction::ResultRequirements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="51" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d6e/a01339_1a60f3b0a6336812436e18ac14de25e0fc" prot="public" static="no">
        <type>typename ElementType::GridView</type>
        <definition>using Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::GridView =  typename ElementType::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::ResultFunction::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="52" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d6e/a01339_1a2b614ca2965a4d07f6388f3070c85c4f" prot="public" static="no">
        <type>typename GridView::ctype</type>
        <definition>using Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::ctype =  typename GridView::ctype</definition>
        <argsstring></argsstring>
        <name>ctype</name>
        <qualifiedname>Ikarus::ResultFunction::ctype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="53" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d6e/a01339_1a95b6a8f8be831236e4b2634bc852a342" prot="public" static="no">
        <type>GridView::template Codim&lt; 0 &gt;::Entity</type>
        <definition>typedef GridView::template Codim&lt;0&gt;::Entity Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::Entity</definition>
        <argsstring></argsstring>
        <name>Entity</name>
        <qualifiedname>Ikarus::ResultFunction::Entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="55" column="56" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="dd/d6e/a01339_1a1b40b371171256b66b51c1c2b12a37a3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::griddim</definition>
        <argsstring></argsstring>
        <name>griddim</name>
        <qualifiedname>Ikarus::ResultFunction::griddim</qualifiedname>
        <initializer>= GridView::dimension</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="54" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/d6e/a01339_1a5698d8c241e276900d3cdd9eef230ee1" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d6e/a01339_1a60f3b0a6336812436e18ac14de25e0fc" kindref="member">GridView</ref></type>
        <definition>GridView Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::gridView</definition>
        <argsstring></argsstring>
        <name>gridView</name>
        <qualifiedname>Ikarus::ResultFunction::gridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="137" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d6e/a01339_1ab1f5241a7d0859cb314ab1ad79aae516" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d6e/a01339_1aa661da19892469d54bc070dbd0e04631" kindref="member">ResultRequirements</ref></type>
        <definition>ResultRequirements Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::resultRequirements_</definition>
        <argsstring></argsstring>
        <name>resultRequirements_</name>
        <qualifiedname>Ikarus::ResultFunction::resultRequirements_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="138" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d6e/a01339_1acead5ed9ba981fcff0fb4ef771492b4b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dd/d6e/a01339_1af9644b833b303bd3cabf3f4fb284effc" kindref="member">ElementType</ref> &gt; *</type>
        <definition>std::vector&lt;ElementType&gt;* Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::fes_</definition>
        <argsstring></argsstring>
        <name>fes_</name>
        <qualifiedname>Ikarus::ResultFunction::fes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="139" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d6e/a01339_1ab119d5f4e3e00d203f4fd4fc2495a12c" prot="private" static="no" mutable="yes">
        <type><ref refid="d5/d39/a01219" kindref="compound">ResultTypeMap</ref>&lt; <ref refid="dd/d6e/a01339_1a2b614ca2965a4d07f6388f3070c85c4f" kindref="member">ctype</ref> &gt;</type>
        <definition>ResultTypeMap&lt;ctype&gt; Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::resultTypeMap</definition>
        <argsstring></argsstring>
        <name>resultTypeMap</name>
        <qualifiedname>Ikarus::ResultFunction::resultTypeMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="140" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d6e/a01339_1af813c0864a1426d9e02b7a8141faee73" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>Ikarus::ResultFunction::name_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="141" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d6e/a01339_1a69ca843fb52db66f42868dde3c1a2c17" prot="private" static="no" mutable="no">
        <type>UserFunction</type>
        <definition>UserFunction Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::userFunction_</definition>
        <argsstring></argsstring>
        <name>userFunction_</name>
        <qualifiedname>Ikarus::ResultFunction::userFunction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="142" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d6e/a01339_1ae07a0f7cfdc977d153022c33b2c4ada9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::evaluate</definition>
        <argsstring>(int comp, const Entity &amp;e, const Dune::FieldVector&lt; ctype, griddim &gt; &amp;local) const override</argsstring>
        <name>evaluate</name>
        <qualifiedname>Ikarus::ResultFunction::evaluate</qualifiedname>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d6e/a01339_1a95b6a8f8be831236e4b2634bc852a342" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="db/da8/a01323" kindref="compound">Dune::FieldVector</ref>&lt; <ref refid="dd/d6e/a01339_1a2b614ca2965a4d07f6388f3070c85c4f" kindref="member">ctype</ref>, <ref refid="dd/d6e/a01339_1a1b40b371171256b66b51c1c2b12a37a3" kindref="member">griddim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
<para>Evaluate the component at a given entity and local coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>Stress component index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity on which to evaluate the stress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local coordinates within the entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stress component value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="67" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="dd/d6e/a01339_1a55ddba55f148fabc822146919f7c2864" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::ncomps</definition>
        <argsstring>() const override</argsstring>
        <name>ncomps</name>
        <qualifiedname>Ikarus::ResultFunction::ncomps</qualifiedname>
        <briefdescription>
<para>Get the number of components. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><simplesect kind="return"><para>Number of stress components </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="79" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="79" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="dd/d6e/a01339_1aeab965379985b94a9c60059b01595f6b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::ResultFunction::name</qualifiedname>
        <briefdescription>
<para>Get the name of the result type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><simplesect kind="return"><para>String representing the name of the result type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="101" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="dd/d6e/a01339_1a92ae43568c42e7d621e5a99d8ecce538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::ResultFunction</definition>
        <argsstring>(std::vector&lt; ElementType &gt; *fes, const ResultRequirements &amp;req, UserFunction userFunction={})</argsstring>
        <name>ResultFunction</name>
        <qualifiedname>Ikarus::ResultFunction::ResultFunction</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="dd/d6e/a01339_1af9644b833b303bd3cabf3f4fb284effc" kindref="member">ElementType</ref> &gt; *</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d6e/a01339_1aa661da19892469d54bc070dbd0e04631" kindref="member">ResultRequirements</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>UserFunction</type>
          <declname>userFunction</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="dd/d6e/a01339" kindref="compound">ResultFunction</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="dd/d6e/a01339" kindref="compound">ResultFunction</ref> object with given finite elements, result requirements, and an optional user function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of finite elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Result requirements for evaluation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>User-defined function for custom result evaluation (default is DefaultUserFunction) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="118" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="118" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dd/d6e/a01339_1aa365430be3ac9c62367d98225dc4fc2d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;::evaluateComponent</definition>
        <argsstring>(int eleID, const Dune::FieldVector&lt; ctype, griddim &gt; &amp;local, int comp) const</argsstring>
        <name>evaluateComponent</name>
        <qualifiedname>Ikarus::ResultFunction::evaluateComponent</qualifiedname>
        <param>
          <type>int</type>
          <declname>eleID</declname>
        </param>
        <param>
          <type>const <ref refid="db/da8/a01323" kindref="compound">Dune::FieldVector</ref>&lt; <ref refid="dd/d6e/a01339_1a2b614ca2965a4d07f6388f3070c85c4f" kindref="member">ctype</ref>, <ref refid="dd/d6e/a01339_1a1b40b371171256b66b51c1c2b12a37a3" kindref="member">griddim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="127" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="127" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper to evaluate results for a vtkwriter. </para>
    </briefdescription>
    <detaileddescription>
<para>Usage: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resReq<sp/>=<sp/><ref refid="d7/ddd/a01223" kindref="compound">Ikarus::ResultRequirements</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="d7/ddd/a01223_1ac70755df382d8f81da6abbaa1c2e5199" kindref="member">insertGlobalSolution</ref>(<ref refid="d2/d82/a00279_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">Ikarus::FESolutions::displacement</ref>,<sp/>d)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="d7/ddd/a01223_1a3fbc8b71e9463eb2aff7afa73db77023" kindref="member">insertParameter</ref>(<ref refid="d2/d82/a00279_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">Ikarus::FEParameter::loadfactor</ref>,<sp/>lambda)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="d7/ddd/a01223_1a115edf304fdee5346879789896958ed3" kindref="member">addResultRequest</ref>(<ref refid="d2/d82/a00279_1gga531be167e924b749eb8b4ccc7f1c18c9afa06a140291f2b4bc25c81e5e6bac241" kindref="member">ResultType::PK2Stress</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultFunction<sp/>=<sp/>std::make_shared&lt;ResultFunction&lt;ElementType&gt;&gt;(&amp;fes,<sp/>resReq);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>vtkWriter.addPointData(Dune::Vtk::Function&lt;GridView&gt;(<sp/>resultFunction));</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>or<sp/>with<sp/>Dunes<sp/>native<sp/>Vtk</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>vtkWriter.addVertexData(resultFunction);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ElementType_</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UserFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the user-defined function for custom result evaluation (default is DefaultUserFunction) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Dune::VTKFunction&lt; ElementType_::GridView &gt;</label>
      </node>
      <node id="1">
        <label>Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;</label>
        <link refid="dd/d6e/a01339"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Dune::VTKFunction&lt; ElementType_::GridView &gt;</label>
      </node>
      <node id="1">
        <label>Ikarus::ResultFunction&lt; ElementType_, UserFunction &gt;</label>
        <link refid="dd/d6e/a01339"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="48" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="48" bodyend="143"/>
    <listofallmembers>
      <member refid="dd/d6e/a01339_1a2b614ca2965a4d07f6388f3070c85c4f" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ctype</name></member>
      <member refid="dd/d6e/a01339_1af9644b833b303bd3cabf3f4fb284effc" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ElementType</name></member>
      <member refid="dd/d6e/a01339_1a95b6a8f8be831236e4b2634bc852a342" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>Entity</name></member>
      <member refid="dd/d6e/a01339_1ae07a0f7cfdc977d153022c33b2c4ada9" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>evaluate</name></member>
      <member refid="dd/d6e/a01339_1aa365430be3ac9c62367d98225dc4fc2d" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>evaluateComponent</name></member>
      <member refid="dd/d6e/a01339_1acead5ed9ba981fcff0fb4ef771492b4b" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>fes_</name></member>
      <member refid="dd/d6e/a01339_1a1b40b371171256b66b51c1c2b12a37a3" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>griddim</name></member>
      <member refid="dd/d6e/a01339_1a5698d8c241e276900d3cdd9eef230ee1" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>gridView</name></member>
      <member refid="dd/d6e/a01339_1a60f3b0a6336812436e18ac14de25e0fc" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>GridView</name></member>
      <member refid="dd/d6e/a01339_1aeab965379985b94a9c60059b01595f6b" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>name</name></member>
      <member refid="dd/d6e/a01339_1af813c0864a1426d9e02b7a8141faee73" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>name_</name></member>
      <member refid="dd/d6e/a01339_1a55ddba55f148fabc822146919f7c2864" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ncomps</name></member>
      <member refid="dd/d6e/a01339_1a92ae43568c42e7d621e5a99d8ecce538" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ResultFunction</name></member>
      <member refid="dd/d6e/a01339_1aa661da19892469d54bc070dbd0e04631" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ResultRequirements</name></member>
      <member refid="dd/d6e/a01339_1ab1f5241a7d0859cb314ab1ad79aae516" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>resultRequirements_</name></member>
      <member refid="dd/d6e/a01339_1ab119d5f4e3e00d203f4fd4fc2495a12c" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>resultTypeMap</name></member>
      <member refid="dd/d6e/a01339_1a69ca843fb52db66f42868dde3c1a2c17" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>userFunction_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
