<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00161" kind="file" language="C++">
    <compoundname>interface.hh</compoundname>
    <includes refid="a00170" local="no">ikarus/finiteelements/mechanics/materials/strainconversions.hh</includes>
    <includes refid="a00164" local="no">ikarus/finiteelements/mechanics/materials/tags.hh</includes>
    <includes refid="a00116" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includes refid="a00026" local="no">ikarus/utils/concepts.hh</includes>
    <includes refid="a00065" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includes refid="a00008" local="no">ikarus/utils/traits.hh</includes>
    <includedby refid="a00176" local="no">linearelasticity.hh</includedby>
    <includedby refid="a00158" local="no">neohooke.hh</includedby>
    <includedby refid="a00173" local="no">svk.hh</includedby>
    <includedby refid="a00167" local="no">vanishingstress.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>interface.hh</label>
        <link refid="a00161"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00170"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tags.hh</label>
        <link refid="a00164"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00116"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00026"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="a00065"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00035"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00047"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00050"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00008"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="20">
        <label>Eigen/Sparse</label>
      </node>
      <node id="33">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="14">
        <label>concepts</label>
      </node>
      <node id="5">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="27">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="24">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="12">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="31">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="18">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="32">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="29">
        <label>iosfwd</label>
      </node>
      <node id="9">
        <label>numeric</label>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="30">
        <label>random</label>
      </node>
      <node id="10">
        <label>ranges</label>
      </node>
      <node id="23">
        <label>tuple</label>
      </node>
      <node id="15">
        <label>type_traits</label>
      </node>
      <node id="11">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="6">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="16">
        <label>utility</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a02485"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>linearelastic.hh</label>
        <link refid="a02491"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>materials.hh</label>
        <link refid="a00140"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>interface.hh</label>
        <link refid="a00161"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>linearelasticity.hh</label>
        <link refid="a00176"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>neohooke.hh</label>
        <link refid="a00158"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>svk.hh</label>
        <link refid="a00173"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vanishingstress.hh</label>
        <link refid="a00167"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a02488"/>
      </node>
      <node id="7">
        <label>linearelastic.hh</label>
        <link refid="a02494"/>
      </node>
      <node id="10">
        <label>material.hh</label>
        <link refid="a00263"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>nonlinearelastic.hh</label>
        <link refid="a02500"/>
      </node>
      <node id="8">
        <label>registerelement.hh</label>
        <link refid="a00266"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>_ikarus.cc</label>
        <link refid="a00290"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01340" prot="public">Ikarus::Material</innerclass>
    <innernamespace refid="a00328">Ikarus</innernamespace>
    <briefdescription>
<para>Contains the Material interface class and related template functions for material properties. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00170" kindref="compound">ikarus/finiteelements/mechanics/materials/strainconversions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00164" kindref="compound">ikarus/finiteelements/mechanics/materials/tags.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00116" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00026" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00065" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00008" kindref="compound">ikarus/utils/traits.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00328" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MImpl&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a00317_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">Material</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;auto<sp/>stressIndexPair,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MImpl&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">VanishingStress;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="38" refid="a00328_1ab6a92f48acd6be62f36b7f499491fc8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">consteval</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a00328_1ab6a92f48acd6be62f36b7f499491fc8a" kindref="member">hasCorrectSize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(Concepts::EigenVector6&lt;S&gt;<sp/>or<sp/>Concepts::EigenMatrix33&lt;S&gt;)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(MAT::isReduced<sp/>and<sp/><ref refid="a01672" kindref="compound">Concepts::EigenVector&lt;S&gt;</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S::RowsAtCompileTime<sp/>==<sp/>MAT::freeStrains;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="54" refid="a01646" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="a01646" kindref="compound">CorrectStrainSize</ref><sp/>=<sp/>hasCorrectSize&lt;MAT,<sp/>S&gt;();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MI&gt;</highlight></codeline>
<codeline lineno="76" refid="a01340" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01340" kindref="compound">Material</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="a01340_1a45254a604fc6a7913aa384cc60fa1422" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01340_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref><sp/>=<sp/>MI;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="a01340_1a6e16de35bf2d955d777a8441e939a20b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01340_1a6e16de35bf2d955d777a8441e939a20b" kindref="member">isReduced</ref><sp/>=<sp/>traits::isSpecializationNonTypeAndTypes&lt;VanishingStress,<sp/>MaterialImpl&gt;::value;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="a01340_1a1f36564023973d1684bf337b4584f8d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01340_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref>&amp;<sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="a01340_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="a01340_1ad3e663912e4700acb1444ce254a2599c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a01340_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref>&amp;<sp/><ref refid="a01340_1ad3e663912e4700acb1444ce254a2599c" kindref="member">impl</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="a01340_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="a01340_1aaa3ba3c13eef01692e03621abc8f35b5" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01340_1aaa3ba3c13eef01692e03621abc8f35b5" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().nameImpl();<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StrainTags<sp/>tag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a01646" kindref="compound">CorrectStrainSize&lt;MaterialImpl, Derived&gt;</ref></highlight></codeline>
<codeline lineno="118" refid="a01340_1ab2015ecf069d4d5022852d7cfc62c689" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01340_1ab2015ecf069d4d5022852d7cfc62c689" kindref="member">storedEnergy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>Eraw)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>Ev<sp/>=<sp/>enlargeIfReduced&lt;Material&gt;(Eraw);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>E<sp/><sp/>=<sp/>transformStrain&lt;tag,<sp/>MaterialImpl::strainTag&gt;(Ev);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01672" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>receiving<sp/>vector<sp/>means<sp/>voigt<sp/>notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(MaterialImpl::energyAcceptsVoigt)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().storedEnergyImpl(<ref refid="a00324_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(E));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().storedEnergyImpl(E);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().storedEnergyImpl(E);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StrainTags<sp/>tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a01646" kindref="compound">CorrectStrainSize&lt;MaterialImpl, Derived&gt;</ref></highlight></codeline>
<codeline lineno="142" refid="a01340_1ae47b0b923d01f3f2abcf5d3fd5ff04bc" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01340_1ae47b0b923d01f3f2abcf5d3fd5ff04bc" kindref="member">stresses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>Eraw)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>Ev<sp/>=<sp/>enlargeIfReduced&lt;Material&gt;(Eraw);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>E<sp/><sp/>=<sp/>transformStrain&lt;tag,<sp/>MaterialImpl::strainTag&gt;(Ev);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(voigt<sp/>and<sp/>MaterialImpl::stressToVoigt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>requests<sp/>a<sp/>Voigt<sp/>shaped<sp/>return<sp/>but<sp/>material<sp/>is<sp/>not<sp/>able<sp/>to.<sp/>Therefore,<sp/>we<sp/>transform<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00324_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(stressesMaybeTransformInputToVoigt&lt;false&gt;(E),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stressesMaybeTransformInputToVoigt&lt;voigt&gt;(E);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StrainTags<sp/>tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a01646" kindref="compound">CorrectStrainSize&lt;MaterialImpl, Derived&gt;</ref></highlight></codeline>
<codeline lineno="163" refid="a01340_1a2d9d9509fa8bbdc909868c8fd0dfe5fd" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01340_1a2d9d9509fa8bbdc909868c8fd0dfe5fd" kindref="member">tangentModuli</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>Eraw)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>Ev<sp/>=<sp/>enlargeIfReduced&lt;Material&gt;(Eraw);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>E<sp/><sp/>=<sp/>transformStrain&lt;tag,<sp/>MaterialImpl::strainTag&gt;(Ev);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(voigt<sp/>and<sp/>MaterialImpl::moduliToVoigt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>request<sp/>a<sp/>Voigt<sp/>shaped<sp/>return<sp/>but<sp/>material<sp/>is<sp/>not<sp/>able<sp/>to.<sp/>Therefore,<sp/>we<sp/>transform<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00324_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(tangentModuliMaybeTransformInputToVoigt&lt;false&gt;(E));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tangentModuliMaybeTransformInputToVoigt&lt;voigt&gt;(E);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STO&gt;</highlight></codeline>
<codeline lineno="182" refid="a01340_1a2ebc8765eb320eaab532589999fa002a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01340_1a2ebc8765eb320eaab532589999fa002a" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>rebind&lt;STO&gt;();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stressesMaybeTransformInputToVoigt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01672" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>receiving<sp/>vector<sp/>means<sp/>Voigt<sp/>notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(MaterialImpl::stressAcceptsVoigt)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>stressesImpl&lt;voigt&gt;(E);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>material<sp/>is<sp/>not<sp/>able<sp/>to<sp/>accept<sp/>Voigt<sp/>shaped<sp/>Input.<sp/>Therefore,<sp/>we<sp/>transform<sp/>it<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>stressesImpl&lt;voigt&gt;(<ref refid="a00324_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(E.derived()));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>stressesImpl&lt;voigt&gt;(E.derived());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tangentModuliMaybeTransformInputToVoigt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(Concepts::EigenVector&lt;Derived&gt;)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>receiving<sp/>vector<sp/>means<sp/>voigt<sp/>notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(MaterialImpl::moduliAcceptsVoigt)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>tangentModuliImpl&lt;voigt&gt;(E);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>tangentModuliImpl&lt;voigt&gt;(<ref refid="a00324_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(E.derived()));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01340_1a1f36564023973d1684bf337b4584f8d6" kindref="member">impl</ref>().template<sp/>tangentModuliImpl&lt;voigt&gt;(E.derived());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh"/>
  </compounddef>
</doxygen>
