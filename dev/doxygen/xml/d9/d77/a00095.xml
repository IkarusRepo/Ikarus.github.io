<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d9/d77/a00095" kind="file" language="C++">
    <compoundname>duneutilities.hh</compoundname>
    <includes local="no">Python.h</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">dune/fufem/dunepython.hh</includes>
    <includes local="no">dune/functions/functionspacebases/basistags.hh</includes>
    <includes local="no">autodiff/forward/real/real.hpp</includes>
    <includes refid="d4/d73/a02465" local="no">ikarus/utils/basis.hh</includes>
    <incdepgraph>
      <node id="9">
        <label>ikarus/utils/basis.hh</label>
        <link refid="d4/d73/a02465"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>duneutilities.hh</label>
        <link refid="d9/d77/a00095"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ikarus/utils/flatprebasis.hh</label>
        <link refid="db/dab/a00089"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Python.h</label>
      </node>
      <node id="8">
        <label>autodiff/forward/real/real.hpp</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="12">
        <label>dune/common/indices.hh</label>
      </node>
      <node id="6">
        <label>dune/fufem/dunepython.hh</label>
      </node>
      <node id="7">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="13">
        <label>dune/functions/functionspacebases/compositebasis.hh</label>
      </node>
      <node id="10">
        <label>dune/functions/functionspacebases/defaultglobalbasis.hh</label>
      </node>
      <node id="14">
        <label>dune/functions/functionspacebases/powerbasis.hh</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innerclass refid="d4/dad/a01353" prot="public">Python::Conversion&lt; autodiff::Real&lt; order, T &gt; &gt;</innerclass>
    <innernamespace refid="dd/df3/a00219">Ikarus</innernamespace>
    <innernamespace refid="df/d17/a00231">Python</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/fufem/dunepython.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/functions/functionspacebases/basistags.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autodiff/forward/real/real.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d4/d73/a02465" kindref="compound">ikarus/utils/basis.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dd/df3/a00219" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="19" refid="dd/df3/a00219_1a77b24c9895c7d075f96a71b34a6df55c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="dd/df3/a00219_1a77b24c9895c7d075f96a71b34a6df55c" kindref="member">makeSharedBasis</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::Functions::BasisFactory;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">DuneBasis<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="dd/df3/a00219_1a9a51c77ff0881c59e81e96c902b1fcd4" kindref="member">makeBasis</ref>(std::forward&lt;Args&gt;(args)...));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;DuneBasis&gt;(<ref refid="dd/df3/a00219_1a9a51c77ff0881c59e81e96c902b1fcd4" kindref="member">makeBasis</ref>(std::forward&lt;Args&gt;(args)...));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="26" refid="dd/df3/a00219_1af298994b405b47b640d3f6bbab5f2bbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="dd/df3/a00219_1af298994b405b47b640d3f6bbab5f2bbb" kindref="member">makeConstSharedBasis</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::Functions::BasisFactory;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">DuneBasis<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="dd/df3/a00219_1a9a51c77ff0881c59e81e96c902b1fcd4" kindref="member">makeBasis</ref>(std::forward&lt;Args&gt;(args)...));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;const<sp/>DuneBasis&gt;(<ref refid="dd/df3/a00219_1a9a51c77ff0881c59e81e96c902b1fcd4" kindref="member">makeBasis</ref>(std::forward&lt;Args&gt;(args)...));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="df/d17/a00231" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/d17/a00231" kindref="compound">Python</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specializations<sp/>of<sp/>Conversion<sp/>that<sp/>do<sp/>the<sp/>PyObject*<sp/>&lt;-&gt;<sp/>C++-type<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>conversion<sp/>of<sp/>autodiff::Real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>order,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="40" refid="d4/dad/a01353" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Conversion&lt;autodiff::Real&lt;order,<sp/>T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="41" refid="d4/dad/a01353_1ad71914c7a22c638ccacc40edb226c0caa800d3df3de5cd47119ccc5a0c89f2841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>useDefaultConstructorConversion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="42" refid="d4/dad/a01353_1aab78500f06d24b5eb1cd894b68eec03c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dad/a01353_1aab78500f06d24b5eb1cd894b68eec03c" kindref="member">toC</ref>(PyObject*<sp/>list,<sp/>autodiff::Real&lt;order,<sp/>T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rlist<sp/>=<sp/>Reference(Imp::inc(list));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>is<sp/>needed<sp/>to<sp/>enable<sp/>the<sp/>&quot;.get()&quot;<sp/>function<sp/>and<sp/>&quot;Imp::inc&quot;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>since<sp/>Reference<sp/>owns<sp/>the<sp/>PyObject<sp/>pointer<sp/>and<sp/>decrements<sp/>it<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Imp::inc<sp/>artificially<sp/>increases<sp/>the<sp/>reference<sp/>counter<sp/>by<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>return<sp/>from<sp/>this<sp/>function,<sp/>these<sp/>two<sp/>cancel<sp/>out<sp/>and<sp/>the<sp/>PyObject*<sp/>is<sp/>as<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wF<sp/>=<sp/>Callable(rlist.get(</highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>order<sp/>+<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[i]<sp/>=<sp/>PyFloat_AsDouble(wF(i));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="d4/dad/a01353_1ae7c12c134c747ccf36ff0bf9c453f69e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/><ref refid="d4/dad/a01353_1ae7c12c134c747ccf36ff0bf9c453f69e" kindref="member">toPy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>autodiff::Real&lt;order,<sp/>T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pyMain<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Python::main();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Python::Module<sp/>module<sp/>=<sp/>pyMain.import(</highlight><highlight class="stringliteral">&quot;autodiff&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>real1stClass<sp/>=<sp/>module.get(</highlight><highlight class="stringliteral">&quot;real1st&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>real1st<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Callable(Imp::inc(real1stClass))();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Callable(Imp::inc(real1st).get(</highlight><highlight class="stringliteral">&quot;__setitem__&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>order<sp/>+<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wF(i,<sp/>v[i]);<sp/><sp/></highlight><highlight class="comment">//<sp/>real1st.__setitem__(i,v[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>real1st;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/duneutilities.hh"/>
  </compounddef>
</doxygen>
