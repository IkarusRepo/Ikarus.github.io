<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d9/d7c/a01073" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::DenseFlatAssembler</compoundname>
    <basecompoundref refid="d0/dc9/a01065" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</basecompoundref>
    <includes refid="de/de1/a00065" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEContainer_</type>
      </param>
      <param>
        <type>typename DirichletValuesType_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d9/d7c/a01073_1a334210ba75f3f2dab50953542c04389c" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEContainer_ &gt;</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEContainer_&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="242" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d7c/a01073_1a89aff4a4368660faf50ffb1b0e48480f" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="244" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d7c/a01073_1a2d6f71c9b5edab81d6654151960cdb2e" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="245" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d7c/a01073_1a246f4115dbe2d6fadabe92823b675629" prot="public" static="no">
        <type>typename DirichletValuesType_::Basis</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::Basis =  typename DirichletValuesType_::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="246" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d7c/a01073_1aa47ae39d1198cf36e5059c51d111665b" prot="public" static="no">
        <type>FEContainer_</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainer =  FEContainer_</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="247" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d7c/a01073_1a0d2caf8c19b8eea7377b58cabcee3bc0" prot="public" static="no">
        <type>DirichletValuesType_</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::DirichletValuesType =  DirichletValuesType_</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="248" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/db8/a01057_1a0c71856323f0e835ec785987c0aada18" prot="public" static="no">
        <type>typename <ref refid="dc/d2a/a01333_1a066e94e24a8000ee0f47fff24c5c09b4" kindref="member">Basis::GridView</ref></type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="31" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/db8/a01057_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;, const <ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref>, <ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="34" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d7c/a01073_1a9f17940d79e073b6fb62ebedefe2a723" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::matRaw</definition>
        <argsstring></argsstring>
        <name>matRaw</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matRaw</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="272" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d7c/a01073_1a4e3e47947e4e8ee2477f8d3d6f92c37d" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::mat</definition>
        <argsstring></argsstring>
        <name>mat</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::mat</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="273" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d7c/a01073_1a9087fab4c47b35293423c20c2329226a" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::matRed</definition>
        <argsstring></argsstring>
        <name>matRed</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matRed</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="274" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d7c/a01073_1ab93366f696ae7d7ff75428d9fd117e00" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::DenseFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues_)</argsstring>
        <name>DenseFlatAssembler</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::DenseFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="d2/db8/a01057_1ab0275407303cf74b78fe44f0ad405e06" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="250" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="250" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/a01073_1a12716cf503b72a40ce0618a820a65628" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getRawMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity which is requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="254" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/a01073_1a888912b546a2ddbb0ceb5d769e31f5b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the matrix quantity which is requested by feRequirements and returns a reference A zero is written on fixed dofs rows and columns and a one is written on the diagonal </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="258" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/a01073_1a5cd62c7b246ab0ca3fba525de391c90b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getReducedMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the matrix quantity which is requested by feRequirements and returns a reference The size of the matrix has the size of the free degrees of freedom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="262" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="d0/dc9/a01065_1a1904b244fe6fa606c489b7969fbf12c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity which is requested by feRequirements and returns a reference *<zwj/>/. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="133" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="d0/dc9/a01065_1a10b6154f85148a2d12a1ba5fc5ecae86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the vectorial quantity which is requested by feRequirements and returns a reference A zero is written on fixed dofs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="137" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="d0/dc9/a01065_1a9c9b52a7afc7dac62127ab3b33b4fa13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the vectorial quantity which is requested by feRequirements and returns a reference This vector has a reduced size by the number of fixed degrees of freedom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="141" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="de/d9e/a01061_1aa902bc1afe643ae6f9c9b38e6a7b5897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double &amp; Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar quantity which is requested by feRequirements and returns a reference </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="100" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the free degrees of freeedom, which are not fixed by a dirichlet boundary condition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="48" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1ac105af5d51473a274f597d509308c55f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of nodes, i.e. the number of degrees of freedom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="51" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a03f97ed023cb3e704edfe556408e6167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a the fullsized vector of size #Dof and inserts the values of reduced Vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="56" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1aa92c131a0915eb5864613bdbab5c4990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the container of finite elements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="59" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of constraints below a given degrees of freedom index </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="62" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a317a691c0aca9e9d5953845762c7f626" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the boolean if a given degree of freedom is fixed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="65" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a6179ef97228c75448f8d109f031bc667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Coarse estimate of node connectivity, i.e. this relates the bandwidth of an sparse matrix. This estimate is designed that it overestimates the real connectivity since it should only be used for allocating vectors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="70" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d7c/a01073_1aff6a35bca7e24981060daac4be7139e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::assembleRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::MatrixXd &amp;assemblyMat)</argsstring>
        <name>assembleRawMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::assembleRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="267" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/a01073_1ab00129dcc5d1708b650952dad86bf56a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="268" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/a01073_1ae3b5aaa2faa75899b405366a7859ad0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="269" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/a01073_1a41dc91bb8ec3ad00a035dc0c8af417c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getReducedMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="270" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="d9/d7c/a01073" kindref="compound">DenseFlatAssembler</ref> assembles matrix quantities using a flat basis Indexing strategy The matrix is stored in a dense matrix format. This format is exploited during the assembly process </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d9/d7c/a01073"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d2/db8/a01057"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/d9e/a01061"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d0/dc9/a01065"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::DenseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d9/d7c/a01073"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d2/db8/a01057"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/d9e/a01061"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d0/dc9/a01065"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="240" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="240" bodyend="275"/>
    <listofallmembers>
      <member refid="d9/d7c/a01073_1aff6a35bca7e24981060daac4be7139e6" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>assembleRawMatrixImpl</name></member>
      <member refid="d9/d7c/a01073_1a246f4115dbe2d6fadabe92823b675629" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>Basis</name></member>
      <member refid="d2/db8/a01057_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="d2/db8/a01057_1a03f97ed023cb3e704edfe556408e6167" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="d9/d7c/a01073_1ab93366f696ae7d7ff75428d9fd117e00" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>DenseFlatAssembler</name></member>
      <member refid="d9/d7c/a01073_1a0d2caf8c19b8eea7377b58cabcee3bc0" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="d2/db8/a01057_1a6179ef97228c75448f8d109f031bc667" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="d9/d7c/a01073_1aa47ae39d1198cf36e5059c51d111665b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="d9/d7c/a01073_1a334210ba75f3f2dab50953542c04389c" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="d2/db8/a01057_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="d9/d7c/a01073_1a89aff4a4368660faf50ffb1b0e48480f" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="d2/db8/a01057_1aa92c131a0915eb5864613bdbab5c4990" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="d2/db8/a01057_1aaa76896f0fdb0e6a116bb7790dbaceb1" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="d9/d7c/a01073_1a888912b546a2ddbb0ceb5d769e31f5b3" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getMatrix</name></member>
      <member refid="d9/d7c/a01073_1ae3b5aaa2faa75899b405366a7859ad0e" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getMatrixImpl</name></member>
      <member refid="d9/d7c/a01073_1a12716cf503b72a40ce0618a820a65628" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawMatrix</name></member>
      <member refid="d9/d7c/a01073_1ab00129dcc5d1708b650952dad86bf56a" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawMatrixImpl</name></member>
      <member refid="d0/dc9/a01065_1a1904b244fe6fa606c489b7969fbf12c8" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="d9/d7c/a01073_1a5cd62c7b246ab0ca3fba525de391c90b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedMatrix</name></member>
      <member refid="d9/d7c/a01073_1a41dc91bb8ec3ad00a035dc0c8af417c5" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedMatrixImpl</name></member>
      <member refid="d0/dc9/a01065_1a9c9b52a7afc7dac62127ab3b33b4fa13" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="de/d9e/a01061_1aa902bc1afe643ae6f9c9b38e6a7b5897" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getScalar</name></member>
      <member refid="d0/dc9/a01065_1a10b6154f85148a2d12a1ba5fc5ecae86" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getVector</name></member>
      <member refid="d9/d7c/a01073_1a2d6f71c9b5edab81d6654151960cdb2e" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="d2/db8/a01057_1a0c71856323f0e835ec785987c0aada18" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>GridView</name></member>
      <member refid="d2/db8/a01057_1a317a691c0aca9e9d5953845762c7f626" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="d9/d7c/a01073_1a4e3e47947e4e8ee2477f8d3d6f92c37d" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>mat</name></member>
      <member refid="d9/d7c/a01073_1a9f17940d79e073b6fb62ebedefe2a723" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matRaw</name></member>
      <member refid="d9/d7c/a01073_1a9087fab4c47b35293423c20c2329226a" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matRed</name></member>
      <member refid="d2/db8/a01057_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="de/d9e/a01061_1a7fa7751093b40062b2250205cb1b27b2" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="d2/db8/a01057_1ac105af5d51473a274f597d509308c55f" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>size</name></member>
      <member refid="d0/dc9/a01065_1ab29654e07434ec261e3f2b449eb36a8c" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
