<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d9/d32/a01569" kind="concept">
    <compoundname>Ikarus::Concepts::NonLinearSolverCheckForPathFollowing</compoundname>
    <includes refid="d4/d3a/a00101" local="no">ikarus/utils/concepts.hh</includes>
    <templateparamlist>
      <param>
        <type>typename NonLinearSolver</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename NonLinearSolver&gt;
concept <ref refid="d9/d32/a01569" kindref="compound">Ikarus::Concepts::NonLinearSolverCheckForPathFollowing</ref> =  requires {
      std::tuple_size&lt;typename NonLinearSolver::NonLinearOperator::ParameterValues&gt;::value == 2;
      not(std::is_same_v&lt;
              typename NonLinearSolver::NonLinearOperator::ValueType,
              double&gt; and ((<ref refid="d9/dae/a01453" kindref="compound">Ikarus::Std::isSpecializationTypeAndNonTypes</ref>&lt;Eigen::Matrix, typename NonLinearSolver::NonLinearOperator::DerivativeType&gt;::value) or (<ref refid="d9/d8b/a01469" kindref="compound">Ikarus::Std::isSpecializationTypeNonTypeAndType</ref>&lt;Eigen::SparseMatrix, typename NonLinearSolver::NonLinearOperator::DerivativeType&gt;::value)));
    }    </initializer>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/concepts.hh" line="102" column="5"/>
  </compounddef>
</doxygen>
