<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01549" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ResultFunction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Dune::VTKFunction&lt; FE::GridView &gt;</basecompoundref>
    <includes refid="a00275" local="no">ikarus/io/resultfunction.hh</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="a01309" kindref="compound">FE</ref></type>
      </param>
      <param>
        <type>template&lt; typename, int, int &gt; class</type>
        <declname>RT</declname>
        <defname>RT</defname>
      </param>
      <param>
        <type>typename UserFunction</type>
        <defval>Impl::DefaultUserFunction</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01549_1a462849088db04badf789b2ae6a25de24" prot="public" static="no">
        <type><ref refid="a01309" kindref="compound">FE</ref></type>
        <definition>using Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::FiniteElement =  FE</definition>
        <argsstring></argsstring>
        <name>FiniteElement</name>
        <qualifiedname>Ikarus::ResultFunction::FiniteElement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="52" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01549_1a18155bd0f8ff92d6a92babb0033f6a52" prot="public" static="no">
        <type>typename <ref refid="a01489_1a86c0fea1b37e487f3c78cde6facca9c3" kindref="member">FiniteElement::Requirement</ref></type>
        <definition>using Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::FERequirementType =  typename FiniteElement::Requirement</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::ResultFunction::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="53" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01549_1a6d7963f63478595dabdcc5c82c8e8b7a" prot="public" static="no">
        <type>typename <ref refid="a01309_1a636f6e2bb1a51cd89f190d3744cdb7dd" kindref="member">FiniteElement::GridView</ref></type>
        <definition>using Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::GridView =  typename FiniteElement::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::ResultFunction::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="54" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01549_1a4e651e2b6ae31a5d8f7ffc7d2ea60cc2" prot="public" static="no">
        <type>typename GridView::ctype</type>
        <definition>using Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::ctype =  typename GridView::ctype</definition>
        <argsstring></argsstring>
        <name>ctype</name>
        <qualifiedname>Ikarus::ResultFunction::ctype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="55" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01549_1ad99a2516a5afbec772508d574bc0d445" prot="public" static="no">
        <type>typename GridView::template Codim&lt; 0 &gt;::Entity</type>
        <definition>using Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::Entity =  typename GridView::template Codim&lt;0&gt;::Entity</definition>
        <argsstring></argsstring>
        <name>Entity</name>
        <qualifiedname>Ikarus::ResultFunction::Entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="57" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01549_1a538071ba82449437844f32b713dd8c63" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::griddim</definition>
        <argsstring></argsstring>
        <name>griddim</name>
        <qualifiedname>Ikarus::ResultFunction::griddim</qualifiedname>
        <initializer>= GridView::dimension</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="56" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01549_1ae6b5035485ecdaf4b0fcbd03d3c8392e" prot="private" static="no" mutable="no">
        <type><ref refid="a01549_1a6d7963f63478595dabdcc5c82c8e8b7a" kindref="member">GridView</ref></type>
        <definition>GridView Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::gridView_</definition>
        <argsstring></argsstring>
        <name>gridView_</name>
        <qualifiedname>Ikarus::ResultFunction::gridView_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="140" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01549_1a34b0967caac81943720336d03ac79b42" prot="private" static="no" mutable="no">
        <type><ref refid="a01549_1a18155bd0f8ff92d6a92babb0033f6a52" kindref="member">FERequirementType</ref></type>
        <definition>FERequirementType Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::feRequirements_</definition>
        <argsstring></argsstring>
        <name>feRequirements_</name>
        <qualifiedname>Ikarus::ResultFunction::feRequirements_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="141" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01549_1aab03195d551042f7cdef2dd4101f6717" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="a01549_1a462849088db04badf789b2ae6a25de24" kindref="member">FiniteElement</ref> &gt; *</type>
        <definition>std::vector&lt;FiniteElement&gt;* Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::fes_</definition>
        <argsstring></argsstring>
        <name>fes_</name>
        <qualifiedname>Ikarus::ResultFunction::fes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="142" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01549_1aef728be97529bdfe8dd925499e48dfc3" prot="private" static="no" mutable="no">
        <type>Dune::VTK::Precision</type>
        <definition>Dune::VTK::Precision Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::prec_</definition>
        <argsstring></argsstring>
        <name>prec_</name>
        <qualifiedname>Ikarus::ResultFunction::prec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="143" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01549_1a4ba2596dbd19d4ac045a5f7efe4ba858" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>Ikarus::ResultFunction::name_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="144" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01549_1a7b20bf9afbeeafc9789e54fb287dbb22" prot="private" static="no" mutable="no">
        <type>UserFunction</type>
        <definition>UserFunction Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::userFunction_</definition>
        <argsstring></argsstring>
        <name>userFunction_</name>
        <qualifiedname>Ikarus::ResultFunction::userFunction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="145" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01549_1ad57b905d776716fc3f95db9eb4ebc3df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::evaluate</definition>
        <argsstring>(int comp, const Entity &amp;e, const Dune::FieldVector&lt; ctype, griddim &gt; &amp;local) const override</argsstring>
        <name>evaluate</name>
        <qualifiedname>Ikarus::ResultFunction::evaluate</qualifiedname>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const <ref refid="a01549_1ad99a2516a5afbec772508d574bc0d445" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="a01677" kindref="compound">Dune::FieldVector</ref>&lt; <ref refid="a01549_1a4e651e2b6ae31a5d8f7ffc7d2ea60cc2" kindref="member">ctype</ref>, <ref refid="a01549_1a538071ba82449437844f32b713dd8c63" kindref="member">griddim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
<para>Evaluate the component at a given entity and local coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>Stress component index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity on which to evaluate the stress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local coordinates within the entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stress component value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="69" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="a01549_1a27adc5ad8cd9204d76c96725c0c73f97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::ncomps</definition>
        <argsstring>() const override</argsstring>
        <name>ncomps</name>
        <qualifiedname>Ikarus::ResultFunction::ncomps</qualifiedname>
        <briefdescription>
<para>Get the number of components. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><simplesect kind="return"><para>Number of stress components </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="a01549_1a0e3cdc77b411175c6c49cd6376a2ce4d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::ResultFunction::name</qualifiedname>
        <briefdescription>
<para>Get the name of the result type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><simplesect kind="return"><para>String representing the name of the result type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="97" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="a01549_1ab9e28cd4cd0bc79ab808c4ef6fe59635" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Dune::VTK::Precision</type>
        <definition>Dune::VTK::Precision Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::precision</definition>
        <argsstring>() const override</argsstring>
        <name>precision</name>
        <qualifiedname>Ikarus::ResultFunction::precision</qualifiedname>
        <briefdescription>
<para>Get the precision used for this result. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is part of the Dune::VTKFunction interface. This has no affect when the <ref refid="a01549" kindref="compound">ResultFunction</ref> is used as part of a the dune-vtk module</para>
<para><simplesect kind="return"><para>Precision (i.e. float64 or float32) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="112" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="a01549_1ab1268cbd3d4ff4d2fa70dac608c6daac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::ResultFunction</definition>
        <argsstring>(std::vector&lt; FiniteElement &gt; *fes, const FERequirementType &amp;req, Dune::VTK::Precision prec=Dune::VTK::Precision::float64)</argsstring>
        <name>ResultFunction</name>
        <qualifiedname>Ikarus::ResultFunction::ResultFunction</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="a01549_1a462849088db04badf789b2ae6a25de24" kindref="member">FiniteElement</ref> &gt; *</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="a01549_1a18155bd0f8ff92d6a92babb0033f6a52" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>Dune::VTK::Precision</type>
          <declname>prec</declname>
          <defval>Dune::VTK::Precision::float64</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="a01549" kindref="compound">ResultFunction</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="a01549" kindref="compound">ResultFunction</ref> object with given finite elements, ferequirements</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of finite elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a01341" kindref="compound">FERequirements</ref> for evaluation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="122" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="122" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01549_1a1281f39b20ab60db283e2b4b6c8d7fa9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;::evaluateComponent</definition>
        <argsstring>(int eleID, const Dune::FieldVector&lt; ctype, griddim &gt; &amp;local, int comp) const</argsstring>
        <name>evaluateComponent</name>
        <qualifiedname>Ikarus::ResultFunction::evaluateComponent</qualifiedname>
        <param>
          <type>int</type>
          <declname>eleID</declname>
        </param>
        <param>
          <type>const <ref refid="a01677" kindref="compound">Dune::FieldVector</ref>&lt; <ref refid="a01549_1a4e651e2b6ae31a5d8f7ffc7d2ea60cc2" kindref="member">ctype</ref>, <ref refid="a01549_1a538071ba82449437844f32b713dd8c63" kindref="member">griddim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="131" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="131" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper to evaluate results for a vtkwriter. </para>
    </briefdescription>
    <detaileddescription>
<para>Usage: <programlisting><codeline><highlight class="comment">//<sp/>Usage<sp/>with<sp/>Dune::Vtk::VtkWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultFunction<sp/>=<sp/>Ikarus::makeResultVtkFunction&lt;resType&gt;(&amp;fes,<sp/>feRequirements);</highlight></codeline>
<codeline><highlight class="normal">vtkwriter.addPointData(resultFunction);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usage<sp/>with<sp/>the<sp/>native<sp/>Dune::VTKWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultFunction<sp/>=<sp/>Ikarus::makeResultFunction&lt;resType&gt;(&amp;fes,<sp/>feRequirements);</highlight></codeline>
<codeline><highlight class="normal">vtkWriter.addVertexData(resultFunction);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a01309" kindref="compound">FE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>requested result type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UserFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the user-defined function for custom result evaluation (default is DefaultUserFunction) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Dune::VTKFunction&lt; FE::GridView &gt;</label>
      </node>
      <node id="1">
        <label>Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;</label>
        <link refid="a01549"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Dune::VTKFunction&lt; FE::GridView &gt;</label>
      </node>
      <node id="1">
        <label>Ikarus::ResultFunction&lt; FE, RT, UserFunction &gt;</label>
        <link refid="a01549"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="49" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="50" bodyend="146"/>
    <listofallmembers>
      <member refid="a01549_1a4e651e2b6ae31a5d8f7ffc7d2ea60cc2" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ctype</name></member>
      <member refid="a01549_1ad99a2516a5afbec772508d574bc0d445" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>Entity</name></member>
      <member refid="a01549_1ad57b905d776716fc3f95db9eb4ebc3df" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>evaluate</name></member>
      <member refid="a01549_1a1281f39b20ab60db283e2b4b6c8d7fa9" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>evaluateComponent</name></member>
      <member refid="a01549_1a34b0967caac81943720336d03ac79b42" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>feRequirements_</name></member>
      <member refid="a01549_1a18155bd0f8ff92d6a92babb0033f6a52" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>FERequirementType</name></member>
      <member refid="a01549_1aab03195d551042f7cdef2dd4101f6717" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>fes_</name></member>
      <member refid="a01549_1a462849088db04badf789b2ae6a25de24" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>FiniteElement</name></member>
      <member refid="a01549_1a538071ba82449437844f32b713dd8c63" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>griddim</name></member>
      <member refid="a01549_1a6d7963f63478595dabdcc5c82c8e8b7a" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>GridView</name></member>
      <member refid="a01549_1ae6b5035485ecdaf4b0fcbd03d3c8392e" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>gridView_</name></member>
      <member refid="a01549_1a0e3cdc77b411175c6c49cd6376a2ce4d" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>name</name></member>
      <member refid="a01549_1a4ba2596dbd19d4ac045a5f7efe4ba858" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>name_</name></member>
      <member refid="a01549_1a27adc5ad8cd9204d76c96725c0c73f97" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ncomps</name></member>
      <member refid="a01549_1aef728be97529bdfe8dd925499e48dfc3" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>prec_</name></member>
      <member refid="a01549_1ab9e28cd4cd0bc79ab808c4ef6fe59635" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>precision</name></member>
      <member refid="a01549_1ab1268cbd3d4ff4d2fa70dac608c6daac" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ResultFunction</name></member>
      <member refid="a01549_1a7b20bf9afbeeafc9789e54fb287dbb22" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>userFunction_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
