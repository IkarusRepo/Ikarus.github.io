<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01460" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::LinearElasticityT</compoundname>
    <basecompoundref refid="a01456" prot="public" virt="non-virtual">Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</basecompoundref>
    <includes refid="a00155" local="no">ikarus/finiteelements/mechanics/materials/linearelasticity.hh</includes>
    <templateparamlist>
      <param>
        <type>typename ST</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01460_1a77d870f52b123d3a237e4d02d38589f2" prot="public" static="no">
        <type>ST</type>
        <definition>using Ikarus::LinearElasticityT&lt; ST &gt;::ScalarType =  ST</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Ikarus::LinearElasticityT::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="39" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01460_1a5f6155bf9a699f2129308056476d5de4" prot="public" static="no">
        <type><ref refid="a01468" kindref="compound">StVenantKirchhoffT</ref>&lt; <ref refid="a01460_1a77d870f52b123d3a237e4d02d38589f2" kindref="member">ScalarType</ref> &gt;</type>
        <definition>using Ikarus::LinearElasticityT&lt; ST &gt;::Base =  StVenantKirchhoffT&lt;ScalarType&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::LinearElasticityT::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="40" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01460_1ad73d906e86f52371f4c68924b6da41a6" prot="public" static="no">
        <type><ref refid="a01460_1a77d870f52b123d3a237e4d02d38589f2" kindref="member">ScalarType</ref></type>
        <definition>using Ikarus::LinearElasticityT&lt; ST &gt;::field_type =  ScalarType</definition>
        <argsstring></argsstring>
        <name>field_type</name>
        <qualifiedname>Ikarus::LinearElasticityT::field_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="50" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01460_1a91c9787944251777723d0177aa5e1df6" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="a01460_1a77d870f52b123d3a237e4d02d38589f2" kindref="member">ScalarType</ref>, <ref refid="a01460_1a19d0f531d6317ee35215abcb24ea4443" kindref="member">worldDimension</ref>, <ref refid="a01460_1a19d0f531d6317ee35215abcb24ea4443" kindref="member">worldDimension</ref> &gt;</type>
        <definition>using Ikarus::LinearElasticityT&lt; ST &gt;::StrainMatrix =  Eigen::Matrix&lt;ScalarType, worldDimension, worldDimension&gt;</definition>
        <argsstring></argsstring>
        <name>StrainMatrix</name>
        <qualifiedname>Ikarus::LinearElasticityT::StrainMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="52" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01460_1a872a6fc2940c71490de7464b82dafa98" prot="public" static="no">
        <type><ref refid="a01460_1a91c9787944251777723d0177aa5e1df6" kindref="member">StrainMatrix</ref></type>
        <definition>using Ikarus::LinearElasticityT&lt; ST &gt;::StressMatrix =  StrainMatrix</definition>
        <argsstring></argsstring>
        <name>StressMatrix</name>
        <qualifiedname>Ikarus::LinearElasticityT::StressMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="53" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01456_1a45254a604fc6a7913aa384cc60fa1422" prot="public" static="no">
        <type><ref refid="a01460" kindref="compound">LinearElasticityT</ref>&lt; ST &gt;</type>
        <definition>using Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::MaterialImpl =  LinearElasticityT&lt; ST &gt;</definition>
        <argsstring></argsstring>
        <name>MaterialImpl</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::MaterialImpl</qualifiedname>
        <briefdescription>
<para>Type of material implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="78" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01460_1a19d0f531d6317ee35215abcb24ea4443" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElasticityT&lt; ST &gt;::worldDimension</definition>
        <argsstring></argsstring>
        <name>worldDimension</name>
        <qualifiedname>Ikarus::LinearElasticityT::worldDimension</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="51" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a4ad4462749a7b1909647a44ee907ea20" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::LinearElasticityT&lt; ST &gt;::strainTag</definition>
        <argsstring></argsstring>
        <name>strainTag</name>
        <qualifiedname>Ikarus::LinearElasticityT::strainTag</qualifiedname>
        <initializer>= <ref refid="a00352_1ggacef1e451de1a99845c59d7391064fb8fa9a932b3cb396238423eb2f33ec17d6aa" kindref="member">StrainTags::linear</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="55" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a3cb0c0e557dbd3858145d445704de71e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::LinearElasticityT&lt; ST &gt;::stressTag</definition>
        <argsstring></argsstring>
        <name>stressTag</name>
        <qualifiedname>Ikarus::LinearElasticityT::stressTag</qualifiedname>
        <initializer>= <ref refid="a00352_1gga70b4ce43c53cc5e949d49919f437501ea9a932b3cb396238423eb2f33ec17d6aa" kindref="member">StressTags::linear</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="56" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a5d52d0f1f3da9bf6671dbf0321a3221f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::LinearElasticityT&lt; ST &gt;::tangentModuliTag</definition>
        <argsstring></argsstring>
        <name>tangentModuliTag</name>
        <qualifiedname>Ikarus::LinearElasticityT::tangentModuliTag</qualifiedname>
        <initializer>= <ref refid="a00352_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">TangentModuliTags::Material</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="57" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a0e2508175ba048816d130cf18ea7a84c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::LinearElasticityT&lt; ST &gt;::energyAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>energyAcceptsVoigt</name>
        <qualifiedname>Ikarus::LinearElasticityT::energyAcceptsVoigt</qualifiedname>
        <initializer>= Base::energyAcceptsVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="58" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a13a2a4712cd8e194ae1a25fc29f882be" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::LinearElasticityT&lt; ST &gt;::stressToVoigt</definition>
        <argsstring></argsstring>
        <name>stressToVoigt</name>
        <qualifiedname>Ikarus::LinearElasticityT::stressToVoigt</qualifiedname>
        <initializer>= Base::stressToVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="59" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a097e204b391f2b4034d91067629a11f9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::LinearElasticityT&lt; ST &gt;::stressAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>stressAcceptsVoigt</name>
        <qualifiedname>Ikarus::LinearElasticityT::stressAcceptsVoigt</qualifiedname>
        <initializer>= Base::stressAcceptsVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="60" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a6172b64547cf8424b7ad62166b4dbb4c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::LinearElasticityT&lt; ST &gt;::moduliToVoigt</definition>
        <argsstring></argsstring>
        <name>moduliToVoigt</name>
        <qualifiedname>Ikarus::LinearElasticityT::moduliToVoigt</qualifiedname>
        <initializer>= Base::moduliToVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="61" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1adc4e8cfdb108c23170b6bf184d54d2dd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::LinearElasticityT&lt; ST &gt;::moduliAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>moduliAcceptsVoigt</name>
        <qualifiedname>Ikarus::LinearElasticityT::moduliAcceptsVoigt</qualifiedname>
        <initializer>= Base::moduliAcceptsVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="62" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01460_1a7a7a3816adf059f0319b97aa8ceb8c7a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::LinearElasticityT&lt; ST &gt;::derivativeFactor</definition>
        <argsstring></argsstring>
        <name>derivativeFactor</name>
        <qualifiedname>Ikarus::LinearElasticityT::derivativeFactor</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="68" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01456_1a6e16de35bf2d955d777a8441e939a20b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::isReduced</definition>
        <argsstring></argsstring>
        <name>isReduced</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::isReduced</qualifiedname>
        <briefdescription>
<para>Static constant for determining if the material has vanishing stress components (is reduced). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="83" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01460_1a130ab3d886d6333e30ffc7c44e4f44f3" prot="private" static="no" mutable="no">
        <type><ref refid="a01468" kindref="compound">StVenantKirchhoffT</ref>&lt; <ref refid="a01460_1a77d870f52b123d3a237e4d02d38589f2" kindref="member">ScalarType</ref> &gt;</type>
        <definition>StVenantKirchhoffT&lt;ScalarType&gt; Ikarus::LinearElasticityT&lt; ST &gt;::svk_</definition>
        <argsstring></argsstring>
        <name>svk_</name>
        <qualifiedname>Ikarus::LinearElasticityT::svk_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="122" column="22" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01460_1a7650002253b3835e5887bc880bf7f012" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::LinearElasticityT&lt; ST &gt;::nameImpl</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nameImpl</name>
        <qualifiedname>Ikarus::LinearElasticityT::nameImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="37" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="a01460_1a9d88dabb40b32e9c617d1e9b171a4bf5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::LinearElasticityT&lt; ST &gt;::LinearElasticityT</definition>
        <argsstring>(const LamesFirstParameterAndShearModulus &amp;mpt)</argsstring>
        <name>LinearElasticityT</name>
        <qualifiedname>Ikarus::LinearElasticityT::LinearElasticityT</qualifiedname>
        <param>
          <type>const <ref refid="a01544" kindref="compound">LamesFirstParameterAndShearModulus</ref> &amp;</type>
          <declname>mpt</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="a01460" kindref="compound">LinearElasticityT</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="a01544" kindref="compound">LamesFirstParameterAndShearModulus</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="47" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a01460_1aec129dc9365c8a52e262115ca99f99b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type><ref refid="a01460_1a77d870f52b123d3a237e4d02d38589f2" kindref="member">ScalarType</ref></type>
        <definition>ScalarType Ikarus::LinearElasticityT&lt; ST &gt;::storedEnergyImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>storedEnergyImpl</name>
        <qualifiedname>Ikarus::LinearElasticityT::storedEnergyImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
<para>Calculates the stored energy in the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00373" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="78" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="78" bodyend="80"/>
        <referencedby refid="a01460_1aec129dc9365c8a52e262115ca99f99b4" compoundref="a00155" startline="78" endline="80">Ikarus::LinearElasticityT&lt; ST &gt;::storedEnergyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01460_1a85980083b520f0af677abfdf577bfad8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElasticityT&lt; ST &gt;::stressesImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>stressesImpl</name>
        <qualifiedname>Ikarus::LinearElasticityT::stressesImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
<para>Calculates the stresses in the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00373" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matrix valued return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="91" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="a01460_1adbdd31dbe305ef34be6c80c289deef94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElasticityT&lt; ST &gt;::tangentModuliImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>tangentModuliImpl</name>
        <qualifiedname>Ikarus::LinearElasticityT::tangentModuliImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
<para>Calculates the tangent moduli in the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00373" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="104" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01460_1a4a7a48ac90de2c494406681354b0f088" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STO</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElasticityT&lt; ST &gt;::rebind</definition>
        <argsstring>() const</argsstring>
        <name>rebind</name>
        <qualifiedname>Ikarus::LinearElasticityT::rebind</qualifiedname>
        <briefdescription>
<para>Rebind material to a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>STO</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type to rebind to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rebound material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="115" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="a01456_1a1f36564023973d1684bf337b4584f8d6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="a01456_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr const MaterialImpl &amp; Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="90" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01456_1ad3e663912e4700acb1444ce254a2599c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="a01456_1a45254a604fc6a7913aa384cc60fa1422" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr MaterialImpl &amp; Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="97" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="a01456_1aaa3ba3c13eef01692e03621abc8f35b5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::name</qualifiedname>
        <briefdescription>
<para>Get the name of the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="104" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="a01456_1ab2015ecf069d4d5022852d7cfc62c689" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::storedEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>storedEnergy</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::storedEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Return the stored potential energy of the material. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the free Helmholtz energy of the material</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00373" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="118" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="118" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="a01456_1ae47b0b923d01f3f2abcf5d3fd5ff04bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::stresses</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>stresses</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::stresses</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the stresses of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00373" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vectorial or Matrix return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="142" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="142" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="a01456_1a2d9d9509fa8bbdc909868c8fd0dfe5fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::tangentModuli</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>tangentModuli</name>
        <qualifiedname>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::tangentModuli</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the tangentModuli of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00373" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli in Voigt notation or as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="163" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="163" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the Linear Elasticity material model.</para>
<para>The energy is computed as. </para>
    </briefdescription>
    <detaileddescription>
<para><formula id="18">\[ \psi(\Bvep) = \frac{\lambda}{2} (\tr \Bvep)^2   +\mu \tr (\Bvep^2) ,\]</formula> where <formula id="19">$ \Bvep $</formula> denotes the linear strain tensor.</para>
<para>The second Piola-Kirchhoff stresses are computed as <formula id="20">\[ \BS(\Bvep) =\fracpt{\psi(\Bvep)}{\Bvep} = \lambda \tr \Bvep \BI  +2 \mu \Bvep,\]</formula></para>
<para>and the material tangent moduli are computed as <formula id="21">\[ \BBC(\Bvep) =\fracpt{^2\psi(\Bvep)}{\Bvep^2} =  \lambda \tr \Bvep \CI  +2 \mu \CI^{\mathrm{sym}},\]</formula> where <formula id="22">$ \CI_{IJKL} =  \de_{IJ}\de_{KL}$</formula> and <formula id="23">$ \CI_{IJKL}^\mathrm{sym} =  \frac{1}{2}(\de_{IK}\de_{JL}+
\de_{IL}\de_{JK})$</formula>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ST</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used in the material. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::LinearElasticityT&lt; ST &gt;</label>
        <link refid="a01460"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Material&lt; MI &gt;</label>
        <link refid="a01456"/>
      </node>
      <node id="2">
        <label>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</label>
        <link refid="a01456"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; LinearElasticityT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::LinearElasticityT&lt; ST &gt;</label>
        <link refid="a01460"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Material&lt; MI &gt;</label>
        <link refid="a01456"/>
      </node>
      <node id="2">
        <label>Ikarus::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</label>
        <link refid="a01456"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; LinearElasticityT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="35" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="36" bodyend="123"/>
    <listofallmembers>
      <member refid="a01460_1a5f6155bf9a699f2129308056476d5de4" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>Base</name></member>
      <member refid="a01460_1a7a7a3816adf059f0319b97aa8ceb8c7a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>derivativeFactor</name></member>
      <member refid="a01460_1a0e2508175ba048816d130cf18ea7a84c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>energyAcceptsVoigt</name></member>
      <member refid="a01460_1ad73d906e86f52371f4c68924b6da41a6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>field_type</name></member>
      <member refid="a01456_1a1f36564023973d1684bf337b4584f8d6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>impl</name></member>
      <member refid="a01456_1ad3e663912e4700acb1444ce254a2599c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>impl</name></member>
      <member refid="a01456_1a6e16de35bf2d955d777a8441e939a20b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>isReduced</name></member>
      <member refid="a01460_1a9d88dabb40b32e9c617d1e9b171a4bf5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>LinearElasticityT</name></member>
      <member refid="a01456_1a45254a604fc6a7913aa384cc60fa1422" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>MaterialImpl</name></member>
      <member refid="a01460_1adc4e8cfdb108c23170b6bf184d54d2dd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>moduliAcceptsVoigt</name></member>
      <member refid="a01460_1a6172b64547cf8424b7ad62166b4dbb4c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>moduliToVoigt</name></member>
      <member refid="a01456_1aaa3ba3c13eef01692e03621abc8f35b5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>name</name></member>
      <member refid="a01460_1a7650002253b3835e5887bc880bf7f012" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>nameImpl</name></member>
      <member refid="a01460_1a4a7a48ac90de2c494406681354b0f088" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>rebind</name></member>
      <member refid="a01460_1a77d870f52b123d3a237e4d02d38589f2" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>ScalarType</name></member>
      <member refid="a01456_1ab2015ecf069d4d5022852d7cfc62c689" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>storedEnergy</name></member>
      <member refid="a01460_1aec129dc9365c8a52e262115ca99f99b4" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>storedEnergyImpl</name></member>
      <member refid="a01460_1a91c9787944251777723d0177aa5e1df6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>StrainMatrix</name></member>
      <member refid="a01460_1a4ad4462749a7b1909647a44ee907ea20" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>strainTag</name></member>
      <member refid="a01460_1a097e204b391f2b4034d91067629a11f9" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>stressAcceptsVoigt</name></member>
      <member refid="a01456_1ae47b0b923d01f3f2abcf5d3fd5ff04bc" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>stresses</name></member>
      <member refid="a01460_1a85980083b520f0af677abfdf577bfad8" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>stressesImpl</name></member>
      <member refid="a01460_1a872a6fc2940c71490de7464b82dafa98" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>StressMatrix</name></member>
      <member refid="a01460_1a3cb0c0e557dbd3858145d445704de71e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>stressTag</name></member>
      <member refid="a01460_1a13a2a4712cd8e194ae1a25fc29f882be" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>stressToVoigt</name></member>
      <member refid="a01460_1a130ab3d886d6333e30ffc7c44e4f44f3" prot="private" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>svk_</name></member>
      <member refid="a01456_1a2d9d9509fa8bbdc909868c8fd0dfe5fd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>tangentModuli</name></member>
      <member refid="a01460_1adbdd31dbe305ef34be6c80c289deef94" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>tangentModuliImpl</name></member>
      <member refid="a01460_1a5d52d0f1f3da9bf6671dbf0321a3221f" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>tangentModuliTag</name></member>
      <member refid="a01460_1a19d0f531d6317ee35215abcb24ea4443" prot="public" virt="non-virtual"><scope>Ikarus::LinearElasticityT</scope><name>worldDimension</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
