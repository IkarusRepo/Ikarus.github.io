<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d5/de9/a00176" kind="file" language="C++">
    <compoundname>truncatedconjugategradient.hh</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">Eigen/Sparse</includes>
    <includedby refid="dd/d52/a00221" local="no">trustregion.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>truncatedconjugategradient.hh</label>
        <link refid="d5/de9/a00176"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen/Core</label>
      </node>
      <node id="3">
        <label>Eigen/Dense</label>
      </node>
      <node id="4">
        <label>Eigen/Sparse</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>truncatedconjugategradient.hh</label>
        <link refid="d5/de9/a00176"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>trustregion.hh</label>
        <link refid="dd/d52/a00221"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/de4/a01346" prot="public">Eigen::TCGInfo</innerclass>
    <innerclass refid="d7/dc4/a01354" prot="public">Eigen::internal::traits&lt; TruncatedConjugateGradient&lt; MatrixType_, UpLo, Preconditioner_ &gt; &gt;</innerclass>
    <innerclass refid="da/d61/a01350" prot="public">Eigen::TruncatedConjugateGradient</innerclass>
    <innernamespace refid="da/d50/a00301">Eigen</innernamespace>
    <innernamespace refid="d0/d61/a00302">Eigen::internal</innernamespace>
    <briefdescription>
<para>Definition of TruncatedConjugateGradient class for solving linear systems using truncated conjugate gradient method. </para>
    </briefdescription>
    <detaileddescription>
<para>This file defines the TruncatedConjugateGradient class, which is an iterative solver for solving linear systems using the truncated conjugate gradient method. It includes modifications to the original <ref refid="da/d50/a00301" kindref="compound">Eigen</ref> library&apos;s ConjugateGradient.h file. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Original<sp/>File:<sp/>https://gitlab.com/libeigen/eigen/-/blob/master/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2011-2014<sp/>Copyright<sp/>(C)<sp/>Gael<sp/>Guennebaud<sp/>&lt;gael.guennebaud@inria.fr&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MPL-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modifications:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Sparse&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="da/d50/a00301" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d50/a00301" kindref="compound">Eigen</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5a" kindref="member">TCGStopReason</ref><sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa09116173dd03279374ae42ad40f940ba" kindref="member">negativeCurvature</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa9e095c14131d90a6c10c08cd802c8aed" kindref="member">exceededTrustRegion</ref>,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa99766ccb237cb85dab3d8b55752fca4c" kindref="member">reachedTargetResidualKappaLinear</ref>,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa8ebf8c1ac80d383a21087b596c1efb27" kindref="member">reachedTargetResidualThetaSuperLinear</ref>,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa5b3d41a901032695340cf4c031e95f30" kindref="member">maximumInnerIterations</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aab00445941a90cf4c363702645ca67bab" kindref="member">modelIncreased</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="34" refid="d9/de4/a01346" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/de4/a01346" kindref="compound">TCGInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5a" kindref="member">TCGStopReason</ref><sp/><ref refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa5b3d41a901032695340cf4c031e95f30" kindref="member">TCGStopReason::maximumInnerIterations</ref>;</highlight></codeline>
<codeline lineno="36" refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/><ref refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="37" refid="d9/de4/a01346_1a2513528ae4acf6f87352c21d231df432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/><ref refid="d9/de4/a01346_1a2513528ae4acf6f87352c21d231df432" kindref="member">kappa</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="38" refid="d9/de4/a01346_1abd45d0da5afd14bd4201289fac65db38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/><ref refid="d9/de4/a01346_1abd45d0da5afd14bd4201289fac65db38" kindref="member">theta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="39" refid="d9/de4/a01346_1a6d7b2d2804c136db788473b7a36e4fad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Index<sp/><ref refid="d9/de4/a01346_1a6d7b2d2804c136db788473b7a36e4fad" kindref="member">mininner</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="40" refid="d9/de4/a01346_1a7afe22dd21170afd03420ab0a2b363df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Index<sp/><ref refid="d9/de4/a01346_1a7afe22dd21170afd03420ab0a2b363df" kindref="member">maxinner</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="41" refid="d9/de4/a01346_1aea7d60a8e86f8c8a17251b1da948ea68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Index<sp/><ref refid="d9/de4/a01346_1aea7d60a8e86f8c8a17251b1da948ea68" kindref="member">numInnerIter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d9/de4/a01346_1a981486cf6f877aab41fa5e4bb660a4e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/de4/a01346_1a981486cf6f877aab41fa5e4bb660a4e1" kindref="member">initRuntimeOptions</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_num_dof_solve)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/de4/a01346_1a7afe22dd21170afd03420ab0a2b363df" kindref="member">maxinner</ref><sp/>=<sp/>_num_dof_solve<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/><sp/><sp/><sp/>=<sp/>100000;<sp/><sp/></highlight><highlight class="comment">//<sp/>typical<sp/>distance<sp/>of<sp/>manifold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Delta0<sp/>=<sp/>Delta_bar/8.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="49" refid="d0/d61/a00302" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Rhs,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dest,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Preconditioner&gt;</highlight></codeline>
<codeline lineno="67" refid="d0/d61/a00302_1a38414bb29b6ce1a1d8cc03749acb95f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d61/a00302_1a38414bb29b6ce1a1d8cc03749acb95f7" kindref="member">truncated_conjugate_gradient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixType&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rhs&amp;<sp/>rhs,<sp/>Dest&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Preconditioner&amp;<sp/>precond,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Index&amp;<sp/>iters,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dest::RealScalar&amp;<sp/>tol_error,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/de4/a01346" kindref="compound">TCGInfo&lt;typename Dest::RealScalar&gt;</ref>&amp;<sp/>_info)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::abs;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::sqrt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dest::RealScalar<sp/>RealScalar;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dest::Scalar<sp/>Scalar;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;Scalar,<sp/>Dynamic,<sp/>1&gt;<sp/>VectorType;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>tol<sp/>=<sp/>tol_error;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>maxIters<sp/>=<sp/>iters;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>n<sp/>=<sp/>mat.cols();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VectorType<sp/>residual<sp/>=<sp/>rhs<sp/>-<sp/>mat<sp/>*<sp/>x;<sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>rhsNorm2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.norm();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealScalar<sp/>considerAsZero<sp/>=<sp/>(std::numeric_limits&lt;RealScalar&gt;::min)();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhsNorm2<sp/>&lt;=<sp/>considerAsZero)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.setZero();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iters<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tol_error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>threshold<sp/><sp/><sp/><sp/><sp/>=<sp/>numext::maxi(tol<sp/>*<sp/>tol<sp/>*<sp/>rhsNorm2<sp/>*<sp/>rhsNorm2,<sp/>considerAsZero);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>residualNorm2<sp/>=<sp/>residual.norm();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(residualNorm2<sp/>*<sp/>residualNorm2<sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iters<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tol_error<sp/>=<sp/>(residualNorm2<sp/>/<sp/>rhsNorm2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_Pd<sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_Pe_new<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_Pe<sp/><sp/><sp/><sp/><sp/>=<sp/>x.squaredNorm();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_Pd;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_Hd;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VectorType<sp/>p(n);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>precond.solve(residual);<sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>search<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>coutflag=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>=<sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa5b3d41a901032695340cf4c031e95f30" kindref="member">TCGStopReason::maximumInnerIterations</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VectorType<sp/>z(n),<sp/>tmp(n);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>absNew<sp/>=<sp/>numext::real(residual.dot(p));<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>square<sp/>of<sp/>the<sp/>absolute<sp/>value<sp/>of<sp/>r<sp/>scaled<sp/>by<sp/>invM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_Pd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>absNew;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>maxIters)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.noalias()<sp/>=<sp/>mat<sp/>*<sp/>p;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bottleneck<sp/>of<sp/>the<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_Hd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p.dot(tmp);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar<sp/>alpha<sp/><sp/>=<sp/>absNew<sp/>/<sp/>d_Hd;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>amount<sp/>we<sp/>travel<sp/>on<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e_Pe_new<sp/>=<sp/>e_Pe<sp/>+<sp/>2.0<sp/>*<sp/>alpha<sp/>*<sp/>e_Pd<sp/>+<sp/>alpha<sp/>*<sp/>alpha<sp/>*<sp/>d_Pd;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_Hd<sp/>&lt;=<sp/>0<sp/>||<sp/>e_Pe_new<sp/>&gt;=<sp/>_info.<ref refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>*<sp/>_info.<ref refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref>)<sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>curvature<sp/>or<sp/>execdet<sp/>trustregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>(-e_Pd<sp/>+<sp/>sqrt(e_Pd<sp/>*<sp/>e_Pd<sp/>+<sp/>d_Pd<sp/>*<sp/>(_info.<ref refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>*<sp/>_info.<ref refid="d9/de4/a01346_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>-<sp/>e_Pe)))<sp/>/<sp/>d_Pd;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>tau<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_Hd<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>=<sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa09116173dd03279374ae42ad40f940ba" kindref="member">TCGStopReason::negativeCurvature</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>=<sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa9e095c14131d90a6c10c08cd802c8aed" kindref="member">TCGStopReason::exceededTrustRegion</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e_Pe<sp/>=<sp/>e_Pe_new;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>alpha<sp/>*<sp/>p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>residual<sp/>-=<sp/>alpha<sp/>*<sp/>tmp;<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>residualNorm2<sp/>=<sp/>residual.norm();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>_info.<ref refid="d9/de4/a01346_1a6d7b2d2804c136db788473b7a36e4fad" kindref="member">mininner</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>residualNorm2<sp/>&lt;=<sp/>rhsNorm2<sp/>*<sp/>std::min(rhsNorm2,<sp/>_info.<ref refid="d9/de4/a01346_1a2513528ae4acf6f87352c21d231df432" kindref="member">kappa</ref>))<sp/><sp/></highlight><highlight class="comment">//<sp/>missing<sp/>pow(rhsNorm2,_info.theta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Residual<sp/>is<sp/>small<sp/>enough<sp/>to<sp/>quit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_info.<ref refid="d9/de4/a01346_1a2513528ae4acf6f87352c21d231df432" kindref="member">kappa</ref><sp/>&lt;<sp/>rhsNorm2)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>=<sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa99766ccb237cb85dab3d8b55752fca4c" kindref="member">TCGStopReason::reachedTargetResidualKappaLinear</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="d9/de4/a01346_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>=<sp/><ref refid="da/d50/a00301_1a99c0436bed03f4dd4168a21f6b69ad5aa8ebf8c1ac80d383a21087b596c1efb27" kindref="member">TCGStopReason::reachedTargetResidualThetaSuperLinear</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(residualNorm2<sp/>&lt;<sp/>threshold)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>precond.solve(residual);<sp/><sp/></highlight><highlight class="comment">//<sp/>approximately<sp/>solve<sp/>for<sp/>&quot;A<sp/>z<sp/>=<sp/>residual&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>absOld<sp/>=<sp/>absNew;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absNew<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>numext::real(residual.dot(z));<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>absolute<sp/>value<sp/>of<sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealScalar<sp/>beta<sp/>=<sp/>absNew<sp/>/<sp/>absOld;<sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>Gram-Schmidt<sp/>value<sp/>used<sp/>to<sp/>create<sp/>the<sp/>new<sp/>search<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e_Pd<sp/>=<sp/>beta<sp/>*<sp/>(e_Pd<sp/>+<sp/>alpha<sp/>*<sp/>d_Pd);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_Pd<sp/>=<sp/>absNew<sp/>+<sp/>beta<sp/>*<sp/>beta<sp/>*<sp/>d_Pd;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>z<sp/>+<sp/>beta<sp/>*<sp/>p;<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>search<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tol_error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(residualNorm2<sp/>/<sp/>rhsNorm2);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iters<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="d9/de4/a01346_1aea7d60a8e86f8c8a17251b1da948ea68" kindref="member">numInnerIter</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UpLo<sp/>=<sp/>Lower,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Preconditioner<sp/>=<sp/>DiagonalPreconditioner&lt;typename<sp/>MatrixType::Scalar&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TruncatedConjugateGradient;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UpLo,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Preconditioner_&gt;</highlight></codeline>
<codeline lineno="176" refid="d7/dc4/a01354" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">traits&lt;<ref refid="da/d61/a01350" kindref="compound">TruncatedConjugateGradient</ref>&lt;MatrixType_,<sp/>UpLo,<sp/>Preconditioner_&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="177" refid="d7/dc4/a01354_1a830b9c5b03ee1316e9e571a7ba05b2f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MatrixType_<sp/><ref refid="d7/dc4/a01354_1a830b9c5b03ee1316e9e571a7ba05b2f2" kindref="member">MatrixType</ref>;</highlight></codeline>
<codeline lineno="178" refid="d7/dc4/a01354_1a6854c22e7816c75ad6495977616aab71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Preconditioner_<sp/><ref refid="d7/dc4/a01354_1a6854c22e7816c75ad6495977616aab71" kindref="member">Preconditioner</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UpLo_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Preconditioner_&gt;</highlight></codeline>
<codeline lineno="191" refid="da/d61/a01350" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d61/a01350" kindref="compound">TruncatedConjugateGradient</ref></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IterativeSolverBase&lt;TruncatedConjugateGradient&lt;MatrixType_,<sp/>UpLo_,<sp/>Preconditioner_&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194" refid="da/d61/a01350_1ae16fb346feda99ba74d0eb6c6e3e7ece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>IterativeSolverBase&lt;TruncatedConjugateGradient&gt;<sp/><ref refid="da/d61/a01350_1ae16fb346feda99ba74d0eb6c6e3e7ece" kindref="member">Base</ref>;</highlight></codeline>
<codeline lineno="195" refid="da/d61/a01350_1a424099a1cac74a8684bcd170441f5415" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d61/a01350_1a424099a1cac74a8684bcd170441f5415" kindref="member">TruncatedConjugateGradient</ref>(<ref refid="da/d61/a01350" kindref="compound">TruncatedConjugateGradient</ref>&amp;&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="da/d61/a01350_1ae16fb346feda99ba74d0eb6c6e3e7ece" kindref="member">Base</ref>(std::move(other)),<sp/>algInfo{other.algInfo}<sp/>{}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Base::m_error;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Base::m_info;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Base::m_isInitialized;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Base::m_iterations;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Base::matrix;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>TCGInfo&lt;typename<sp/>MatrixType_::RealScalar&gt;<sp/>algInfo;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207" refid="da/d61/a01350_1a8fb475e49bebbab5c9dfcf5325f4bb73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MatrixType_<sp/><ref refid="da/d61/a01350_1a8fb475e49bebbab5c9dfcf5325f4bb73" kindref="member">MatrixType</ref>;</highlight></codeline>
<codeline lineno="208" refid="da/d61/a01350_1a7451d2a0e27db7fb57336f288343a84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType::Scalar<sp/><ref refid="da/d61/a01350_1a7451d2a0e27db7fb57336f288343a84f" kindref="member">Scalar</ref>;</highlight></codeline>
<codeline lineno="209" refid="da/d61/a01350_1a86d1cdc1073006c2d5d809b4c0b77908" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType::RealScalar<sp/><ref refid="da/d61/a01350_1a86d1cdc1073006c2d5d809b4c0b77908" kindref="member">RealScalar</ref>;</highlight></codeline>
<codeline lineno="210" refid="da/d61/a01350_1a62244905718a3538dbc1f9b36046d4d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Preconditioner_<sp/><ref refid="da/d61/a01350_1a62244905718a3538dbc1f9b36046d4d6" kindref="member">Preconditioner</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="da/d61/a01350_1a0603ac61442a6378829c85bdcbcdcf9baa341af00893c1487dfd65d57e9f96d6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="da/d61/a01350_1a0603ac61442a6378829c85bdcbcdcf9baa341af00893c1487dfd65d57e9f96d6b" kindref="member">UpLo</ref><sp/>=<sp/>UpLo_<sp/>};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219" refid="da/d61/a01350_1a5ea4822b3fd6ed682262d6624209e116" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/de4/a01346" kindref="compound">TCGInfo&lt;typename MatrixType::RealScalar&gt;</ref><sp/><ref refid="da/d61/a01350_1a5ea4822b3fd6ed682262d6624209e116" kindref="member">getInfo</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>algInfo;<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="da/d61/a01350_1a73bcfc1126485468abd73569c0a1a6ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d61/a01350_1a73bcfc1126485468abd73569c0a1a6ac" kindref="member">setInfo</ref>(<ref refid="d9/de4/a01346" kindref="compound">TCGInfo&lt;typename MatrixType::RealScalar&gt;</ref><sp/>_alginfo)<sp/>{<sp/>this-&gt;algInfo<sp/>=<sp/>_alginfo;<sp/>}</highlight></codeline>
<codeline lineno="227" refid="da/d61/a01350_1a02491a65df30cd0cfb68b894f3627a6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d61/a01350_1a02491a65df30cd0cfb68b894f3627a6e" kindref="member">TruncatedConjugateGradient</ref>()<sp/>:<sp/><ref refid="da/d61/a01350_1ae16fb346feda99ba74d0eb6c6e3e7ece" kindref="member">Base</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixDerived&gt;</highlight></codeline>
<codeline lineno="240" refid="da/d61/a01350_1a6c5ad1eb772b8f2590827647ad6594f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="da/d61/a01350_1a6c5ad1eb772b8f2590827647ad6594f2" kindref="member">TruncatedConjugateGradient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d3c/a01418" kindref="compound">EigenBase&lt;MatrixDerived&gt;</ref>&amp;<sp/>A)<sp/>:<sp/><ref refid="da/d61/a01350_1ae16fb346feda99ba74d0eb6c6e3e7ece" kindref="member">Base</ref>(A.derived())<sp/>{}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="da/d61/a01350_1aa572ab1738a73b78411575a2574c1339" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d61/a01350_1aa572ab1738a73b78411575a2574c1339" kindref="member">~TruncatedConjugateGradient</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Rhs,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dest&gt;</highlight></codeline>
<codeline lineno="246" refid="da/d61/a01350_1a23170151337c9f8681f6087d0c036c8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d61/a01350_1a23170151337c9f8681f6087d0c036c8a" kindref="member">_solve_vector_with_guess_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rhs&amp;<sp/>b,<sp/>Dest&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::MatrixWrapper<sp/>MatrixWrapper;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::ActualMatrixType<sp/>ActualMatrixType;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TransposeInput<sp/>=<sp/>(!MatrixWrapper::MatrixFree)<sp/>&amp;&amp;<sp/>(<ref refid="da/d61/a01350_1a0603ac61442a6378829c85bdcbcdcf9baa341af00893c1487dfd65d57e9f96d6b" kindref="member">UpLo</ref><sp/>==<sp/>(Lower<sp/>|<sp/>Upper))<sp/>&amp;&amp;<sp/>(!MatrixType::IsRowMajor)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!NumTraits&lt;Scalar&gt;::IsComplex)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::conditional_t&lt;TransposeInput,<sp/>Transpose&lt;const<sp/>ActualMatrixType&gt;,<sp/>ActualMatrixType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowMajorWrapper;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EIGEN_STATIC_ASSERT(internal::check_implication(MatrixWrapper::MatrixFree,<sp/><ref refid="da/d61/a01350_1a0603ac61442a6378829c85bdcbcdcf9baa341af00893c1487dfd65d57e9f96d6b" kindref="member">UpLo</ref><sp/>==<sp/>(Lower<sp/>|<sp/>Upper)),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MATRIX_FREE_CONJUGATE_GRADIENT_IS_COMPATIBLE_WITH_UPPER_UNION_LOWER_MODE_ONLY);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::conditional_t&lt;<ref refid="da/d61/a01350_1a0603ac61442a6378829c85bdcbcdcf9baa341af00893c1487dfd65d57e9f96d6b" kindref="member">UpLo</ref><sp/>==<sp/>(Lower<sp/>|<sp/>Upper),<sp/>RowMajorWrapper,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixWrapper::template<sp/>ConstSelfAdjointViewReturnType&lt;UpLo&gt;::Type&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelfAdjointWrapper;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_iterations<sp/>=<sp/>Base::maxIterations();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_error<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Base::m_tolerance;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RowMajorWrapper<sp/>row_mat(matrix());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d61/a00302_1a38414bb29b6ce1a1d8cc03749acb95f7" kindref="member">internal::truncated_conjugate_gradient</ref>(SelfAdjointWrapper(row_mat),<sp/>b,<sp/>x,<sp/>Base::m_preconditioner,<sp/>m_iterations,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_error,<sp/>algInfo);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_info<sp/>=<sp/>m_error<sp/>&lt;=<sp/>Base::m_tolerance<sp/>?<sp/>Success<sp/>:<sp/>NoConvergence;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Eigen</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/linearalgebra/truncatedconjugategradient.hh"/>
  </compounddef>
</doxygen>
