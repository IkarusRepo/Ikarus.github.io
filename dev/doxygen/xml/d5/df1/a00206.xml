<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d5/df1/a00206" kind="file" language="C++">
    <compoundname>observer.hh</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="d4/dee/a00008" local="no">ikarus/utils/makeenum.hh</includes>
    <includedby refid="de/db1/a00197" local="yes">controllogger.hh</includedby>
    <includedby refid="de/d79/a00203" local="yes">controlvtkwriter.hh</includedby>
    <includedby refid="d3/de5/a00209" local="no">genericobserver.hh</includedby>
    <includedby refid="d6/de1/a00233" local="no">loadcontrol.hh</includedby>
    <includedby refid="dd/d52/a00221" local="no">newtonraphson.hh</includedby>
    <includedby refid="d9/d01/a00227" local="no">newtonraphsonwithscalarsubsidiaryfunction.hh</includedby>
    <includedby refid="d3/db1/a00200" local="yes">nonlinearsolverlogger.hh</includedby>
    <includedby refid="d0/d27/a00239" local="no">pathfollowing.hh</includedby>
    <includedby refid="d6/d22/a00245" local="no">pathfollowing.inl</includedby>
    <includedby refid="d5/ddf/a00224" local="no">trustregion.hh</includedby>
    <incdepgraph>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>observer.hh</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>loadcontrol.hh</label>
        <link refid="d6/de1/a00233"/>
      </node>
      <node id="17">
        <label>pathfollowing.hh</label>
        <link refid="d0/d27/a00239"/>
      </node>
      <node id="18">
        <label>pathfollowing.inl</label>
        <link refid="d6/d22/a00245"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>kirchhoffloveshell.hh</label>
        <link refid="da/d5c/a02432"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linearelastic.hh</label>
        <link refid="da/d6b/a02438"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>materials.hh</label>
        <link refid="d6/db8/a00158"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vanishingstress.hh</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d1/de1/a02435"/>
      </node>
      <node id="12">
        <label>linearelastic.hh</label>
        <link refid="d9/dd6/a02441"/>
      </node>
      <node id="14">
        <label>material.hh</label>
        <link refid="de/df3/a00185"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>registerelement.hh</label>
        <link refid="d7/d25/a00182"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>newtonraphson.hh</label>
        <link refid="dd/d52/a00221"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>newtonraphsonwithscalarsubsidiaryfunction.hh</label>
        <link refid="d9/d01/a00227"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>trustregion.hh</label>
        <link refid="d5/ddf/a00224"/>
      </node>
      <node id="2">
        <label>controllogger.hh</label>
        <link refid="de/db1/a00197"/>
      </node>
      <node id="3">
        <label>controlvtkwriter.hh</label>
        <link refid="de/d79/a00203"/>
      </node>
      <node id="4">
        <label>genericobserver.hh</label>
        <link refid="d3/de5/a00209"/>
      </node>
      <node id="19">
        <label>nonlinearsolverlogger.hh</label>
        <link refid="d3/db1/a00200"/>
      </node>
      <node id="1">
        <label>observer.hh</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>_ikarus.cc</label>
        <link refid="dd/dd7/a00260"/>
      </node>
    </invincdepgraph>
    <innerclass refid="df/d3f/a01537" prot="public">Ikarus::IObserver</innerclass>
    <innerclass refid="d5/dc8/a01541" prot="public">Ikarus::IObservable</innerclass>
    <innernamespace refid="d9/d0d/a00298">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the observer design pattern. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d4/dee/a00008" kindref="compound">ikarus/utils/makeenum.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/d0d/a00298" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="25" refid="df/d3f/a01537" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d3f/a01537" kindref="compound">IObserver</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="df/d3f/a01537_1afda55d0cee706fa7a2df824e2a149a9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1afda55d0cee706fa7a2df824e2a149a9e" kindref="member">~IObserver</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="df/d3f/a01537_1a8c171635a257ce7fe905a58337717efe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a8c171635a257ce7fe905a58337717efe" kindref="member">update</ref>(MessageType<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="df/d3f/a01537_1a0f235d3f9f49582c0902dfcd5217f4a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a0f235d3f9f49582c0902dfcd5217f4a1" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="df/d3f/a01537_1a97bf3fd861a8eac696a97ec56d953b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a97bf3fd861a8eac696a97ec56d953b47" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="df/d3f/a01537_1a05a6a76b6875406ae8ff5e05f2662d57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a05a6a76b6875406ae8ff5e05f2662d57" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="df/d3f/a01537_1ab87bc0dab48de914d7f5221fb9c3477b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1ab87bc0dab48de914d7f5221fb9c3477b" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="df/d3f/a01537_1a5d2fb507095933199fab726c17e01bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a5d2fb507095933199fab726c17e01bcf" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="df/d3f/a01537_1a20e3859480f6cab562f33ce9da888380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a20e3859480f6cab562f33ce9da888380" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>(message,<sp/>vec);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a478eaa94650cf462a050e28ecf098773" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message){};</highlight></codeline>
<codeline lineno="103" refid="df/d3f/a01537_1a663889f78a7dbd3561fa6a497e023a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a663889f78a7dbd3561fa6a497e023a23" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val){};</highlight></codeline>
<codeline lineno="104" refid="df/d3f/a01537_1adc61a4813394bdde201018db198544a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1adc61a4813394bdde201018db198544a3" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val){};</highlight></codeline>
<codeline lineno="105" refid="df/d3f/a01537_1ae97b76e37ab99f985a0ef71f4a9efd37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1ae97b76e37ab99f985a0ef71f4a9efd37" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val){};</highlight></codeline>
<codeline lineno="106" refid="df/d3f/a01537_1af53b8b154a887fce37fee355b0244c21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1af53b8b154a887fce37fee355b0244c21" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2){};</highlight></codeline>
<codeline lineno="107" refid="df/d3f/a01537_1a4d0a13cbe1104d10c4ec5e928f64ab4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a4d0a13cbe1104d10c4ec5e928f64ab4b" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2){};</highlight></codeline>
<codeline lineno="108" refid="df/d3f/a01537_1a4b7267849be75994c85c8ebe7af10465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d3f/a01537_1a4b7267849be75994c85c8ebe7af10465" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>vec)<sp/>{}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkMessageType(MessageType<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageType::END<sp/>==<sp/>message)<sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>END<sp/>enum<sp/>type<sp/>should<sp/>not<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageType::BEGIN<sp/>==<sp/>message)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>BEGIN<sp/>enum<sp/>type<sp/>should<sp/>not<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="125" refid="d5/dc8/a01541" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/dc8/a01541" kindref="compound">IObservable</ref><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127" refid="d5/dc8/a01541_1ac8058d5b1ebb462a10712ba598154e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dc8/a01541_1ac8058d5b1ebb462a10712ba598154e23" kindref="member">IObservable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MessageType<sp/>msg<sp/>=<sp/>MessageType::BEGIN;<sp/>msg<sp/>!=<sp/>MessageType::END;<sp/><ref refid="d6/d82/a00293_1ga5db6e8f04892e85e6b17e276cdbd0e54" kindref="member">Ikarus::increment</ref>(msg))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messages_.push_back(msg);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131" refid="d5/dc8/a01541_1ad1fe15b31cccec8e44c695af550938ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1ad1fe15b31cccec8e44c695af550938ed" kindref="member">~IObservable</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137" refid="d5/dc8/a01541_1ae182a206a72de6bc4585152d32332349" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1ae182a206a72de6bc4585152d32332349" kindref="member">subscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="142" refid="d5/dc8/a01541_1a13bd8d73b485186680f640786e2682e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a13bd8d73b485186680f640786e2682e5" kindref="member">subscribeAll</ref>(std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="147" refid="d5/dc8/a01541_1a026462a1a050728e37bc24e33d2edd9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a026462a1a050728e37bc24e33d2edd9c" kindref="member">subscribeAll</ref>(std::initializer_list&lt;std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;&gt;<sp/>observers);</highlight></codeline>
<codeline lineno="153" refid="d5/dc8/a01541_1a49622286d2b15f0b8a2b25275e6bc771" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a49622286d2b15f0b8a2b25275e6bc771" kindref="member">unSubscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="158" refid="d5/dc8/a01541_1a5c20f7eab2233d085071a4fd3b44cbda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a5c20f7eab2233d085071a4fd3b44cbda" kindref="member">unSubscribeAll</ref>(std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="163" refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(MessageType<sp/>message);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="172" refid="d5/dc8/a01541_1ac035ba934c33e090c4a45128ac13f190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1ac035ba934c33e090c4a45128ac13f190" kindref="member">notify</ref>(MessageType<sp/>message,<sp/>ScalarType<sp/>val);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="d5/dc8/a01541_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="d5/dc8/a01541_1a2f93322aa7327069dd4469983933bd16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a2f93322aa7327069dd4469983933bd16" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="d5/dc8/a01541_1ae0c6cec757e540f22b65fce1f782e380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1ae0c6cec757e540f22b65fce1f782e380" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="d5/dc8/a01541_1a72e3156874ce81a1c7548b9f74db522c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a72e3156874ce81a1c7548b9f74db522c" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="211" refid="d5/dc8/a01541_1ac72b261cd2af7f59e98f1504814bc785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1ac72b261cd2af7f59e98f1504814bc785" kindref="member">notify</ref>(MessageType<sp/>message,<sp/>Eigen::VectorX&lt;ScalarType&gt;<sp/>vec);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ObserverVector<sp/>=<sp/>std::vector&lt;std::shared_ptr&lt;IObserver&lt;MessageType&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ObserverMap<sp/><sp/><sp/><sp/>=<sp/>std::map&lt;MessageType,<sp/>ObserverVector&gt;;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ObserverMap<sp/>observers_;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;MessageType&gt;<sp/>messages_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="221" refid="d5/dc8/a01541_1ae182a206a72de6bc4585152d32332349" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1ae182a206a72de6bc4585152d32332349" kindref="member">IObservable&lt;MessageType&gt;::subscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>observers_[message];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>vectorOfObserversOfASpecificMessage.push_back(observer);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="228" refid="d5/dc8/a01541_1a13bd8d73b485186680f640786e2682e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a13bd8d73b485186680f640786e2682e5" kindref="member">IObservable&lt;MessageType&gt;::subscribeAll</ref>(std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="234" refid="d5/dc8/a01541_1a026462a1a050728e37bc24e33d2edd9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a13bd8d73b485186680f640786e2682e5" kindref="member">IObservable&lt;MessageType&gt;::subscribeAll</ref>(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::initializer_list&lt;std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;&gt;<sp/>observers)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>observer<sp/>:<sp/>observers)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="242" refid="d5/dc8/a01541_1a49622286d2b15f0b8a2b25275e6bc771" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a49622286d2b15f0b8a2b25275e6bc771" kindref="member">IObservable&lt;MessageType&gt;::unSubscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ranges::remove_if(vectorOfObserversOfASpecificMessage,<sp/>[&amp;observer](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obs<sp/>==<sp/>observer;<sp/>});</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="248" refid="d5/dc8/a01541_1a5c20f7eab2233d085071a4fd3b44cbda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a5c20f7eab2233d085071a4fd3b44cbda" kindref="member">IObservable&lt;MessageType&gt;::unSubscribeAll</ref>(std::shared_ptr&lt;<ref refid="df/d3f/a01537" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unSubscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="254" refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="262" refid="d5/dc8/a01541_1ac035ba934c33e090c4a45128ac13f190" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/>ScalarType<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="269" refid="d5/dc8/a01541_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="276" refid="d5/dc8/a01541_1a2f93322aa7327069dd4469983933bd16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="283" refid="d5/dc8/a01541_1ae0c6cec757e540f22b65fce1f782e380" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="290" refid="d5/dc8/a01541_1a72e3156874ce81a1c7548b9f74db522c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="298" refid="d5/dc8/a01541_1ac72b261cd2af7f59e98f1504814bc785" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dc8/a01541_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/>Eigen::VectorX&lt;ScalarType&gt;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>vec);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh"/>
  </compounddef>
</doxygen>
