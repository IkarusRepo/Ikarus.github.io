<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00281" kind="file" language="C++">
    <compoundname>fehelper.hh</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">optional</includes>
    <includes local="no">dune/localfefunctions/manifolds/realTuple.hh</includes>
    <includes refid="a00005" local="no">ikarus/utils/traversal.hh</includes>
    <includedby refid="a00266" local="no">enhancedassumedstrains.hh</includedby>
    <includedby refid="a00263" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="a00269" local="no">linearelastic.hh</includedby>
    <includedby refid="a00272" local="no">nonlinearelastic.hh</includedby>
    <includedby refid="a00122" local="no">simpleassemblers.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>fehelper.hh</label>
        <link refid="a00281"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/traversal.hh</label>
        <link refid="a00005"/>
      </node>
      <node id="4">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>simpleassemblers.hh</label>
        <link refid="a00122"/>
      </node>
      <node id="1">
        <label>fehelper.hh</label>
        <link refid="a00281"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>enhancedassumedstrains.hh</label>
        <link refid="a00266"/>
      </node>
      <node id="3">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a00263"/>
      </node>
      <node id="4">
        <label>linearelastic.hh</label>
        <link refid="a00269"/>
      </node>
      <node id="5">
        <label>nonlinearelastic.hh</label>
        <link refid="a00272"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="a00337">Ikarus</innernamespace>
    <innernamespace refid="a00340">Ikarus::FEHelper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/manifolds/realTuple.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00005" kindref="compound">ikarus/utils/traversal.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="a00340" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00340" kindref="compound">Ikarus::FEHelper</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="27" refid="a00340_1abefb582caeb6d7f2ae68579e460540a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00340_1abefb582caeb6d7f2ae68579e460540a9" kindref="member">localSolutionBlockVector</ref>(</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::FERequirementType::SolutionVectorTypeRaw&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::LocalView&amp;<sp/>localView,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worldDim<sp/>=<sp/>Traits::worlddim;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>localView.tree().child(0).finiteElement();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>Dune::BlockVector&lt;Dune::RealTuple&lt;ST,<sp/>worldDim&gt;&gt;<sp/>localX(fe.size());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>localX.size();<sp/>++i)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0U;<sp/>j<sp/>&lt;<sp/>worldDim;<sp/>++j)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localX[i][j]<sp/>=</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx.value().get()[i<sp/>*<sp/>worldDim<sp/>+<sp/>j]<sp/>+<sp/>x[localView.index(localView.tree().child(j).localIndex(i))[0]];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>localX.size();<sp/>++i)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0U;<sp/>j<sp/>&lt;<sp/>worldDim;<sp/>++j)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localX[i][j]<sp/>=<sp/>x[localView.index(localView.tree().child(j).localIndex(i))[0]];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>localX;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>leafNodeIndices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalView&amp;<sp/>localView,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node&amp;<sp/>node,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;typename<sp/>LocalView::MultiIndex&gt;&amp;<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/>=<sp/>node.finiteElement();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe.size();<sp/>++i)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.push_back(localView.index(node.localIndex(i)));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>powerNodeIndices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalView&amp;<sp/>localView,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node&amp;<sp/>node,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;typename<sp/>LocalView::MultiIndex&gt;&amp;<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node.child(0).finiteElement();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childrenSize<sp/>=<sp/>node.degree();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe.size();<sp/>++i)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>childrenSize;<sp/>++j)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.push_back(localView.index(node.child(j).localIndex(i)));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView&gt;</highlight></codeline>
<codeline lineno="94" refid="a00340_1a2a4ac5503d4288b339457aae427ff661" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00340_1a2a4ac5503d4288b339457aae427ff661" kindref="member">globalIndicesFromLocalView</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalView&amp;<sp/>localView,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;typename<sp/>LocalView::MultiIndex&gt;&amp;<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>assert(localView.bound());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.clear();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::Indices;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">FEHelper::Impl;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>leafOpFunc<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>node,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>treePath)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>leafNodeIndices(localView,<sp/>node,<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>powerOpFunc<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>node,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>treePath)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>powerNodeIndices(localView,<sp/>node,<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="a00350_1a63742d75d099b93da7ddf6e78a3c1f56" kindref="member">utils::forEachLeafOrPowerLeafNode</ref>(localView.tree(),<sp/>Dune::TypeTree::hybridTreePath(),<sp/>powerOpFunc,<sp/>leafOpFunc);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FiniteElement&gt;</highlight></codeline>
<codeline lineno="124" refid="a00340_1a44e16df41148f7e4538be224814a3423" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FiniteElement&amp;<sp/>fe,<sp/>std::vector&lt;typename<sp/>FiniteElement::LocalView::MultiIndex&gt;&amp;<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="a00340_1a2a4ac5503d4288b339457aae427ff661" kindref="member">globalIndicesFromLocalView</ref>(fe.localView(),<sp/><ref refid="a00340_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::FEHelper</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fehelper.hh"/>
  </compounddef>
</doxygen>
