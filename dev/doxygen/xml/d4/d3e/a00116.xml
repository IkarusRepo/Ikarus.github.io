<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d4/d3e/a00116" kind="file" language="C++">
    <compoundname>physicshelper.hh</compoundname>
    <includes local="no">dune/common/float_cmp.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="df/d98/a00107" local="no">autodifffe.hh</includedby>
    <includedby refid="d5/db1/a00140" local="no">interface.hh</includedby>
    <includedby refid="d5/df1/a02392" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="dc/d09/a02398" local="no">linearelastic.hh</includedby>
    <includedby refid="db/db1/a02404" local="no">nonlinearelastic.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>physicshelper.hh</label>
        <link refid="d4/d3e/a00116"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Core</label>
      </node>
      <node id="2">
        <label>dune/common/float_cmp.hh</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>autodifffe.hh</label>
        <link refid="df/d98/a00107"/>
      </node>
      <node id="6">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d5/df1/a02392"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>linearelastic.hh</label>
        <link refid="dc/d09/a02398"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>materials.hh</label>
        <link refid="d3/df8/a00155"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>interface.hh</label>
        <link refid="d5/db1/a00140"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>linearelasticity.hh</label>
        <link refid="d9/db6/a00146"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>neohooke.hh</label>
        <link refid="da/d1e/a00149"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>svk.hh</label>
        <link refid="d7/d06/a00131"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vanishingstress.hh</label>
        <link refid="de/d76/a00134"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>nonlinearelastic.hh</label>
        <link refid="db/db1/a02404"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>physicshelper.hh</label>
        <link refid="d4/d3e/a00116"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d3/d62/a02395"/>
      </node>
      <node id="9">
        <label>linearelastic.hh</label>
        <link refid="d2/d62/a02401"/>
      </node>
      <node id="11">
        <label>material.hh</label>
        <link refid="db/dd9/a00179"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>nonlinearelastic.hh</label>
        <link refid="d4/dad/a02407"/>
      </node>
      <node id="10">
        <label>registerelement.hh</label>
        <link refid="d5/de9/a00176"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>_ikarus.cc</label>
        <link refid="d7/d03/a00254"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d4/da0/a01291" prot="public">Ikarus::TraitsFromLocalView</innerclass>
    <innerclass refid="d2/d68/a01295" prot="public">Ikarus::YoungsModulusAndPoissonsRatio</innerclass>
    <innerclass refid="d8/d38/a01299" prot="public">Ikarus::YoungsModulusAndShearModulus</innerclass>
    <innerclass refid="d6/d07/a01303" prot="public">Ikarus::YoungsModulusAndBulkModulus</innerclass>
    <innerclass refid="d2/d4c/a01307" prot="public">Ikarus::YoungsModulusAndLamesFirstParameter</innerclass>
    <innerclass refid="de/d69/a01311" prot="public">Ikarus::BulkModulusAndLamesFirstParameter</innerclass>
    <innerclass refid="d2/d8e/a01315" prot="public">Ikarus::LamesFirstParameterAndShearModulus</innerclass>
    <innerclass refid="d1/d72/a01319" prot="public">Ikarus::ConvertLameConstants</innerclass>
    <innernamespace refid="d8/d0a/a00292">Ikarus</innernamespace>
    <briefdescription>
<para>Material property functions and conversion utilities. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains material property functions and conversion utilities related to linear elasticity. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/float_cmp.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d8/d0a/a00292" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>[[deprecated(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;These<sp/>are<sp/>hard-coded<sp/>function<sp/>you<sp/>should<sp/>use<sp/>the<sp/>material<sp/>library<sp/>Ikarus::LinearElasticity&quot;</highlight><highlight class="normal">)]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3d</highlight></codeline>
<codeline lineno="27" refid="d8/d0a/a00292_1a90678a80e6b2b4849072623df02dae58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d0a/a00292_1a90678a80e6b2b4849072623df02dae58" kindref="member">planeStressLinearElasticMaterialTangent</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>C;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>C.setZero();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>C(0,<sp/>0)<sp/>=<sp/>C(1,<sp/>1)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>C(0,<sp/>1)<sp/>=<sp/>C(1,<sp/>0)<sp/>=<sp/>nu;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>C(2,<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>-<sp/>nu)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>*=<sp/>E<sp/>/<sp/>(1<sp/>-<sp/>nu<sp/>*<sp/>nu);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>[[deprecated(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;These<sp/>are<sp/>hard-coded<sp/>function<sp/>you<sp/>should<sp/>use<sp/>the<sp/>material<sp/>library:<sp/>Ikarus::LinearElasticity&quot;</highlight><highlight class="normal">)]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double,<sp/>6,<sp/>6&gt;</highlight></codeline>
<codeline lineno="48" refid="d8/d0a/a00292_1afc9c57d60ca4a8c1075c44d926e497a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d0a/a00292_1afc9c57d60ca4a8c1075c44d926e497a8" kindref="member">linearElasticMaterialTangent3D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>6,<sp/>6&gt;<sp/>C;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>C.setZero();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>C(0,<sp/>0)<sp/>=<sp/>C(1,<sp/>1)<sp/>=<sp/>C(2,<sp/>2)<sp/>=<sp/>1<sp/>-<sp/>nu;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>C(0,<sp/>1)<sp/>=<sp/>C(1,<sp/>0)<sp/>=<sp/>C(2,<sp/>0)<sp/>=<sp/>C(0,<sp/>2)<sp/>=<sp/>C(1,<sp/>2)<sp/>=<sp/>C(2,<sp/>1)<sp/>=<sp/>nu;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>C(3,<sp/>3)<sp/>=<sp/>C(4,<sp/>4)<sp/>=<sp/>C(5,<sp/>5)<sp/>=<sp/>(1<sp/>-<sp/>2<sp/>*<sp/>nu)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>*=<sp/>E<sp/>/<sp/>((1<sp/>+<sp/>nu)<sp/>*<sp/>(1<sp/>-<sp/>2<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useRef<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="65" refid="d4/da0/a01291" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d4/da0/a01291" kindref="compound">TraitsFromLocalView</ref><sp/>{</highlight></codeline>
<codeline lineno="66" refid="d4/da0/a01291_1aa0c1ac11ffc970e6afb09d360f2f84cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d4/da0/a01291_1aa0c1ac11ffc970e6afb09d360f2f84cf" kindref="member">GridEntity</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element;</highlight></codeline>
<codeline lineno="68" refid="d4/da0/a01291_1a47ccda97cc8e04f87be6d2c3a165ba98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/da0/a01291_1a47ccda97cc8e04f87be6d2c3a165ba98" kindref="member">worlddim</ref><sp/>=<sp/>GridEntity::Geometry::coorddimension;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="d4/da0/a01291_1ab29f61e7d71697962fe41642d683f9f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/da0/a01291_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">mydim</ref><sp/>=<sp/>GridEntity::mydimension;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="d4/da0/a01291_1aae28c168c70513855e463fed63b13502" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/da0/a01291_1aae28c168c70513855e463fed63b13502" kindref="member">dimension</ref><sp/>=<sp/>GridEntity::dimension;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="78" refid="d4/da0/a01291_1a8eb13a47b7fbaca4d8cedc28665dc522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d4/da0/a01291_1a8eb13a47b7fbaca4d8cedc28665dc522" kindref="member">VectorType</ref><sp/>=<sp/>std::conditional_t&lt;useRef,<sp/>Eigen::Ref&lt;Eigen::VectorX&lt;ScalarType&gt;&gt;,<sp/>Eigen::VectorX&lt;ScalarType&gt;&amp;&gt;;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="82" refid="d4/da0/a01291_1a1865d55ba52b06685f13bc81517feb1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d4/da0/a01291_1a1865d55ba52b06685f13bc81517feb1c" kindref="member">MatrixType</ref><sp/>=<sp/>std::conditional_t&lt;useRef,<sp/>Eigen::Ref&lt;Eigen::MatrixX&lt;ScalarType&gt;&gt;,<sp/>Eigen::MatrixX&lt;ScalarType&gt;&amp;&gt;;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="d2/d68/a01295" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d2/d68/a01295" kindref="compound">YoungsModulusAndPoissonsRatio</ref><sp/>{</highlight></codeline>
<codeline lineno="88" refid="d2/d68/a01295_1a6c00be8aacc18c845b00748b1e56c83c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d68/a01295_1a6c00be8aacc18c845b00748b1e56c83c" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="89" refid="d2/d68/a01295_1acb99903e7b1b13967a0757d284e014ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d68/a01295_1acb99903e7b1b13967a0757d284e014ed" kindref="member">nu</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="d8/d38/a01299" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d38/a01299" kindref="compound">YoungsModulusAndShearModulus</ref><sp/>{</highlight></codeline>
<codeline lineno="94" refid="d8/d38/a01299_1ab9d965c2a2c0409682aaea9ca45be83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d38/a01299_1ab9d965c2a2c0409682aaea9ca45be83b" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="95" refid="d8/d38/a01299_1a12468705489862b9e7470f197b499d0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d38/a01299_1a12468705489862b9e7470f197b499d0f" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="d6/d07/a01303" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d6/d07/a01303" kindref="compound">YoungsModulusAndBulkModulus</ref><sp/>{</highlight></codeline>
<codeline lineno="100" refid="d6/d07/a01303_1a218a7076cb5434dd30811ffe50b39964" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/d07/a01303_1a218a7076cb5434dd30811ffe50b39964" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="101" refid="d6/d07/a01303_1a996ac473697809e0e44551037cf6d4f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/d07/a01303_1a996ac473697809e0e44551037cf6d4f0" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="d2/d4c/a01307" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d2/d4c/a01307" kindref="compound">YoungsModulusAndLamesFirstParameter</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="d2/d4c/a01307_1ac0163a851cf3f135906c79a95cca835f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d4c/a01307_1ac0163a851cf3f135906c79a95cca835f" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="107" refid="d2/d4c/a01307_1ab38e15b12e0e703652627c73b8639ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d4c/a01307_1ab38e15b12e0e703652627c73b8639ee8" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="de/d69/a01311" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d69/a01311" kindref="compound">BulkModulusAndLamesFirstParameter</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="de/d69/a01311_1a4f5868738c5673adf557e914123d0c8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d69/a01311_1a4f5868738c5673adf557e914123d0c8e" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="113" refid="de/d69/a01311_1a82f624b8171315c48c0bb5d39ef2f5d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d69/a01311_1a82f624b8171315c48c0bb5d39ef2f5d8" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="d2/d8e/a01315" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d2/d8e/a01315" kindref="compound">LamesFirstParameterAndShearModulus</ref><sp/>{</highlight></codeline>
<codeline lineno="118" refid="d2/d8e/a01315_1a0157695e9fc8b735e86f828cc35b64fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d8e/a01315_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="119" refid="d2/d8e/a01315_1a3558ad06d2a831f0d412d76956d516f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d8e/a01315_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialParameter&gt;</highlight></codeline>
<codeline lineno="128" refid="d6/dd7/a01555" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="d6/dd7/a01555" kindref="compound">MaterialParameterTuple</ref><sp/>=<sp/>std::is_same_v&lt;MaterialParameter,<sp/>YoungsModulusAndPoissonsRatio&gt;<sp/>or<sp/>std::is_same_v&lt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MaterialParameter,<sp/>YoungsModulusAndBulkModulus&gt;<sp/>or<sp/>std::is_same_v&lt;MaterialParameter,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YoungsModulusAndLamesFirstParameter&gt;<sp/>or<sp/>std::</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_same_v&lt;MaterialParameter,<sp/>BulkModulusAndLamesFirstParameter&gt;<sp/>or<sp/>std::is_same_v&lt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaterialParameter,<sp/>LamesFirstParameterAndShearModulus&gt;<sp/>or<sp/>std::is_same_v&lt;MaterialParameter,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YoungsModulusAndShearModulus&gt;;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuePair&gt;</highlight></codeline>
<codeline lineno="141" refid="d1/d72/a01319" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants</ref><sp/>{</highlight></codeline>
<codeline lineno="142" refid="d1/d72/a01319_1ab180d31a46c95ba6f5f9ba596095c7f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319_1ab180d31a46c95ba6f5f9ba596095c7f9" kindref="member">toLamesFirstParameter</ref>()<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValuePair,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d4c/a01307" kindref="compound">YoungsModulusAndLamesFirstParameter</ref>&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp.nu;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::FloatCmp::eq(nu,<sp/>0.5)<sp/>?<sp/>std::numeric_limits&lt;double&gt;::infinity()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>E<sp/>*<sp/>nu<sp/>/<sp/>((1.0<sp/>+<sp/>nu)<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mu<sp/>*<sp/>(E<sp/>-<sp/>2.0<sp/>*<sp/>mu)<sp/>/<sp/>(3.0<sp/>*<sp/>mu<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>*<sp/>(3.0<sp/>*<sp/>K<sp/>-<sp/>E)<sp/>/<sp/>(9.0<sp/>*<sp/>K<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="d1/d72/a01319_1a01f6532092896ff2e3556aace6704af4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319_1a01f6532092896ff2e3556aace6704af4" kindref="member">toBulkModulus</ref>()<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValuePair,<sp/><ref refid="d6/d07/a01303" kindref="compound">YoungsModulusAndBulkModulus</ref>&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp.nu;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>/<sp/>(3.0<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>*<sp/>mu<sp/>/<sp/>(3.0<sp/>*<sp/>(3.0<sp/>*<sp/>mu<sp/>-<sp/>E));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(E<sp/>+<sp/>3.0<sp/>*<sp/>lambda<sp/>+<sp/>calcR(vp))<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="d1/d72/a01319_1ad29a653238be34f96ae24902aa523657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319_1ad29a653238be34f96ae24902aa523657" kindref="member">toShearModulus</ref>()<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValuePair,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d38/a01299" kindref="compound">YoungsModulusAndShearModulus</ref>&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp.nu;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>/<sp/>(2.0<sp/>*<sp/>(1.0<sp/>+<sp/>nu));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>*<sp/>E<sp/>/<sp/>(9.0<sp/>*<sp/>K<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(E<sp/>-<sp/>3.0<sp/>*<sp/>lambda<sp/>+<sp/>calcR(vp))<sp/>/<sp/>4.0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>(K<sp/>-<sp/>lambda)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="d1/d72/a01319_1abf0e01900bfaeacf08cc9af500f42c05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319_1abf0e01900bfaeacf08cc9af500f42c05" kindref="member">toPWaveModulus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp.nu;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>*<sp/>(1.0<sp/>-<sp/>nu)<sp/>/<sp/>((1.0<sp/>+<sp/>nu)<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mu<sp/>*<sp/>(4.0<sp/>*<sp/>mu<sp/>-<sp/>E)<sp/>/<sp/>(3.0<sp/>*<sp/>mu<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>*<sp/>(3.0<sp/>*<sp/>K<sp/>+<sp/>E)<sp/>/<sp/>(9.0<sp/>*<sp/>K<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(E<sp/>-<sp/>lambda<sp/>+<sp/>calcR(vp))<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>-<sp/>2.0<sp/>*<sp/>lambda;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="d1/d72/a01319_1a7193fdef2358be914614114c45345112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319_1a7193fdef2358be914614114c45345112" kindref="member">toPoissonsRatio</ref>()<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>/<sp/>(2.0<sp/>*<sp/>mu)<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(3.0<sp/>*<sp/>K<sp/>-<sp/>E)<sp/>/<sp/>(6.0<sp/>*<sp/>K);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.emodul;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0<sp/>*<sp/>lambda<sp/>/<sp/>(E<sp/>+<sp/>lambda<sp/>+<sp/>calcR(vp));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp.K;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>/<sp/>(3<sp/>*<sp/>K<sp/>-<sp/>lambda);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>/<sp/>(2.0<sp/>*<sp/>(lambda<sp/>+<sp/>mu));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="d1/d72/a01319_1a0f0c758dceaa0c252ef5a7fb78911048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319_1a0f0c758dceaa0c252ef5a7fb78911048" kindref="member">toYoungsModulus</ref>()<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValuePair,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d68/a01295" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;<sp/>and<sp/>!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>9.0<sp/>*<sp/>vp.K<sp/>*<sp/>(vp.K<sp/>-<sp/>vp.lambda)<sp/>/<sp/>(3.0<sp/>*<sp/>vp.K<sp/>-<sp/>vp.lambda);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp.lambda;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp.mu;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mu<sp/>*<sp/>(3.0<sp/>*<sp/>lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu)<sp/>/<sp/>(lambda<sp/>+<sp/>mu);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>private<sp/>:<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndPoissonsRatio&gt;</ref><sp/><ref refid="d1/d72/a01319_1aafc9afc69d20972e526bd6202a342739" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d68/a01295" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&amp;<sp/>p_vp);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndShearModulus&gt;</ref><sp/><ref refid="d1/d72/a01319_1aafc9afc69d20972e526bd6202a342739" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d38/a01299" kindref="compound">YoungsModulusAndShearModulus</ref>&amp;<sp/>p_vp);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndBulkModulus&gt;</ref><sp/><ref refid="d1/d72/a01319_1aafc9afc69d20972e526bd6202a342739" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d07/a01303" kindref="compound">YoungsModulusAndBulkModulus</ref>&amp;<sp/>p_vp);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;LamesFirstParameterAndShearModulus&gt;</ref><sp/><ref refid="d1/d72/a01319_1aafc9afc69d20972e526bd6202a342739" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d8e/a01315" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>p_vp);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;BulkModulusAndLamesFirstParameter&gt;</ref><sp/><ref refid="d1/d72/a01319_1aafc9afc69d20972e526bd6202a342739" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d69/a01311" kindref="compound">BulkModulusAndLamesFirstParameter</ref>&amp;<sp/>p_vp);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants</ref>(ValuePair&amp;&amp;<sp/>p_vp)<sp/>:<sp/>vp(p_vp)<sp/>{}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>ConvertLameConstants(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValuePair&amp;<sp/>p_vp)<sp/>:<sp/>vp(p_vp)<sp/>{}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calcR(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YoungsModulusAndLamesFirstParameter&amp;<sp/>vp_)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(E<sp/>*<sp/>E<sp/>+<sp/>9<sp/>*<sp/>lambda<sp/>*<sp/>lambda<sp/>+<sp/>2<sp/>*<sp/>E<sp/>*<sp/>lambda);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ValuePair<sp/>vp;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="301" refid="d1/d72/a01319_1aafc9afc69d20972e526bd6202a342739" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndPoissonsRatio&gt;</ref><sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d68/a01295" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&amp;<sp/>p_vp)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{p_vp};</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305" refid="d1/d72/a01319_1af982ce6129d0a9d0da287417d2a39b68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndShearModulus&gt;</ref><sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d38/a01299" kindref="compound">YoungsModulusAndShearModulus</ref>&amp;<sp/>p_vp)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{p_vp};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309" refid="d1/d72/a01319_1a4017f87caa93536fc86abb622a594b78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndBulkModulus&gt;</ref><sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d07/a01303" kindref="compound">YoungsModulusAndBulkModulus</ref>&amp;<sp/>p_vp)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{p_vp};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313" refid="d1/d72/a01319_1a04195b1bca1ae486a1702b4626755389" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;LamesFirstParameterAndShearModulus&gt;</ref><sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d8e/a01315" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>p_vp)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{p_vp};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317" refid="d1/d72/a01319_1a9b8deebfb22a5e0403ec45a0ba614265" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d1/d72/a01319" kindref="compound">ConvertLameConstants&lt;BulkModulusAndLamesFirstParameter&gt;</ref><sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d69/a01311" kindref="compound">BulkModulusAndLamesFirstParameter</ref>&amp;<sp/>p_vp)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{p_vp};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="d8/d0a/a00292_1a32940ef922d090491ffcaa9bf2a44aef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d0a/a00292_1a32940ef922d090491ffcaa9bf2a44aef" kindref="member">toLamesFirstParameterAndShearModulus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d68/a01295" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&amp;<sp/>matParameter)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(matParameter).toLamesFirstParameter();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(matParameter).toShearModulus();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8e/a01315" kindref="compound">LamesFirstParameterAndShearModulus</ref>{.<ref refid="d2/d8e/a01315_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>=<sp/>lambda,<sp/>.mu<sp/>=<sp/>mu};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="d8/d0a/a00292_1a4161393d679e5ec44806e6e911e26dee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d0a/a00292_1a4161393d679e5ec44806e6e911e26dee" kindref="member">toYoungsModulusAndPoissonsRatio</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d8e/a01315" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>matParameter)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>emod<sp/>=<sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(matParameter).toYoungsModulus();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nu<sp/><sp/><sp/>=<sp/><ref refid="d8/d0a/a00292_1aef16f39eb73407dd874bc14426576a4e" kindref="member">convertLameConstants</ref>(matParameter).toPoissonsRatio();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d68/a01295" kindref="compound">YoungsModulusAndPoissonsRatio</ref>{.<ref refid="d2/d68/a01295_1a6c00be8aacc18c845b00748b1e56c83c" kindref="member">emodul</ref><sp/>=<sp/>emod,<sp/>.nu<sp/>=<sp/>nu};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/physicshelper.hh"/>
  </compounddef>
</doxygen>
