<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01292" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::EnhancedAssumedStrains</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DFE</basecompoundref>
    <includes refid="a00242" local="no">ikarus/finiteelements/mechanics/enhancedassumedstrains.hh</includes>
    <templateparamlist>
      <param>
        <type>typename DFE</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01292_1aa4d918d0864a183347834f9861174790" prot="public" static="no">
        <type>DFE</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::DisplacementBasedElement =  DFE</definition>
        <argsstring></argsstring>
        <name>DisplacementBasedElement</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::DisplacementBasedElement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="36" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01292_1a97269308bd2801507db2e6a94dbb2af6" prot="public" static="no">
        <type>typename DisplacementBasedElement::FERequirementType</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::FERequirementType =  typename DisplacementBasedElement::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="37" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01292_1a74d724732937e321623e6176fa6972b8" prot="public" static="no">
        <type>typename DisplacementBasedElement::LocalView</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::LocalView =  typename DisplacementBasedElement::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="38" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01292_1a1b26b4672074c3cab9342283a103d24f" prot="public" static="no">
        <type>typename DisplacementBasedElement::Geometry</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::Geometry =  typename DisplacementBasedElement::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="39" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01292_1a43e20490ab0d404b63750e724c06d420" prot="public" static="no">
        <type>typename DisplacementBasedElement::GridView</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::GridView =  typename DisplacementBasedElement::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="40" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01292_1a953bd75b1ff8c1dec35e12bb7f44a27d" prot="public" static="no">
        <type>typename DisplacementBasedElement::Traits</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::Traits =  typename DisplacementBasedElement::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="41" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01292_1a6d779d7a8301ba07d50629ba21fedc08" prot="private" static="no" mutable="no">
        <type><ref refid="a01288" kindref="compound">EAS::EASVariant</ref>&lt; <ref refid="a01292_1a1b26b4672074c3cab9342283a103d24f" kindref="member">Geometry</ref> &gt;</type>
        <definition>EAS::EASVariant&lt;Geometry&gt; Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::easVariant_</definition>
        <argsstring></argsstring>
        <name>easVariant_</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::easVariant_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="238" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01292_1ad366a827ed55497b781a7c8e0ebc3b34" prot="private" static="no" mutable="yes">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::L_</definition>
        <argsstring></argsstring>
        <name>L_</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::L_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="239" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01292_1aea3c27cdfb45456acdc300b2bce56dce" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::EnhancedAssumedStrains</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>EnhancedAssumedStrains</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::EnhancedAssumedStrains</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>( not std::is_same_v&lt;std::remove_cvref_t&lt;std::tuple_element_t&lt;0, std::tuple&lt;Args...&gt;&gt;&gt;, EnhancedAssumedStrains&gt;)    </requiresclause>
        <briefdescription>
<para>Constructor for Enhanced Assumed Strains elements. </para>
        </briefdescription>
        <detaileddescription>
<para>Disabling this forwarding constructor if the argument provided is <ref refid="a01292" kindref="compound">EnhancedAssumedStrains</ref> itself, to forward the calls to the implicit copy constructor <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Variadic template for constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments forwarded to the base class. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="55" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="55" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1a1a7e1d6360c959bd4d8262a930cd7b0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculates a scalar quantity for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates a scalar quantity for the element based on the FERequirementType.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Computed scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="66" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1ac3916915d1d0e5b9bc89468acb9faed2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::isDisplacementBased</definition>
        <argsstring>() const</argsstring>
        <name>isDisplacementBased</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::isDisplacementBased</qualifiedname>
        <briefdescription>
<para>Checks if the element is displacement-based and the <ref refid="a00331" kindref="compound">EAS</ref> is turned off. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the element is displacement-based, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="78" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="78" bodyend="78"/>
        <referencedby refid="a01292_1a1a7e1d6360c959bd4d8262a930cd7b0b" compoundref="a00242" startline="66" endline="71">Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateScalar</referencedby>
        <referencedby refid="a01292_1a0ec23706e5aeda1d9d8ed1a952d57027" compoundref="a00242" startline="193" endline="199">Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01292_1adfe962d09df6de05e8a8a3e875ba046c" compoundref="a00242" startline="183" endline="189">Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::setEASType</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01292_1ab6b14cef4929414a0b054799e83b0a32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates vectorial quantities for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the vectorial quantities for the element based on the FERequirementType.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the calculated forces. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="88" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1a6c74ad9c1f3de43daf4253232969f324" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::easVariant</definition>
        <argsstring>() const</argsstring>
        <name>easVariant</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::easVariant</qualifiedname>
        <briefdescription>
<para>Gets the variant representing the type of Enhanced Assumed Strains (<ref refid="a00331" kindref="compound">EAS</ref>). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the <ref refid="a00331" kindref="compound">EAS</ref> variant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="97" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1a7e84eeac980c53200988ded58cbbe273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::numberOfEASParameters</definition>
        <argsstring>() const</argsstring>
        <name>numberOfEASParameters</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::numberOfEASParameters</qualifiedname>
        <briefdescription>
<para>Gets the number of <ref refid="a00331" kindref="compound">EAS</ref> parameters based on the current <ref refid="a00331" kindref="compound">EAS</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of <ref refid="a00331" kindref="compound">EAS</ref> parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="104" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="104" bodyend="104"/>
        <referencedby refid="a01292_1adfe962d09df6de05e8a8a3e875ba046c" compoundref="a00242" startline="183" endline="189">Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::setEASType</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01292_1a710d6492af5902d5cc4a3e4481372898" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the matrix for the element based on the FERequirementType.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store the calculated stiffness. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>fill K with displacement-based stiffness. It is assumed to be assembled block-wise on element level. This means the displacements x,y,z of node I are grouped together.</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="114" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="114" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1a362c0e974d3441af17e9d4594ce4eb84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00312_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref></type>
            <declname>resType</declname>
            <defname>resType</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateAt</definition>
        <argsstring>(const FERequirementType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01496" kindref="compound">Dune::FieldVector</ref>&lt; double, Traits::mydim &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
<para>Calculates a requested result at a specific local position using the Enhanced Assumed Strains (<ref refid="a00331" kindref="compound">EAS</ref>) method. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the results at the specified local coordinates . It takes into account the displacement-based element calculations and, if applicable, incorporates the <ref refid="a00331" kindref="compound">EAS</ref> method for enhanced accuracy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The result requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>The local coordinates at which results are to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated result</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>resType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requested result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="148" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="148" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1adfe962d09df6de05e8a8a3e875ba046c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::setEASType</definition>
        <argsstring>(int numberOfEASParameters)</argsstring>
        <name>setEASType</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::setEASType</qualifiedname>
        <param>
          <type>int</type>
          <declname>numberOfEASParameters</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="a00331" kindref="compound">EAS</ref> type for 2D elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfEASParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of <ref refid="a00331" kindref="compound">EAS</ref> parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="183" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="183" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01292_1a0ec23706e5aeda1d9d8ed1a952d57027" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>ScalarType</type>
        <definition>ScalarType Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="193" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="193" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="a01292_1a24d232578192661667e78c555dc5b7b3" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="202" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="202" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01292_1a3f560602c668d405b47102c0c1c737ba" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>enhancedStrainSize</declname>
            <defname>enhancedStrainSize</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DFE &gt;::calculateDAndLMatrix</definition>
        <argsstring>(const auto &amp;easFunction, const auto &amp;par, Eigen::Matrix&lt; double, enhancedStrainSize, enhancedStrainSize &gt; &amp;DMat, Eigen::MatrixXd &amp;LMat) const</argsstring>
        <name>calculateDAndLMatrix</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateDAndLMatrix</qualifiedname>
        <param>
          <type>const auto &amp;</type>
          <declname>easFunction</declname>
        </param>
        <param>
          <type>const auto &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; double, enhancedStrainSize, enhancedStrainSize &gt; &amp;</type>
          <declname>DMat</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>LMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="242" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="242" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper class for using Enhanced Assumed Strains (<ref refid="a00331" kindref="compound">EAS</ref>) with displacement based elements. </para>
    </briefdescription>
    <detaileddescription>
<para>This class extends a displacement-based element to support Enhanced Assumed Strains.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DFE</parametername>
</parameternamelist>
<parameterdescription>
<para>The base displacement-based element type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DFE</label>
      </node>
      <node id="1">
        <label>Ikarus::EnhancedAssumedStrains&lt; DFE &gt;</label>
        <link refid="a01292"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DFE</label>
      </node>
      <node id="1">
        <label>Ikarus::EnhancedAssumedStrains&lt; DFE &gt;</label>
        <link refid="a01292"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="33" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="34" bodyend="267"/>
    <listofallmembers>
      <member refid="a01292_1a362c0e974d3441af17e9d4594ce4eb84" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateAt</name></member>
      <member refid="a01292_1a3f560602c668d405b47102c0c1c737ba" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateDAndLMatrix</name></member>
      <member refid="a01292_1a710d6492af5902d5cc4a3e4481372898" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateMatrix</name></member>
      <member refid="a01292_1a1a7e1d6360c959bd4d8262a930cd7b0b" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateScalar</name></member>
      <member refid="a01292_1a0ec23706e5aeda1d9d8ed1a952d57027" prot="protected" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateScalarImpl</name></member>
      <member refid="a01292_1ab6b14cef4929414a0b054799e83b0a32" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateVector</name></member>
      <member refid="a01292_1a24d232578192661667e78c555dc5b7b3" prot="protected" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateVectorImpl</name></member>
      <member refid="a01292_1aa4d918d0864a183347834f9861174790" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>DisplacementBasedElement</name></member>
      <member refid="a01292_1a6c74ad9c1f3de43daf4253232969f324" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>easVariant</name></member>
      <member refid="a01292_1a6d779d7a8301ba07d50629ba21fedc08" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>easVariant_</name></member>
      <member refid="a01292_1aea3c27cdfb45456acdc300b2bce56dce" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>EnhancedAssumedStrains</name></member>
      <member refid="a01292_1a97269308bd2801507db2e6a94dbb2af6" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>FERequirementType</name></member>
      <member refid="a01292_1a1b26b4672074c3cab9342283a103d24f" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>Geometry</name></member>
      <member refid="a01292_1a43e20490ab0d404b63750e724c06d420" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>GridView</name></member>
      <member refid="a01292_1ac3916915d1d0e5b9bc89468acb9faed2" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>isDisplacementBased</name></member>
      <member refid="a01292_1ad366a827ed55497b781a7c8e0ebc3b34" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>L_</name></member>
      <member refid="a01292_1a74d724732937e321623e6176fa6972b8" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>LocalView</name></member>
      <member refid="a01292_1a7e84eeac980c53200988ded58cbbe273" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>numberOfEASParameters</name></member>
      <member refid="a01292_1adfe962d09df6de05e8a8a3e875ba046c" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>setEASType</name></member>
      <member refid="a01292_1a953bd75b1ff8c1dec35e12bb7f44a27d" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>Traits</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
