<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01174" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::VectorFlatAssembler</compoundname>
    <basecompoundref refid="a01170" prot="public" virt="non-virtual">Ikarus::ScalarAssembler&lt; FEC, DV &gt;</basecompoundref>
    <derivedcompoundref refid="a01182" prot="public" virt="non-virtual">Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</derivedcompoundref>
    <derivedcompoundref refid="a01178" prot="public" virt="non-virtual">Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;</derivedcompoundref>
    <includes refid="a00185" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEC</type>
      </param>
      <param>
        <type>typename DV</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="a01174_1a7ba07493e617f7a08e029184fa8c04b9" prot="private" static="no">
        <type>std::remove_cvref_t&lt; FEC &gt;</type>
        <definition>using Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEC&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="199" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01174_1ad3622bbb5254f7a9aae231b1b3937663" prot="private" static="no">
        <type><ref refid="a01170" kindref="compound">ScalarAssembler</ref>&lt; FEC, DV &gt;</type>
        <definition>using Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::Base =  ScalarAssembler&lt;FEC, DV&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="200" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01174_1a00ecaa345dee35a640892129f327e195" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vecRaw_</definition>
        <argsstring></argsstring>
        <name>vecRaw_</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vecRaw_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Raw vector without changes for dirichlet degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="256" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01174_1a30da8f963041adc5970f8fcf8a63b922" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vec_</definition>
        <argsstring></argsstring>
        <name>vec_</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vec_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Vector quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="257" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01174_1ad0e725a9f8e4401726f55c80d1cf7dcb" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::vecRed_</definition>
        <argsstring></argsstring>
        <name>vecRed_</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::vecRed_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Reduced vector quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="258" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01174_1ae1d7d3cba6d1c1ab4373fff67e1a300c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::VectorFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues)</argsstring>
        <name>VectorFlatAssembler</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::VectorFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="a01166_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="a01166_1abf6599ec65ab1574a3282a553584f9e9" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="a01174" kindref="compound">VectorFlatAssembler</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirichletValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="216" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="216" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="a01174_1a15da22b282305962bc6498a1451694de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="225" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="a01174_1a027ac8d2135f675df889fdf80a678081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="236" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="a01174_1a51fc1c4a8302dd955bd27dfa6e81bc6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. This vector has a reduced size by the number of fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated reduced vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="245" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="a01170_1a0bf594865140bd900a6f31807dfc6f7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEC, DV &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="164" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="68" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="74" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; B, FEC &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="83" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1aa8da4086d468797668b6d551129e96dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="89" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="97" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="105" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="a01166_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="113" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="113" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01174_1ad5c6b176f4fc827733c3a6baca84e81f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::VectorFlatAssembler&lt; B, FEC &gt;::assembleRawVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::VectorXd &amp;assemblyVec)</argsstring>
        <name>assembleRawVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::assembleRawVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>assemblyVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="250" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="32" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="a01174_1aeafe7c1d377cceacd6945c7024b58f3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; B, FEC &gt;::getRawVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="251" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="a01174_1a347f3b5279dd6b0c1fa2f9a6e1afb711" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; B, FEC &gt;::getVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="252" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="a01174_1a528b3075c39f262893f06a883b81ce56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; B, FEC &gt;::getReducedVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVectorImpl</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01166_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="254" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="65" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01174_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" static="no">
        <type>typename DV::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::Basis =  typename DV::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="203" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01174_1abf6599ec65ab1574a3282a553584f9e9" prot="public" static="no">
        <type>DV</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::DirichletValuesType =  DV</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="204" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01174_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" static="no">
        <type>FEC</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainer =  FEC</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="205" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01174_1a69ef7a0291ed086199b2f5b4b1173bfc" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="206" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01174_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="207" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01166_1acee7beef45351811911847086414709e" prot="public" static="no">
        <type>typename <ref refid="a01458_1a8d38f4dcf756dd8cd92cb32df9f4b841" kindref="member">Basis::GridView</ref></type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="39" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01166_1ad65c9d93766e445ec688411634e9bce6" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="a01166_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;, const <ref refid="a01166_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref>, <ref refid="a01166_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="41" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01174" kindref="compound">VectorFlatAssembler</ref> assembles vector quantities using a flat basis Indexing strategy. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEC</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DV</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01182"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01166"/>
      </node>
      <node id="2">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01170"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01178"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01174"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01166"/>
      </node>
      <node id="2">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01170"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01174"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="197" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="198" bodyend="259"/>
    <listofallmembers>
      <member refid="a01174_1ad5c6b176f4fc827733c3a6baca84e81f" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>assembleRawVectorImpl</name></member>
      <member refid="a01174_1ad3622bbb5254f7a9aae231b1b3937663" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>Base</name></member>
      <member refid="a01174_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>Basis</name></member>
      <member refid="a01166_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="a01166_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="a01174_1abf6599ec65ab1574a3282a553584f9e9" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="a01166_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="a01174_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="a01174_1a7ba07493e617f7a08e029184fa8c04b9" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="a01166_1ad65c9d93766e445ec688411634e9bce6" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="a01174_1a69ef7a0291ed086199b2f5b4b1173bfc" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="a01166_1aa8da4086d468797668b6d551129e96dd" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="a01166_1a09b56d7e0fd2161b781450e89a8a32d6" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="a01174_1a15da22b282305962bc6498a1451694de" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="a01174_1aeafe7c1d377cceacd6945c7024b58f3c" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getRawVectorImpl</name></member>
      <member refid="a01174_1a51fc1c4a8302dd955bd27dfa6e81bc6f" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="a01174_1a528b3075c39f262893f06a883b81ce56" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getReducedVectorImpl</name></member>
      <member refid="a01170_1a0bf594865140bd900a6f31807dfc6f7e" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getScalar</name></member>
      <member refid="a01174_1a027ac8d2135f675df889fdf80a678081" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getVector</name></member>
      <member refid="a01174_1a347f3b5279dd6b0c1fa2f9a6e1afb711" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>getVectorImpl</name></member>
      <member refid="a01174_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="a01166_1acee7beef45351811911847086414709e" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>GridView</name></member>
      <member refid="a01166_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="a01166_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="a01170_1aea70457453f4efbf67bf9541c43afff2" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="a01166_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>size</name></member>
      <member refid="a01174_1a30da8f963041adc5970f8fcf8a63b922" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>vec_</name></member>
      <member refid="a01174_1a00ecaa345dee35a640892129f327e195" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>vecRaw_</name></member>
      <member refid="a01174_1ad0e725a9f8e4401726f55c80d1cf7dcb" prot="private" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>vecRed_</name></member>
      <member refid="a01174_1ae1d7d3cba6d1c1ab4373fff67e1a300c" prot="public" virt="non-virtual"><scope>Ikarus::VectorFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
