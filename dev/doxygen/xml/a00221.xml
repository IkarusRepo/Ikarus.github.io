<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00221" kind="file" language="C++">
    <compoundname>controlvtkwriter.hh</compoundname>
    <includes refid="a00224" local="yes">observer.hh</includes>
    <includes refid="a00212" local="yes">observermessages.hh</includes>
    <includes local="no">string</includes>
    <includes local="no">dune/functions/gridfunctions/discreteglobalbasisfunction.hh</includes>
    <includes local="no">dune/grid/io/file/vtk/subsamplingvtkwriter.hh</includes>
    <incdepgraph>
      <node id="6">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00008"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>controlvtkwriter.hh</label>
        <link refid="a00221"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>observer.hh</label>
        <link refid="a00224"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>observermessages.hh</label>
        <link refid="a00212"/>
      </node>
      <node id="5">
        <label>Eigen/Core</label>
      </node>
      <node id="7">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="10">
        <label>dune/functions/gridfunctions/discreteglobalbasisfunction.hh</label>
      </node>
      <node id="11">
        <label>dune/grid/io/file/vtk/subsamplingvtkwriter.hh</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01552" prot="public">Ikarus::ControlSubsamplingVertexVTKWriter</innerclass>
    <innernamespace refid="a00316">Ikarus</innernamespace>
    <briefdescription>
<para>Observer implementation for writing vtk files when notified. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00224" kindref="compound">observer.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00212" kindref="compound">observermessages.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/functions/gridfunctions/discreteglobalbasisfunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/grid/io/file/vtk/subsamplingvtkwriter.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wswitch-enum&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00316" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis&gt;</highlight></codeline>
<codeline lineno="31" refid="a01552" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01552" kindref="compound">ControlSubsamplingVertexVTKWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01564" kindref="compound">IObserver</ref>&lt;ControlMessages&gt;<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components<sp/>=<sp/>Basis::LocalView::Tree::degree()<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>Basis::LocalView::Tree::degree();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="a01552_1ac1580434b973badf5715358d5365a2b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01552_1ac1580434b973badf5715358d5365a2b6" kindref="member">ControlSubsamplingVertexVTKWriter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01456" kindref="compound">Basis</ref>&amp;<sp/>p_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>sol,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refinementLevels<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>basis{&amp;p_basis},<sp/>vtkWriter(p_basis.gridView(),<sp/><ref refid="a00321" kindref="compound">Dune</ref>::refinementLevels(refinementLevels)),<sp/>solution{&amp;sol}<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="a01552_1a351251161ca8fbb31aaea0cffaac3e90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01552_1a351251161ca8fbb31aaea0cffaac3e90" kindref="member">setFieldInfo</ref>(std::string&amp;&amp;<sp/>name,<sp/>Dune::VTK::FieldInfo::Type<sp/>type,<sp/>std::size_t<sp/>size,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::VTK::Precision<sp/>prec<sp/>=<sp/>Dune::VTK::Precision::float32)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fieldInfo<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::VTK::FieldInfo(std::move(name),<sp/>type,<sp/>size,<sp/>prec);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isFieldInfoSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="a01552_1ab19f208c66b4af13d7248800d4fd1179" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01552_1ab19f208c66b4af13d7248800d4fd1179" kindref="member">setFileNamePrefix</ref>(std::string&amp;&amp;<sp/>p_name)<sp/>{<sp/>prefixString<sp/>=<sp/>std::move(p_name);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="a01552_1aa0c6914ffa6bcdbf95d0e5a815ca44ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01552_1aa0c6914ffa6bcdbf95d0e5a815ca44ef" kindref="member">updateImpl</ref>(<ref refid="a00310_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref><sp/>message)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(isFieldInfoSet<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>need<sp/>to<sp/>call<sp/>setFieldInfo<sp/>first!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(message)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="a00310_1gga35fa62fd2d4186a9750af3d0692f2893a0d30d757bf062e88728ebe7f8e2b2577" kindref="member">ControlMessages::SOLUTION_CHANGED</ref>:<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/>=<sp/>Dune::Functions::makeDiscreteGlobalBasisFunction&lt;Dune::FieldVector&lt;double,<sp/>components&gt;&gt;(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*basis,<sp/>*solution);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkWriter.addVertexData(disp,<sp/>fieldInfo);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkWriter.write(prefixString<sp/>+<sp/>std::to_string(step++));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>default:<sp/>do<sp/>nothing<sp/>when<sp/>notified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01456" kindref="compound">Basis</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>basis;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::SubsamplingVTKWriter&lt;typename<sp/>Basis::GridView&gt;<sp/>vtkWriter;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>solution;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step{0};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::VTK::FieldInfo<sp/>fieldInfo{</highlight><highlight class="stringliteral">&quot;Default&quot;</highlight><highlight class="normal">,<sp/>Dune::VTK::FieldInfo::Type::scalar,<sp/>1};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>prefixString{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFieldInfoSet{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controlvtkwriter.hh"/>
  </compounddef>
</doxygen>
