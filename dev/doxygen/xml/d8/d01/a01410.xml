<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d8/d01/a01410" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::NewtonRaphson</compoundname>
    <basecompoundref refid="d2/dc1/a01562" prot="public" virt="non-virtual">Ikarus::IObservable&lt; NonLinearSolverMessages &gt;</basecompoundref>
    <includes refid="d6/de1/a00233" local="no">ikarus/solver/nonlinearsolver/newtonraphson.hh</includes>
    <templateparamlist>
      <param>
        <type>typename NonLinearOperatorImpl</type>
      </param>
      <param>
        <type>typename <ref refid="d1/d67/a00310_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref></type>
        <defval><ref refid="df/d2f/a01474" kindref="compound">utils::SolverDefault</ref></defval>
      </param>
      <param>
        <type>typename UpdateFunctionTypeImpl</type>
        <defval><ref refid="d8/d7b/a01478" kindref="compound">utils::UpdateDefault</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d8/d01/a01410_1a007d87454967ec574d6058c48d9927d4" prot="public" static="no">
        <type>typename NonLinearOperatorImpl::template ParameterValue&lt; 0 &gt;</type>
        <definition>using Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::ValueType =  typename NonLinearOperatorImpl::template ParameterValue&lt;0&gt;</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>Ikarus::NewtonRaphson::ValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="49" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d01/a01410_1ad2379dc80d46888aa9280a132b4de5b9" prot="public" static="no">
        <type>UpdateFunctionTypeImpl</type>
        <definition>using Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::UpdateFunctionType =  UpdateFunctionTypeImpl</definition>
        <argsstring></argsstring>
        <name>UpdateFunctionType</name>
        <qualifiedname>Ikarus::NewtonRaphson::UpdateFunctionType</qualifiedname>
        <briefdescription>
<para>Type representing the update function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="51" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d01/a01410_1a495f35d7f20899be453381082b3b6c10" prot="public" static="no">
        <type>NonLinearOperatorImpl</type>
        <definition>using Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::NonLinearOperator =  NonLinearOperatorImpl</definition>
        <argsstring></argsstring>
        <name>NonLinearOperator</name>
        <qualifiedname>Ikarus::NewtonRaphson::NonLinearOperator</qualifiedname>
        <briefdescription>
<para>Type of the non-linear operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="52" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d8/d01/a01410_1a9aa900c629f705627481374206a52be1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::isLinearSolver</definition>
        <argsstring></argsstring>
        <name>isLinearSolver</name>
        <qualifiedname>Ikarus::NewtonRaphson::isLinearSolver</qualifiedname>
        <initializer>= <ref refid="d2/dcc/a01623" kindref="compound">Ikarus::Concepts::LinearSolverCheck</ref>&lt;<ref refid="d1/d67/a00310_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref>, typename NonLinearOperatorImpl::DerivativeType,
                                              typename NonLinearOperatorImpl::ValueType&gt;</initializer>
        <briefdescription>
<para>&lt; Compile-time boolean indicating if the linear solver satisfies the non-linear solver concept </para>
        </briefdescription>
        <detaileddescription>
<para>Type representing the parameter vector of the nonlinear operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="44" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d01/a01410_1a1c478c3da66b1865edbda361e4f2cf7f" prot="private" static="no" mutable="no">
        <type>NonLinearOperatorImpl</type>
        <definition>NonLinearOperatorImpl Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::nonLinearOperator_</definition>
        <argsstring></argsstring>
        <name>nonLinearOperator_</name>
        <qualifiedname>Ikarus::NewtonRaphson::nonLinearOperator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="137" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d01/a01410_1a3a1fd56b0de2be6775214ce16cb402e6" prot="private" static="no" mutable="no">
        <type>NonLinearOperatorImpl::ValueType</type>
        <definition>NonLinearOperatorImpl::ValueType Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::correction</definition>
        <argsstring></argsstring>
        <name>correction</name>
        <qualifiedname>Ikarus::NewtonRaphson::correction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="138" column="47" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d01/a01410_1a3345d9edc51a80d38705f9e5113e889e" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d67/a00310_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref></type>
        <definition>LinearSolver Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::linearSolver</definition>
        <argsstring></argsstring>
        <name>linearSolver</name>
        <qualifiedname>Ikarus::NewtonRaphson::linearSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="139" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d01/a01410_1a0ca6f5062344867299c26b24bd8de57b" prot="private" static="no" mutable="no">
        <type><ref refid="d8/d01/a01410_1ad2379dc80d46888aa9280a132b4de5b9" kindref="member">UpdateFunctionType</ref></type>
        <definition>UpdateFunctionType Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::updateFunction</definition>
        <argsstring></argsstring>
        <name>updateFunction</name>
        <qualifiedname>Ikarus::NewtonRaphson::updateFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="140" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d01/a01410_1a9b95e11995815ba06f90fda9630e4501" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d25/a01406" kindref="compound">NewtonRaphsonSettings</ref></type>
        <definition>NewtonRaphsonSettings Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::settings</definition>
        <argsstring></argsstring>
        <name>settings</name>
        <qualifiedname>Ikarus::NewtonRaphson::settings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="141" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d01/a01410_1ae51b0f687ceaf2051b4ddebb7ea39411" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::NewtonRaphson</definition>
        <argsstring>(const NonLinearOperatorImpl &amp;p_nonLinearOperator, LinearSolver &amp;&amp;p_linearSolver={}, UpdateFunctionTypeImpl p_updateFunction={})</argsstring>
        <name>NewtonRaphson</name>
        <qualifiedname>Ikarus::NewtonRaphson::NewtonRaphson</qualifiedname>
        <param>
          <type>const NonLinearOperatorImpl &amp;</type>
          <declname>p_nonLinearOperator</declname>
        </param>
        <param>
          <type><ref refid="d1/d67/a00310_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref> &amp;&amp;</type>
          <declname>p_linearSolver</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>UpdateFunctionTypeImpl</type>
          <declname>p_updateFunction</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="d8/d01/a01410" kindref="compound">NewtonRaphson</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_nonLinearOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>Nonlinear operator to solve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_linearSolver</parametername>
</parameternamelist>
<parameterdescription>
<para>Linear solver used internally (default is SolverDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_updateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Update function (default is UpdateDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="60" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d8/d01/a01410_1a146aaddd7122c3f73bc6b87890d18f63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::setup</definition>
        <argsstring>(const NewtonRaphsonSettings &amp;p_settings)</argsstring>
        <name>setup</name>
        <qualifiedname>Ikarus::NewtonRaphson::setup</qualifiedname>
        <param>
          <type>const <ref refid="dc/d25/a01406" kindref="compound">NewtonRaphsonSettings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
<para>Set up the solver with the given settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Newton-Raphson settings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="73" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="d8/d01/a01410_1a59498e1839e058c89a4d124ba38a74e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SolutionType</type>
            <defval>NoPredictor</defval>
          </param>
        </templateparamlist>
        <type><ref refid="d1/df4/a01422" kindref="compound">Ikarus::NonLinearSolverInformation</ref></type>
        <definition>Ikarus::NonLinearSolverInformation Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::solve</definition>
        <argsstring>(const SolutionType &amp;dx_predictor=NoPredictor{})</argsstring>
        <name>solve</name>
        <qualifiedname>Ikarus::NewtonRaphson::solve</qualifiedname>
        <param>
          <type>const SolutionType &amp;</type>
          <declname>dx_predictor</declname>
          <defval>NoPredictor{}</defval>
        </param>
    <requiresclause>std::is_same_v&lt;SolutionType, NoPredictor&gt; || std::is_convertible_v&lt; SolutionType, std::remove_cvref_t&lt;typename NonLinearOperatorImpl::ValueType&gt;&gt;    </requiresclause>
        <briefdescription>
<para>Solve the nonlinear system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dx_predictor</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictor for the solution increment (default is NoPredictor). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Information about the solution process. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="89" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="89" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="d8/d01/a01410_1a17be0037f6b48da2eef9f256b0aed795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;::nonLinearOperator</definition>
        <argsstring>()</argsstring>
        <name>nonLinearOperator</name>
        <qualifiedname>Ikarus::NewtonRaphson::nonLinearOperator</qualifiedname>
        <briefdescription>
<para>Access the nonlinear operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the nonlinear operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="134" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1ae182a206a72de6bc4585152d32332349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::subscribe</definition>
        <argsstring>(NonLinearSolverMessages message, std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>subscribe</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::subscribe</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/dcf/a01558" kindref="compound">IObserver</ref>&lt; <ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Subscribe an observer to receive notifications for a specific message type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to subscribe to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be subscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="137" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="221" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a13bd8d73b485186680f640786e2682e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::subscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::subscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/dcf/a01558" kindref="compound">IObserver</ref>&lt; <ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Subscribe an observer to receive notifications for all message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be subscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="142" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a026462a1a050728e37bc24e33d2edd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::subscribeAll</definition>
        <argsstring>(std::initializer_list&lt; std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; &gt; observers)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::subscribeAll</qualifiedname>
        <param>
          <type>std::initializer_list&lt; std::shared_ptr&lt; <ref refid="da/dcf/a01558" kindref="compound">IObserver</ref>&lt; <ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt; &gt;</type>
          <declname>observers</declname>
        </param>
        <briefdescription>
<para>Subscribe multiple observers to receive notifications for all message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observers</parametername>
</parameternamelist>
<parameterdescription>
<para>List of observers to be subscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="147" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a49622286d2b15f0b8a2b25275e6bc771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::unSubscribe</definition>
        <argsstring>(NonLinearSolverMessages message, std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>unSubscribe</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::unSubscribe</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/dcf/a01558" kindref="compound">IObserver</ref>&lt; <ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Unsubscribe an observer from receiving notifications for a specific message type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to unsubscribe from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be unsubscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="153" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a5c20f7eab2233d085071a4fd3b44cbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::unSubscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>unSubscribeAll</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::unSubscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/dcf/a01558" kindref="compound">IObserver</ref>&lt; <ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Unsubscribe an observer from receiving notifications for all message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be unsubscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="158" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a4bce3750aa7d52aff9baf122a54e16b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="163" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="254" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1ac035ba934c33e090c4a45128ac13f190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, ScalarType val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with a floating-point value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the floating-point value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating-point value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="172" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="179" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a2f93322aa7327069dd4469983933bd16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, const std::string &amp;val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="186" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="276" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1ae0c6cec757e540f22b65fce1f782e380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, double val2)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an integer and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="194" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="283" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1a72e3156874ce81a1c7548b9f74db522c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an integer value and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="202" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="290" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc1/a01562_1ac72b261cd2af7f59e98f1504814bc785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, Eigen::VectorX&lt; ScalarType &gt; vec)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>Eigen::VectorX&lt; ScalarType &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an Eigen::VectorX. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements in the Eigen::VectorX. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorX to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="211" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="298" bodyend="302"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the Newton-Raphson method for solving nonlinear equations. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NonLinearOperatorImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the nonlinear operator to solve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LinearSolver</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the linear solver used internally (default is SolverDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UpdateFunctionTypeImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the update function (default is UpdateDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="d2/dc1/a01562"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObservable&lt; MessageType &gt;</label>
        <link refid="d2/dc1/a01562"/>
      </node>
      <node id="1">
        <label>Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;</label>
        <link refid="d8/d01/a01410"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="d2/dc1/a01562"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObservable&lt; MessageType &gt;</label>
        <link refid="d2/dc1/a01562"/>
      </node>
      <node id="1">
        <label>Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionTypeImpl &gt;</label>
        <link refid="d8/d01/a01410"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" line="41" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh" bodystart="41" bodyend="142"/>
    <listofallmembers>
      <member refid="d8/d01/a01410_1a3a1fd56b0de2be6775214ce16cb402e6" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>correction</name></member>
      <member refid="d2/dc1/a01562_1ac8058d5b1ebb462a10712ba598154e23" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>IObservable</name></member>
      <member refid="d8/d01/a01410_1a9aa900c629f705627481374206a52be1" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>isLinearSolver</name></member>
      <member refid="d8/d01/a01410_1a3345d9edc51a80d38705f9e5113e889e" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>linearSolver</name></member>
      <member refid="d8/d01/a01410_1ae51b0f687ceaf2051b4ddebb7ea39411" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>NewtonRaphson</name></member>
      <member refid="d8/d01/a01410_1a495f35d7f20899be453381082b3b6c10" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>NonLinearOperator</name></member>
      <member refid="d8/d01/a01410_1a17be0037f6b48da2eef9f256b0aed795" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>nonLinearOperator</name></member>
      <member refid="d8/d01/a01410_1a1c478c3da66b1865edbda361e4f2cf7f" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>nonLinearOperator_</name></member>
      <member refid="d2/dc1/a01562_1a4bce3750aa7d52aff9baf122a54e16b5" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d2/dc1/a01562_1ac035ba934c33e090c4a45128ac13f190" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d2/dc1/a01562_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d2/dc1/a01562_1a2f93322aa7327069dd4469983933bd16" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d2/dc1/a01562_1ae0c6cec757e540f22b65fce1f782e380" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d2/dc1/a01562_1a72e3156874ce81a1c7548b9f74db522c" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d2/dc1/a01562_1ac72b261cd2af7f59e98f1504814bc785" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>notify</name></member>
      <member refid="d8/d01/a01410_1a9b95e11995815ba06f90fda9630e4501" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>settings</name></member>
      <member refid="d8/d01/a01410_1a146aaddd7122c3f73bc6b87890d18f63" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>setup</name></member>
      <member refid="d8/d01/a01410_1a59498e1839e058c89a4d124ba38a74e5" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>solve</name></member>
      <member refid="d2/dc1/a01562_1ae182a206a72de6bc4585152d32332349" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>subscribe</name></member>
      <member refid="d2/dc1/a01562_1a13bd8d73b485186680f640786e2682e5" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>subscribeAll</name></member>
      <member refid="d2/dc1/a01562_1a026462a1a050728e37bc24e33d2edd9c" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>subscribeAll</name></member>
      <member refid="d2/dc1/a01562_1a49622286d2b15f0b8a2b25275e6bc771" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>unSubscribe</name></member>
      <member refid="d2/dc1/a01562_1a5c20f7eab2233d085071a4fd3b44cbda" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>unSubscribeAll</name></member>
      <member refid="d8/d01/a01410_1a0ca6f5062344867299c26b24bd8de57b" prot="private" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>updateFunction</name></member>
      <member refid="d8/d01/a01410_1ad2379dc80d46888aa9280a132b4de5b9" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>UpdateFunctionType</name></member>
      <member refid="d8/d01/a01410_1a007d87454967ec574d6058c48d9927d4" prot="public" virt="non-virtual"><scope>Ikarus::NewtonRaphson</scope><name>ValueType</name></member>
      <member refid="d2/dc1/a01562_1ad1fe15b31cccec8e44c695af550938ed" prot="public" virt="virtual"><scope>Ikarus::NewtonRaphson</scope><name>~IObservable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
