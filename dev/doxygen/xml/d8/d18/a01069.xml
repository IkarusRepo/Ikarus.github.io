<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d8/d18/a01069" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::SparseFlatAssembler</compoundname>
    <basecompoundref refid="d0/dc9/a01065" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</basecompoundref>
    <includes refid="de/de1/a00065" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEContainer_</type>
      </param>
      <param>
        <type>typename DirichletValuesType_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d8/d18/a01069_1a1be71ac498aa851e515bfd6108604e80" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEContainer_ &gt;</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEContainer_&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="166" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d18/a01069_1acc6bac955dd0f718adc2fe24566fa5b2" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="168" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d18/a01069_1abda70dc742fe2fd3a6d0409d751b0c32" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="169" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d18/a01069_1a099e4e6bfcec5e68c14b2e166faa6219" prot="public" static="no">
        <type>typename DirichletValuesType_::Basis</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::Basis =  typename DirichletValuesType_::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="170" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d18/a01069_1a6407f3b842a80c35e6f432b3a0caa259" prot="public" static="no">
        <type>FEContainer_</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainer =  FEContainer_</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="171" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d18/a01069_1ab15dbe50734d638a80868fe4e764abe8" prot="public" static="no">
        <type>DirichletValuesType_</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::DirichletValuesType =  DirichletValuesType_</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="172" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d18/a01069_1ad099d9aefb36d816f0eaec9c76caf025" prot="public" static="no">
        <type>typename <ref refid="dc/d2a/a01333_1a066e94e24a8000ee0f47fff24c5c09b4" kindref="member">Basis::GridView</ref></type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="177" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/db8/a01057_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;, const <ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref>, <ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="34" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d18/a01069_1a6f910fa255cf94701a51f3174fc4b29b" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::spMatRaw</definition>
        <argsstring></argsstring>
        <name>spMatRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMatRaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="223" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1a255d3fc477f773545c41ac91e2ec086e" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::spMat</definition>
        <argsstring></argsstring>
        <name>spMat</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="224" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1a0bd42fe28658bb988458cac0f82e1d08" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::spMatReduced</definition>
        <argsstring></argsstring>
        <name>spMatReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMatReduced</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="225" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1a266a915f08990299fb8eb2ad7bd0ba6b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::Index &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::Index&gt; &gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::elementLinearIndices</definition>
        <argsstring></argsstring>
        <name>elementLinearIndices</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::elementLinearIndices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="226" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1a8bedb29d941c322b0ee4e7736804e460" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::Index &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::Index&gt; &gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::elementLinearReducedIndices</definition>
        <argsstring></argsstring>
        <name>elementLinearReducedIndices</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::elementLinearReducedIndices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="227" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1ad6b97ba19e72a86467d14c7a6920d30e" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::sparsePreProcessorRaw</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessorRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessorRaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="228" column="20" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1a6556f0e1d3708250341a39721e7e9bdc" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::sparsePreProcessor</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessor</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="228" column="42" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d18/a01069_1a6258bef2fea02efb345abe9ee75ff398" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::sparsePreProcessorReduced</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessorReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessorReduced</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="228" column="61" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d18/a01069_1a3015c0013b0a8773370353b1602b17b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::SparseFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues_)</argsstring>
        <name>SparseFlatAssembler</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::SparseFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="d2/db8/a01057_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="d2/db8/a01057_1ab0275407303cf74b78fe44f0ad405e06" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="174" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="174" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1aa926cf1bab496cb58875a4891f6d0c59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getRawMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity which is requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="180" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1aa1a2c6dabeddd55027018b59d150c8a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the matrix quantity which is requested by feRequirements and returns a reference A zero is written on fixed dofs rows and columns and a one is written on the diagonal </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="186" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a733314b660fe45a875c7e1655dc1b6da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getReducedMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the matrix quantity which is requested by feRequirements and returns a reference The size of the matrix has the size of the free degrees of freedom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="192" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="d0/dc9/a01065_1a1904b244fe6fa606c489b7969fbf12c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity which is requested by feRequirements and returns a reference *<zwj/>/. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="133" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="d0/dc9/a01065_1a10b6154f85148a2d12a1ba5fc5ecae86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the vectorial quantity which is requested by feRequirements and returns a reference A zero is written on fixed dofs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="137" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="d0/dc9/a01065_1a9c9b52a7afc7dac62127ab3b33b4fa13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd &amp;</type>
        <definition>Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the vectorial quantity which is requested by feRequirements and returns a reference This vector has a reduced size by the number of fixed degrees of freedom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="141" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="de/d9e/a01061_1aa902bc1afe643ae6f9c9b38e6a7b5897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double &amp; Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar quantity which is requested by feRequirements and returns a reference </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="100" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the free degrees of freeedom, which are not fixed by a dirichlet boundary condition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="48" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1ac105af5d51473a274f597d509308c55f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of nodes, i.e. the number of degrees of freedom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="51" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a03f97ed023cb3e704edfe556408e6167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a the fullsized vector of size #Dof and inserts the values of reduced Vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="56" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1aa92c131a0915eb5864613bdbab5c4990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the container of finite elements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="59" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of constraints below a given degrees of freedom index </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="62" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a317a691c0aca9e9d5953845762c7f626" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the boolean if a given degree of freedom is fixed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="65" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d2/db8/a01057_1a6179ef97228c75448f8d109f031bc667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Coarse estimate of node connectivity, i.e. this relates the bandwidth of an sparse matrix. This estimate is designed that it overestimates the real connectivity since it should only be used for allocating vectors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="70" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d18/a01069_1a85b0ecb7f5e70d9466dcc4e2161e3e3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::assembleRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>assembleRawMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::assembleRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="197" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a35f506368e4a604fd25f29a748787231" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="198" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1aa98deb074c38d666a70ca0ecb9815253" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="199" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a46949c3cabc4a91cbcbc1962d3d6bccd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getReducedMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/db8/a01057_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="200" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a3abe2402e7ec64fcf570e1aadb97856a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::createOccupationPattern</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createOccupationPattern</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createOccupationPattern</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the non-zero entries in the full sparse matrix and passed them to the underlying eigen sparse matrix <ulink url="https://stackoverflow.com/questions/59192659/efficiently-use-eigen-for-repeated-sparse-matrix-assembly-in-nonlinear-finite-el">https://stackoverflow.com/questions/59192659/efficiently-use-eigen-for-repeated-sparse-matrix-assembly-in-nonlinear-finite-el</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="205" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a6162bb4ae86869efb4f275f5e7f66200" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::createReducedOccupationPattern</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createReducedOccupationPattern</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createReducedOccupationPattern</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the non-zero entries in the sparse matrix and passed them to the underlying eigen sparse matrix The size of the matrix has the size of the free degrees of freedom <ulink url="https://stackoverflow.com/questions/59192659/efficiently-use-eigen-for-repeated-sparse-matrix-assembly-in-nonlinear-finite-el">https://stackoverflow.com/questions/59192659/efficiently-use-eigen-for-repeated-sparse-matrix-assembly-in-nonlinear-finite-el</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1ad94dac929d562e1ddae1519840c99a2e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::createLinearDOFsPerElement</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createLinearDOFsPerElement</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createLinearDOFsPerElement</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function save the dof indices of each element in the vector elementLinearIndices </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="214" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1afb73c60a3af7006d777ef65dee879857" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::createLinearDOFsPerElementReduced</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createLinearDOFsPerElementReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createLinearDOFsPerElementReduced</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function save the dof indices of each element in the vector elementLinearIndices but excludes fixed dofs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a6ddd5cdb351d491e599f7542e4a8fb71" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::preProcessSparseMatrix</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>preProcessSparseMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::preProcessSparseMatrix</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="219" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/a01069_1a7e6fd6074099e9352a1116d6b14746ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::preProcessSparseMatrixReduced</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>preProcessSparseMatrixReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::preProcessSparseMatrixReduced</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="221" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="d8/d18/a01069" kindref="compound">SparseFlatAssembler</ref> assembles matrix quantities using a flat basis Indexing strategy The matrix is stored in a sparse matrix format. This format is exploited during the assembly process </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d2/db8/a01057"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/d9e/a01061"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d8/d18/a01069"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d0/dc9/a01065"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d2/db8/a01057"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/d9e/a01061"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d8/d18/a01069"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d0/dc9/a01065"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="164" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="164" bodyend="229"/>
    <listofallmembers>
      <member refid="d8/d18/a01069_1a85b0ecb7f5e70d9466dcc4e2161e3e3e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>assembleRawMatrixImpl</name></member>
      <member refid="d8/d18/a01069_1a099e4e6bfcec5e68c14b2e166faa6219" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>Basis</name></member>
      <member refid="d2/db8/a01057_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="d2/db8/a01057_1a03f97ed023cb3e704edfe556408e6167" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="d8/d18/a01069_1ad94dac929d562e1ddae1519840c99a2e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createLinearDOFsPerElement</name></member>
      <member refid="d8/d18/a01069_1afb73c60a3af7006d777ef65dee879857" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createLinearDOFsPerElementReduced</name></member>
      <member refid="d8/d18/a01069_1a3abe2402e7ec64fcf570e1aadb97856a" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createOccupationPattern</name></member>
      <member refid="d8/d18/a01069_1a6162bb4ae86869efb4f275f5e7f66200" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createReducedOccupationPattern</name></member>
      <member refid="d8/d18/a01069_1ab15dbe50734d638a80868fe4e764abe8" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="d8/d18/a01069_1a266a915f08990299fb8eb2ad7bd0ba6b" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>elementLinearIndices</name></member>
      <member refid="d8/d18/a01069_1a8bedb29d941c322b0ee4e7736804e460" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>elementLinearReducedIndices</name></member>
      <member refid="d2/db8/a01057_1a6179ef97228c75448f8d109f031bc667" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="d8/d18/a01069_1a6407f3b842a80c35e6f432b3a0caa259" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="d8/d18/a01069_1a1be71ac498aa851e515bfd6108604e80" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="d2/db8/a01057_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="d8/d18/a01069_1acc6bac955dd0f718adc2fe24566fa5b2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="d2/db8/a01057_1aa92c131a0915eb5864613bdbab5c4990" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="d2/db8/a01057_1aaa76896f0fdb0e6a116bb7790dbaceb1" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="d8/d18/a01069_1aa1a2c6dabeddd55027018b59d150c8a0" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getMatrix</name></member>
      <member refid="d8/d18/a01069_1aa98deb074c38d666a70ca0ecb9815253" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getMatrixImpl</name></member>
      <member refid="d8/d18/a01069_1aa926cf1bab496cb58875a4891f6d0c59" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawMatrix</name></member>
      <member refid="d8/d18/a01069_1a35f506368e4a604fd25f29a748787231" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawMatrixImpl</name></member>
      <member refid="d0/dc9/a01065_1a1904b244fe6fa606c489b7969fbf12c8" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="d8/d18/a01069_1a733314b660fe45a875c7e1655dc1b6da" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedMatrix</name></member>
      <member refid="d8/d18/a01069_1a46949c3cabc4a91cbcbc1962d3d6bccd" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedMatrixImpl</name></member>
      <member refid="d0/dc9/a01065_1a9c9b52a7afc7dac62127ab3b33b4fa13" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="de/d9e/a01061_1aa902bc1afe643ae6f9c9b38e6a7b5897" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getScalar</name></member>
      <member refid="d0/dc9/a01065_1a10b6154f85148a2d12a1ba5fc5ecae86" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getVector</name></member>
      <member refid="d8/d18/a01069_1abda70dc742fe2fd3a6d0409d751b0c32" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="d8/d18/a01069_1ad099d9aefb36d816f0eaec9c76caf025" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>GridView</name></member>
      <member refid="d2/db8/a01057_1a317a691c0aca9e9d5953845762c7f626" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="d8/d18/a01069_1a6ddd5cdb351d491e599f7542e4a8fb71" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>preProcessSparseMatrix</name></member>
      <member refid="d8/d18/a01069_1a7e6fd6074099e9352a1116d6b14746ee" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>preProcessSparseMatrixReduced</name></member>
      <member refid="d2/db8/a01057_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="de/d9e/a01061_1a7fa7751093b40062b2250205cb1b27b2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="d2/db8/a01057_1ac105af5d51473a274f597d509308c55f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>size</name></member>
      <member refid="d8/d18/a01069_1a3015c0013b0a8773370353b1602b17b9" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>SparseFlatAssembler</name></member>
      <member refid="d8/d18/a01069_1a6556f0e1d3708250341a39721e7e9bdc" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessor</name></member>
      <member refid="d8/d18/a01069_1ad6b97ba19e72a86467d14c7a6920d30e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessorRaw</name></member>
      <member refid="d8/d18/a01069_1a6258bef2fea02efb345abe9ee75ff398" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessorReduced</name></member>
      <member refid="d8/d18/a01069_1a255d3fc477f773545c41ac91e2ec086e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMat</name></member>
      <member refid="d8/d18/a01069_1a6f910fa255cf94701a51f3174fc4b29b" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMatRaw</name></member>
      <member refid="d8/d18/a01069_1a0bd42fe28658bb988458cac0f82e1d08" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMatReduced</name></member>
      <member refid="d0/dc9/a01065_1ab29654e07434ec261e3f2b449eb36a8c" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
