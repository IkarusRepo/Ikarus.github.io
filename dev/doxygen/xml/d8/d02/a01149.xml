<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d8/d02/a01149" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::SparseFlatAssembler</compoundname>
    <basecompoundref refid="d9/d65/a01145" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</basecompoundref>
    <includes refid="d5/de9/a00176" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEContainer_</type>
      </param>
      <param>
        <type>typename DirichletValuesType_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d8/d02/a01149_1a1be71ac498aa851e515bfd6108604e80" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEContainer_ &gt;</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEContainer_&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="273" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1a0da50524ab5114b8ef9745549a9c3b78" prot="public" static="no">
        <type><ref refid="d9/d65/a01145" kindref="compound">VectorFlatAssembler</ref>&lt; FEContainer_, DirichletValuesType_ &gt;</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::Base =  VectorFlatAssembler&lt;FEContainer_, DirichletValuesType_&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="274" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1ad099d9aefb36d816f0eaec9c76caf025" prot="public" static="no">
        <type>typename <ref refid="d1/d3b/a01429_1a066e94e24a8000ee0f47fff24c5c09b4" kindref="member">Basis::GridView</ref></type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="291" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1aec6afbe8af2828aa945ab2b8f2c1aca6" prot="public" static="no">
        <type>typename DirichletValuesType_::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::Basis =  typename DirichletValuesType_::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="276" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1ab0275407303cf74b78fe44f0ad405e06" prot="public" static="no">
        <type>DirichletValuesType_</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::DirichletValuesType =  DirichletValuesType_</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="277" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1a030d83efead739f9abcb338d8f1d06b4" prot="public" static="no">
        <type>FEContainer_</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainer =  FEContainer_</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="278" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1aba7339d4e117f0f310c8ba9cd6da1e5a" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="279" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d02/a01149_1a1b2ccee915a297c90f3865c71f2c3c14" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="280" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d6e/a01137_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="d6/d6e/a01137_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;, const <ref refid="d6/d6e/a01137_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref>, <ref refid="d6/d6e/a01137_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="40" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d02/a01149_1a6f910fa255cf94701a51f3174fc4b29b" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::spMatRaw</definition>
        <argsstring></argsstring>
        <name>spMatRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMatRaw</qualifiedname>
        <briefdescription>
<para>Raw sparse matrix without changes for dirichlet degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="352" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1a255d3fc477f773545c41ac91e2ec086e" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::spMat</definition>
        <argsstring></argsstring>
        <name>spMat</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMat</qualifiedname>
        <briefdescription>
<para>Sparse matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="353" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1a0bd42fe28658bb988458cac0f82e1d08" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::spMatReduced</definition>
        <argsstring></argsstring>
        <name>spMatReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMatReduced</qualifiedname>
        <briefdescription>
<para>Reduced sparse matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="354" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1a266a915f08990299fb8eb2ad7bd0ba6b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::Index &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::Index&gt; &gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::elementLinearIndices</definition>
        <argsstring></argsstring>
        <name>elementLinearIndices</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::elementLinearIndices</qualifiedname>
        <briefdescription>
<para>Vector storing indices of matrix entries in linear storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="356" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1a8bedb29d941c322b0ee4e7736804e460" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::Index &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::Index&gt; &gt; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::elementLinearReducedIndices</definition>
        <argsstring></argsstring>
        <name>elementLinearReducedIndices</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::elementLinearReducedIndices</qualifiedname>
        <briefdescription>
<para>Vector storing indices of matrix entries in linear storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="358" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1ad6b97ba19e72a86467d14c7a6920d30e" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::sparsePreProcessorRaw</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessorRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessorRaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="359" column="20" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1a6556f0e1d3708250341a39721e7e9bdc" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::sparsePreProcessor</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessor</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="359" column="42" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d02/a01149_1a6258bef2fea02efb345abe9ee75ff398" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::sparsePreProcessorReduced</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessorReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessorReduced</qualifiedname>
        <briefdescription>
<para>flags that store if the sparsity pattern construction happened </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="360" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="360" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d02/a01149_1a3015c0013b0a8773370353b1602b17b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::SparseFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues_)</argsstring>
        <name>SparseFlatAssembler</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::SparseFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="d6/d6e/a01137_1a030d83efead739f9abcb338d8f1d06b4" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1ab0275407303cf74b78fe44f0ad405e06" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues_</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="d8/d02/a01149" kindref="compound">SparseFlatAssembler</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirichletValues_</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="288" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="288" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1a6647be8ee2865cd3808f9f871ff02707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>const Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getRawMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the raw sparse matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="299" column="31" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1a918263cc6329db0934491008567898f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>const Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom rows and columns, and a one is written on the diagonal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the modified sparse matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="310" column="31" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="310" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1a630e3aa4d0e4b4aeee7c4d14af54c794" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>const Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getReducedMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. The size of the matrix has the size of the free degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the reduced sparse matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="321" column="31" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="d9/d65/a01145_1a1d7cf1f4e62251a01d2207310f336e75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="220" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="d9/d65/a01145_1a99690d51394f943e44743365d4d3b57e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="231" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="d9/d65/a01145_1a51fec3e98ce787300a069ccd30c75c67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. This vector has a reduced size by the number of fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated reduced vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="240" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="de/df6/a01141_1a152538dd394310fc57729163cace3289" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="160" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="65" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1ac105af5d51473a274f597d509308c55f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="71" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1a796d9b40d32762d5857b49afb30cec2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; Basis, FEContainer &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="80" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1aa92c131a0915eb5864613bdbab5c4990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="86" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="94" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1a317a691c0aca9e9d5953845762c7f626" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="102" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/a01137_1a6179ef97228c75448f8d109f031bc667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="110" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="110" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d02/a01149_1a0b8e1e6e580ba0c1c93ca53a015b9543" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::assembleRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>assembleRawMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::assembleRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="326" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="88" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1afa8b409725dcfb09693d3b04e388b678" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::getRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="327" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1a626196b8bc459648db81a2ca31773ad9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::getMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="328" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1ad2866215dc4ca5f245193c53bde776a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::getReducedMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getReducedMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d6/d6e/a01137_1aba7339d4e117f0f310c8ba9cd6da1e5a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="329" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="128" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1af19ad89cfa29259e95729ba5342dae72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::createOccupationPattern</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createOccupationPattern</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createOccupationPattern</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the non-zero entries in the full sparse matrix and passes them to the underlying <ref refid="d8/d17/a00304" kindref="compound">Eigen</ref> sparse matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="333" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="158" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1a53c7c3b94c95264bfd679097cbf8cd69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::createReducedOccupationPattern</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createReducedOccupationPattern</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createReducedOccupationPattern</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the non-zero entries in the sparse matrix and passes them to the underlying <ref refid="d8/d17/a00304" kindref="compound">Eigen</ref> sparse matrix. The size of the matrix has the size of the free degrees of freedom. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="337" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="175" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1a57a7d7f344f50c065de7871bf82f511e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::createLinearDOFsPerElement</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createLinearDOFsPerElement</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createLinearDOFsPerElement</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves the degree of freedom indices of each element in the vector elementLinearIndices. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="340" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="202" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1aae56c398c4651aff2ad5f344fc96bcb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::createLinearDOFsPerElementReduced</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createLinearDOFsPerElementReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createLinearDOFsPerElementReduced</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves the degree of freedom indices of each element in the vector elementLinearIndices but excludes fixed degrees of freedom. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="344" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="215" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1afe537a2c613a4641e2f8d07a67027d27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::preProcessSparseMatrix</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>preProcessSparseMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::preProcessSparseMatrix</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-processes the raw sparse matrix before assembly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="347" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="d8/d02/a01149_1acaba4aed18d24bd7c18396683d7ff5e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; Basis, FEContainer &gt;::preProcessSparseMatrixReduced</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>preProcessSparseMatrixReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::preProcessSparseMatrixReduced</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-processes the reduced sparse matrix before assembly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="350" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="240" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d8/d02/a01149" kindref="compound">SparseFlatAssembler</ref> assembles matrix quantities using a flat basis Indexing strategy. The matrix is stored in a sparse matrix format. This format is exploited during the assembly process. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEContainer_</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DirichletValuesType_</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d6/d6e/a01137"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/df6/a01141"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d8/d02/a01149"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d9/d65/a01145"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d6/d6e/a01137"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="de/df6/a01141"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::SparseFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d8/d02/a01149"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEContainer_, DirichletValuesType_ &gt;</label>
        <link refid="d9/d65/a01145"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="271" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="271" bodyend="361"/>
    <listofallmembers>
      <member refid="d8/d02/a01149_1a0b8e1e6e580ba0c1c93ca53a015b9543" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>assembleRawMatrixImpl</name></member>
      <member refid="d8/d02/a01149_1a0da50524ab5114b8ef9745549a9c3b78" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>Base</name></member>
      <member refid="d8/d02/a01149_1aec6afbe8af2828aa945ab2b8f2c1aca6" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>Basis</name></member>
      <member refid="d6/d6e/a01137_1a85a20ef2dd30a677994a9c79677cfdf2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="d6/d6e/a01137_1a796d9b40d32762d5857b49afb30cec2a" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="d8/d02/a01149_1a57a7d7f344f50c065de7871bf82f511e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createLinearDOFsPerElement</name></member>
      <member refid="d8/d02/a01149_1aae56c398c4651aff2ad5f344fc96bcb3" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createLinearDOFsPerElementReduced</name></member>
      <member refid="d8/d02/a01149_1af19ad89cfa29259e95729ba5342dae72" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createOccupationPattern</name></member>
      <member refid="d8/d02/a01149_1a53c7c3b94c95264bfd679097cbf8cd69" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createReducedOccupationPattern</name></member>
      <member refid="d8/d02/a01149_1ab0275407303cf74b78fe44f0ad405e06" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="d8/d02/a01149_1a266a915f08990299fb8eb2ad7bd0ba6b" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>elementLinearIndices</name></member>
      <member refid="d8/d02/a01149_1a8bedb29d941c322b0ee4e7736804e460" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>elementLinearReducedIndices</name></member>
      <member refid="d6/d6e/a01137_1a6179ef97228c75448f8d109f031bc667" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="d8/d02/a01149_1a030d83efead739f9abcb338d8f1d06b4" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="d8/d02/a01149_1a1be71ac498aa851e515bfd6108604e80" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="d6/d6e/a01137_1a554c8df2e30ed6ec250e5395f77d8f6f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="d8/d02/a01149_1aba7339d4e117f0f310c8ba9cd6da1e5a" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="d6/d6e/a01137_1aa92c131a0915eb5864613bdbab5c4990" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="d6/d6e/a01137_1aaa76896f0fdb0e6a116bb7790dbaceb1" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="d8/d02/a01149_1a918263cc6329db0934491008567898f3" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getMatrix</name></member>
      <member refid="d8/d02/a01149_1a626196b8bc459648db81a2ca31773ad9" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getMatrixImpl</name></member>
      <member refid="d8/d02/a01149_1a6647be8ee2865cd3808f9f871ff02707" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawMatrix</name></member>
      <member refid="d8/d02/a01149_1afa8b409725dcfb09693d3b04e388b678" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawMatrixImpl</name></member>
      <member refid="d9/d65/a01145_1a1d7cf1f4e62251a01d2207310f336e75" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="d8/d02/a01149_1a630e3aa4d0e4b4aeee7c4d14af54c794" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedMatrix</name></member>
      <member refid="d8/d02/a01149_1ad2866215dc4ca5f245193c53bde776a2" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedMatrixImpl</name></member>
      <member refid="d9/d65/a01145_1a51fec3e98ce787300a069ccd30c75c67" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="de/df6/a01141_1a152538dd394310fc57729163cace3289" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getScalar</name></member>
      <member refid="d9/d65/a01145_1a99690d51394f943e44743365d4d3b57e" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getVector</name></member>
      <member refid="d8/d02/a01149_1a1b2ccee915a297c90f3865c71f2c3c14" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="d8/d02/a01149_1ad099d9aefb36d816f0eaec9c76caf025" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>GridView</name></member>
      <member refid="d6/d6e/a01137_1a317a691c0aca9e9d5953845762c7f626" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="d8/d02/a01149_1afe537a2c613a4641e2f8d07a67027d27" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>preProcessSparseMatrix</name></member>
      <member refid="d8/d02/a01149_1acaba4aed18d24bd7c18396683d7ff5e3" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>preProcessSparseMatrixReduced</name></member>
      <member refid="d6/d6e/a01137_1a8fd0336be5b5e2d0bcbcdb25bacc5f2f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="de/df6/a01141_1a7fa7751093b40062b2250205cb1b27b2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="d6/d6e/a01137_1ac105af5d51473a274f597d509308c55f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>size</name></member>
      <member refid="d8/d02/a01149_1a3015c0013b0a8773370353b1602b17b9" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>SparseFlatAssembler</name></member>
      <member refid="d8/d02/a01149_1a6556f0e1d3708250341a39721e7e9bdc" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessor</name></member>
      <member refid="d8/d02/a01149_1ad6b97ba19e72a86467d14c7a6920d30e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessorRaw</name></member>
      <member refid="d8/d02/a01149_1a6258bef2fea02efb345abe9ee75ff398" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessorReduced</name></member>
      <member refid="d8/d02/a01149_1a255d3fc477f773545c41ac91e2ec086e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMat</name></member>
      <member refid="d8/d02/a01149_1a6f910fa255cf94701a51f3174fc4b29b" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMatRaw</name></member>
      <member refid="d8/d02/a01149_1a0bd42fe28658bb988458cac0f82e1d08" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMatReduced</name></member>
      <member refid="d9/d65/a01145_1ab29654e07434ec261e3f2b449eb36a8c" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
