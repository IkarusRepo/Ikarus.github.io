<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01560" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::NonLinearSolverLogger</compoundname>
    <basecompoundref refid="a01564" prot="public" virt="non-virtual">Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</basecompoundref>
    <includes refid="a00218" local="no">ikarus/utils/observer/nonlinearsolverlogger.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01560_1a8b26c3cab2422bef671446c485a701b6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::NonLinearSolverLogger::iters</definition>
        <argsstring></argsstring>
        <name>iters</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::iters</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="47" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01560_1ad3b59ca43cf6444e664b4cec0e712e17" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverLogger::dNorm</definition>
        <argsstring></argsstring>
        <name>dNorm</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::dNorm</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="48" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01560_1a0e3435fa675e26f301e83533304c50fc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverLogger::rNorm</definition>
        <argsstring></argsstring>
        <name>rNorm</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::rNorm</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="49" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01560_1a9f014b7400e068b1b84fa79ca27bfa12" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverLogger::lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::lambda</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="50" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01560_1a131da094b77cab07c39b4017d5419dac" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearSolverLogger::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::updateImpl</qualifiedname>
        <reimplements refid="a01564_1a478eaa94650cf462a050e28ecf098773">updateImpl</reimplements>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Handles the update when a NonLinearSolverMessages is received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The NonLinearSolverMessages received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01560_1a17558ed4ad25de4e80b2bccdbf670e0b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearSolverLogger::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, double val) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::updateImpl</qualifiedname>
        <reimplements refid="a01564_1a663889f78a7dbd3561fa6a497e023a23">updateImpl</reimplements>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Handles the update when a NonLinearSolverMessages with a double value is received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The NonLinearSolverMessages received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="36" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01560_1a2a30782a175f8fc1dfb583531718cabf" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearSolverLogger::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, int intVal) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::updateImpl</qualifiedname>
        <reimplements refid="a01564_1adc61a4813394bdde201018db198544a3">updateImpl</reimplements>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intVal</declname>
        </param>
        <briefdescription>
<para>Handles the update when a NonLinearSolverMessages with an integer value is received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The NonLinearSolverMessages received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with numberOfIterations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="44" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a8c171635a257ce7fe905a58337717efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="35" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a0f235d3f9f49582c0902dfcd5217f4a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="45" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a97bf3fd861a8eac696a97ec56d953b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="55" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a05a6a76b6875406ae8ff5e05f2662d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="65" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1ab87bc0dab48de914d7f5221fb9c3477b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and two values (integer and double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="76" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a5d2fb507095933199fab726c17e01bcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message, an integer value, and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="87" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a20e3859480f6cab562f33ce9da888380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(NonLinearSolverMessages message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an Eigen::VectorXd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorXd associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="97" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01564_1ae97b76e37ab99f985a0ef71f4a9efd37" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, const std::string &amp;val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="106" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1af53b8b154a887fce37fee355b0244c21" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="107" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a4d0a13cbe1104d10c4ec5e928f64ab4b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, double val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="108" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01564_1a4b7267849be75994c85c8ebe7af10465" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00310_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="109" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of an observer for logging non-linear solvers.</para>
<para>This class inherits from the <ref refid="a01564" kindref="compound">IObserver</ref> class and provides specific implementations for updating based on NonLinearSolverMessages. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01564"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MessageType &gt;</label>
        <link refid="a01564"/>
      </node>
      <node id="1">
        <label>Ikarus::NonLinearSolverLogger</label>
        <link refid="a01560"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01564"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MessageType &gt;</label>
        <link refid="a01564"/>
      </node>
      <node id="1">
        <label>Ikarus::NonLinearSolverLogger</label>
        <link refid="a01560"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="20" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="21" bodyend="51"/>
    <listofallmembers>
      <member refid="a01560_1ad3b59ca43cf6444e664b4cec0e712e17" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>dNorm</name></member>
      <member refid="a01560_1a8b26c3cab2422bef671446c485a701b6" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>iters</name></member>
      <member refid="a01560_1a9f014b7400e068b1b84fa79ca27bfa12" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>lambda</name></member>
      <member refid="a01560_1a0e3435fa675e26f301e83533304c50fc" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>rNorm</name></member>
      <member refid="a01564_1a8c171635a257ce7fe905a58337717efe" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01564_1a0f235d3f9f49582c0902dfcd5217f4a1" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01564_1a97bf3fd861a8eac696a97ec56d953b47" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01564_1a05a6a76b6875406ae8ff5e05f2662d57" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01564_1ab87bc0dab48de914d7f5221fb9c3477b" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01564_1a5d2fb507095933199fab726c17e01bcf" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01564_1a20e3859480f6cab562f33ce9da888380" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01560_1a131da094b77cab07c39b4017d5419dac" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01560_1a17558ed4ad25de4e80b2bccdbf670e0b" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01560_1a2a30782a175f8fc1dfb583531718cabf" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01564_1ae97b76e37ab99f985a0ef71f4a9efd37" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01564_1af53b8b154a887fce37fee355b0244c21" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01564_1a4d0a13cbe1104d10c4ec5e928f64ab4b" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01564_1a4b7267849be75994c85c8ebe7af10465" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01564_1afda55d0cee706fa7a2df824e2a149a9e" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
