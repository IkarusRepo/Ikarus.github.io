<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d0/d00/a01286" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::LinearElastic</compoundname>
    <basecompoundref refid="d2/da6/a01210" prot="public" virt="non-virtual">Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</basecompoundref>
    <basecompoundref refid="d7/d88/a01294" prot="public" virt="non-virtual">Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</basecompoundref>
    <basecompoundref refid="dc/ded/a01290" prot="public" virt="non-virtual">Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</basecompoundref>
    <includes refid="d1/d50/a02487" local="no">ikarus/finiteelements/mechanics/linearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename Basis_</type>
      </param>
      <param>
        <type>typename FERequirements_</type>
        <defval><ref refid="d6/d1e/a01234" kindref="compound">FERequirements</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d0/d00/a01286_1aa098cb85040dc0e2f937f27356379ef5" prot="public" static="no">
        <type><ref refid="d5/d78/a01330" kindref="compound">TraitsFromFE</ref>&lt; Basis_, FERequirements_, useEigenRef &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Traits =  TraitsFromFE&lt;Basis_, FERequirements_, useEigenRef&gt;</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::LinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="51" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1ac67d77bbb42299a97ba00a00265a2a98" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1a6a750e6394db5c344790453319075dd4" kindref="member">Traits::Basis</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Basis =  typename Traits::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::LinearElastic::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="52" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1aaf49fc71022971578d72cce0ae28aa55" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1a4cd4d3b203993f8b5de5ca968bda0b97" kindref="member">Traits::FlatBasis</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::FlatBasis =  typename Traits::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::LinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="53" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1ae29466435644541bf50d0f8fecbac1dd" kindref="member">Traits::FERequirementType</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::LinearElastic::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="54" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a630a04c604ae2e56673604452e3fd39a" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1a36437741d63f3d325f363c8df4d2aac5" kindref="member">Traits::LocalView</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::LinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="55" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a199e66dea3f46b43e92443e427335c20" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1af8b05c9e9d401efcdb7d97e197b9fc1f" kindref="member">Traits::Geometry</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Geometry =  typename Traits::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::LinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="56" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a32bea39022e61c6978c29f0b75847e44" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1ae15acf23e6cfbae7db57da6d4dd5ca80" kindref="member">Traits::GridView</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::LinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="57" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1af40ba2ffc4ec6ba9e438a1a5a066a1bf" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1a179f7c62c0c2fef548d7ae31705de71e" kindref="member">Traits::Element</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::LinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="58" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1aab04fec155c76056c0c302352686787a" prot="public" static="no">
        <type>typename <ref refid="d5/d78/a01330_1a5b3e19bb8aac79a0cceeacd20c021d97" kindref="member">Traits::ResultRequirementsType</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::ResultRequirementsType =  typename Traits::ResultRequirementsType</definition>
        <argsstring></argsstring>
        <name>ResultRequirementsType</name>
        <qualifiedname>Ikarus::LinearElastic::ResultRequirementsType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="59" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a46df9b5887e5f1c87dfd24aeca94824a" prot="public" static="no">
        <type><ref refid="d2/da6/a01210" kindref="compound">PowerBasisFE</ref>&lt; <ref refid="d0/d00/a01286_1aaf49fc71022971578d72cce0ae28aa55" kindref="member">FlatBasis</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::BaseDisp =  PowerBasisFE&lt;FlatBasis&gt;</definition>
        <argsstring></argsstring>
        <name>BaseDisp</name>
        <qualifiedname>Ikarus::LinearElastic::BaseDisp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="60" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1afb5b60dfe956fa4b70195462b2e4ac0e" prot="public" static="no">
        <type><ref refid="d7/d88/a01294" kindref="compound">Volume</ref>&lt; <ref refid="d0/d00/a01286" kindref="compound">LinearElastic</ref>&lt; Basis_, FERequirements_, useEigenRef &gt;, <ref refid="d0/d00/a01286_1aa098cb85040dc0e2f937f27356379ef5" kindref="member">Traits</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::VolumeType =  Volume&lt;LinearElastic&lt;Basis_, FERequirements_, useEigenRef&gt;, Traits&gt;</definition>
        <argsstring></argsstring>
        <name>VolumeType</name>
        <qualifiedname>Ikarus::LinearElastic::VolumeType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="61" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a68d172e1b8834272956a8fa7e138072e" prot="public" static="no">
        <type><ref refid="dc/ded/a01290" kindref="compound">Traction</ref>&lt; <ref refid="d0/d00/a01286" kindref="compound">LinearElastic</ref>&lt; Basis_, FERequirements_, useEigenRef &gt;, <ref refid="d0/d00/a01286_1aa098cb85040dc0e2f937f27356379ef5" kindref="member">Traits</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::TractionType =  Traction&lt;LinearElastic&lt;Basis_, FERequirements_, useEigenRef&gt;, Traits&gt;</definition>
        <argsstring></argsstring>
        <name>TractionType</name>
        <qualifiedname>Ikarus::LinearElastic::TractionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="62" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d00/a01286_1a1d9cc0964e73991e6a06ad38e7bfb78a" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="d0/d00/a01286_1a630a04c604ae2e56673604452e3fd39a" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().localBasis())</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::LinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="64" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/da6/a01210_1a603635da96938a751807c9dc1dd81f39" prot="public" static="no">
        <type>Basis_::FlatBasis</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::RootBasis =  Basis_::FlatBasis</definition>
        <argsstring></argsstring>
        <name>RootBasis</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::RootBasis</qualifiedname>
        <briefdescription>
<para>Type of the root basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="25" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/da6/a01210_1a6f9f635b6e082d4f56988229a944b4e6" prot="public" static="no">
        <type>typename LocalView::MultiIndex</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::GlobalIndex =  typename LocalView::MultiIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="27" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/da6/a01210_1a74443a55b1c44a242d4089637228d001" prot="public" static="no">
        <type>typename LocalView::Element</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::GridElement =  typename LocalView::Element</definition>
        <argsstring></argsstring>
        <name>GridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::GridElement</qualifiedname>
        <briefdescription>
<para>Type of the grid element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="28" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d0/d00/a01286_1a2279ac283b972f47d58c51730ca47d6b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::LinearElastic::myDim</qualifiedname>
        <initializer>= <ref refid="d5/d78/a01330_1a9e797097afc9ec86a072555b99778bf5" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="63" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="63" bodyend="-1"/>
        <referencedby refid="d0/d00/a01286_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d1/d50/a02487" startline="185" endline="205">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d0/d00/a01286_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d1/d50/a02487" startline="267" endline="290">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="d0/d00/a01286_1ae9391f3895e965ecc5dfea1af1ac62f7" compoundref="d1/d50/a02487" startline="140" endline="145">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/da6/a01210_1a08d63c99f722a352ee1ebe29bcb88bcd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::num_children</definition>
        <argsstring></argsstring>
        <name>num_children</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::num_children</qualifiedname>
        <briefdescription>
<para>Number of children in the powerBasis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="48" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d88/a01294_1aa57591d28c62806bfac624043d2e0258" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::worldDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="24" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/ded/a01290_1a1eee242b581174d0fd8e7587130234be" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::worldDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="28" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/d00/a01286_1af3ddba31ce5bb464d3831e5aa37cbc00" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="d0/d00/a01286_1a199e66dea3f46b43e92443e427335c20" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::LinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="233" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d00/a01286_1acf549079afaf07ee432d7d4d313bf328" prot="private" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="d0/d00/a01286_1a1d9cc0964e73991e6a06ad38e7bfb78a" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::localBasis</definition>
        <argsstring></argsstring>
        <name>localBasis</name>
        <qualifiedname>Ikarus::LinearElastic::localBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="234" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d00/a01286_1ae98a4458c10414b5a86e2d57aded34b5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::emod_</definition>
        <argsstring></argsstring>
        <name>emod_</name>
        <qualifiedname>Ikarus::LinearElastic::emod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="235" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d00/a01286_1a33fbf32f4837529fb342bc3ced62107b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>Ikarus::LinearElastic::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="236" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d00/a01286_1a8049cfa72180a450b99157636f8286d0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::numberOfNodes_</definition>
        <argsstring></argsstring>
        <name>numberOfNodes_</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="237" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d00/a01286_1ae8d1c52446c69f9284a2248d4fcf8ea9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <qualifiedname>Ikarus::LinearElastic::order_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="238" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d00/a01286_1a99c658e2b0aa008672bfbc67e11c56db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumeLoad</type>
            <defval><ref refid="da/d36/a01482" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
          <param>
            <type>typename NeumannBoundaryLoad</type>
            <defval><ref refid="da/d36/a01482" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::LinearElastic</definition>
        <argsstring>(const Basis &amp;globalBasis, const typename LocalView::Element &amp;element, double emod, double nu, VolumeLoad p_volumeLoad={}, const BoundaryPatch&lt; GridView &gt; *p_neumannBoundary=nullptr, NeumannBoundaryLoad p_neumannBoundaryLoad={})</argsstring>
        <name>LinearElastic</name>
        <qualifiedname>Ikarus::LinearElastic::LinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1ac67d77bbb42299a97ba00a00265a2a98" kindref="member">Basis</ref> &amp;</type>
          <declname>globalBasis</declname>
        </param>
        <param>
          <type>const typename LocalView::Element &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>double</type>
          <declname>emod</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>VolumeLoad</type>
          <declname>p_volumeLoad</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="d0/d00/a01286_1a32bea39022e61c6978c29f0b75847e44" kindref="member">GridView</ref> &gt; *</type>
          <declname>p_neumannBoundary</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>NeumannBoundaryLoad</type>
          <declname>p_neumannBoundaryLoad</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="d0/d00/a01286" kindref="compound">LinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the volume load function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NeumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>The global basis for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element for which the finite element is constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emod</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_volumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d7/d88/a01294" kindref="compound">Volume</ref> load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch (default is nullptr). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="80" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="80" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a80bcd6e7b26b4529df93d12314d92117" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::displacementFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::LinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the displacement function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="114" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="114" bodyend="120"/>
        <referencedby refid="d0/d00/a01286_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d1/d50/a02487" startline="242" endline="264">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d0/d00/a01286_1a8622364f84baada158d636021dc3d3d4" compoundref="d1/d50/a02487" startline="130" endline="133">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a8622364f84baada158d636021dc3d3d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::strainFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::LinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the strain function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="130" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="130" bodyend="133"/>
        <referencedby refid="d0/d00/a01286_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" compoundref="d1/d50/a02487" startline="214" endline="230">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="d0/d00/a01286_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d1/d50/a02487" startline="185" endline="205">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d0/d00/a01286_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d1/d50/a02487" startline="242" endline="264">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d0/d00/a01286_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d1/d50/a02487" startline="267" endline="290">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1ae9391f3895e965ecc5dfea1af1ac62f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangent</definition>
        <argsstring>() const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangent</qualifiedname>
        <briefdescription>
<para>Gets the material tangent matrix for the linear elastic material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The material tangent matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="140" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="140" bodyend="145"/>
        <referencedby refid="d0/d00/a01286_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" compoundref="d1/d50/a02487" startline="214" endline="230">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="d0/d00/a01286_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d1/d50/a02487" startline="185" endline="205">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d0/d00/a01286_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d1/d50/a02487" startline="242" endline="264">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d0/d00/a01286_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d1/d50/a02487" startline="267" endline="290">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="d0/d00/a01286_1a23a003fe0c49bfc18714da0889b00c65" compoundref="d1/d50/a02487" startline="153" endline="155">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangentFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a23a003fe0c49bfc18714da0889b00c65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangentFunction</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>materialTangentFunction</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangentFunction</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Gets the material tangent function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="153" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a9d79259ab8e7093c190171a8b4ddff13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/d00/a01286_1a199e66dea3f46b43e92443e427335c20" kindref="member">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>Ikarus::LinearElastic::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="157" column="20" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1ab6ce7edbeb15b437c5977d4f8962d03d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::numberOfNodes</definition>
        <argsstring>() const</argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="158" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a2bf5dffeeb22108cae5126814dd98163" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::LinearElastic::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="159" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar energy for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The scalar energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="167" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a35aa251bcd641913a8448b9502030349" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates the vector force for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the calculated force. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="175" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a9d491b6c69f9f28b2a838075526fa705" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::LinearElastic::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix stiffness for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store the calculated stiffness. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="185" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="185" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateAt</definition>
        <argsstring>(const ResultRequirementsType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, ResultTypeMap&lt; double &gt; &amp;result) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::LinearElastic::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1aab04fec155c76056c0c302352686787a" kindref="member">ResultRequirementsType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="da/dab/a01362" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="d5/d78/a01330_1a9e797097afc9ec86a072555b99778bf5" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="d7/dc5/a01242" kindref="compound">ResultTypeMap</ref>&lt; double &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates results at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The ResultRequirementsType object specifying the requested results. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Map to store the calculated results. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="214" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="214" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="d2/da6/a01210_1a65fbcfb67bd20fd4a434230b5efa5bd1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::size</qualifiedname>
        <briefdescription>
<para>Get the size of the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="54" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d2/da6/a01210_1ac47a208cf2511bf8676282280360ab38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::globalFlatIndices</definition>
        <argsstring>(std::vector&lt; GlobalIndex &gt; &amp;globalIndices) const</argsstring>
        <name>globalFlatIndices</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::globalFlatIndices</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="d2/da6/a01210_1a6f9f635b6e082d4f56988229a944b4e6" kindref="member">GlobalIndex</ref> &gt; &amp;</type>
          <declname>globalIndices</declname>
        </param>
        <briefdescription>
<para>Get the global flat indices for the power basis. </para>
        </briefdescription>
        <detaileddescription>
<para>The global indices are collected in a FlatInterLeaved order. I.e. x_0, y_0, z_0, ..., x_n, y_n, z_n</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store global indices. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="63" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d2/da6/a01210_1a0fe5d4e10f331905629351786c72ce6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d2/da6/a01210_1a74443a55b1c44a242d4089637228d001" kindref="member">GridElement</ref> &amp;</type>
        <definition>const GridElement &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::gridElement</definition>
        <argsstring>() const</argsstring>
        <name>gridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::gridElement</qualifiedname>
        <briefdescription>
<para>Get the grid element associated with the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The grid element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="78" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="d2/da6/a01210_1a4b49c02de08fb5c115affa646c5f249a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/d00/a01286_1a630a04c604ae2e56673604452e3fd39a" kindref="member">LocalView</ref> &amp;</type>
        <definition>const LocalView &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::localView</definition>
        <argsstring>() const</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the const reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The const reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="84" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="d2/da6/a01210_1a00a045439d18c431ef49d7349230272b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d00/a01286_1a630a04c604ae2e56673604452e3fd39a" kindref="member">LocalView</ref> &amp;</type>
        <definition>LocalView &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::localView</definition>
        <argsstring>()</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="90" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="d7/d88/a01294_1a33edddd4d3ef260d45b1c029efd9046d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given FERequirements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="46" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d7/d88/a01294_1ad2cf691094d779dd4681c79a1d768aae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="55" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d7/d88/a01294_1ab34ccd72bb7397283f7c2dcbf595841e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="65" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="dc/ded/a01290_1ac9ed9f5497683a52effe2c572056c6e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given FERequirements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="55" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="dc/ded/a01290_1a7c9d37bb3d426f00c1451d5a5222b748" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="64" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="dc/ded/a01290_1ad5b9f64124013ab2e98b6494e9b511b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="74" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="74" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d0/d00/a01286_1a2f4e42b682af401fcfaada66e5a05d53" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="242" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="242" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="d0/d00/a01286_1a3cb0f7f1a2745097f3e91b9c0928722f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="267" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="267" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="d7/d88/a01294_1a38b6d9f88ad5734093413497e3ac7b29" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="71" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="71" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d7/d88/a01294_1af2fc872a641d42398fc9d8bd60aa973c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="88" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="88" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="d7/d88/a01294_1a6903f5e92a06b8066ef67b6a1f22e142" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="108" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="108" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="dc/ded/a01290_1a3b3de553171d016228f21cbac1e7f47d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="80" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="80" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="dc/ded/a01290_1a0cac2c7cc2a06ae38bc83f97664e4d8c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Integration rule along the boundary</para>
<para>The value of the local function wrt the i-th coeff</para>
<para>Value of the Neumann data at the current position</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="112" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="112" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="dc/ded/a01290_1aae1b4a04dd13b2ec2145ef141bf3190c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt; , TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt;  &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="144" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="144" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d0/d00/a01286" kindref="compound">LinearElastic</ref> class represents a linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Basis_</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis type for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FERequirements_</parametername>
</parameternamelist>
<parameterdescription>
<para>The requirements for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag indicating whether to use <ref refid="da/de0/a00317" kindref="compound">Eigen</ref> references. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;</label>
        <link refid="d0/d00/a01286"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::PowerBasisFE&lt; Basis &gt;</label>
        <link refid="d2/da6/a01210"/>
      </node>
      <node id="7">
        <label>Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;</label>
        <link refid="dc/ded/a01290"/>
      </node>
      <node id="5">
        <label>Ikarus::Volume&lt; DisplacementBasedElement, Traits &gt;</label>
        <link refid="d7/d88/a01294"/>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</label>
        <link refid="d2/da6/a01210"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Basis_::FlatBasis &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="dc/ded/a01290"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="d7/d88/a01294"/>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;</label>
        <link refid="d0/d00/a01286"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::PowerBasisFE&lt; Basis &gt;</label>
        <link refid="d2/da6/a01210"/>
      </node>
      <node id="7">
        <label>Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;</label>
        <link refid="dc/ded/a01290"/>
      </node>
      <node id="5">
        <label>Ikarus::Volume&lt; DisplacementBasedElement, Traits &gt;</label>
        <link refid="d7/d88/a01294"/>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</label>
        <link refid="d2/da6/a01210"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Basis_::FlatBasis &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="dc/ded/a01290"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="d7/d88/a01294"/>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="45" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="49" bodyend="291"/>
    <listofallmembers>
      <member refid="d0/d00/a01286_1a46df9b5887e5f1c87dfd24aeca94824a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>BaseDisp</name></member>
      <member refid="d0/d00/a01286_1ac67d77bbb42299a97ba00a00265a2a98" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Basis</name></member>
      <member refid="d0/d00/a01286_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateAt</name></member>
      <member refid="d0/d00/a01286_1a9d491b6c69f9f28b2a838075526fa705" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="d7/d88/a01294_1ab34ccd72bb7397283f7c2dcbf595841e" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="dc/ded/a01290_1ad5b9f64124013ab2e98b6494e9b511b3" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="d7/d88/a01294_1a6903f5e92a06b8066ef67b6a1f22e142" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="dc/ded/a01290_1aae1b4a04dd13b2ec2145ef141bf3190c" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="d0/d00/a01286_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="d7/d88/a01294_1a33edddd4d3ef260d45b1c029efd9046d" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="dc/ded/a01290_1ac9ed9f5497683a52effe2c572056c6e0" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="d0/d00/a01286_1a2f4e42b682af401fcfaada66e5a05d53" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="d7/d88/a01294_1a38b6d9f88ad5734093413497e3ac7b29" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="dc/ded/a01290_1a3b3de553171d016228f21cbac1e7f47d" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="d0/d00/a01286_1a35aa251bcd641913a8448b9502030349" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="d7/d88/a01294_1ad2cf691094d779dd4681c79a1d768aae" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="dc/ded/a01290_1a7c9d37bb3d426f00c1451d5a5222b748" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="d0/d00/a01286_1a3cb0f7f1a2745097f3e91b9c0928722f" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="d7/d88/a01294_1af2fc872a641d42398fc9d8bd60aa973c" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="dc/ded/a01290_1a0cac2c7cc2a06ae38bc83f97664e4d8c" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="d0/d00/a01286_1a80bcd6e7b26b4529df93d12314d92117" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>displacementFunction</name></member>
      <member refid="d0/d00/a01286_1af40ba2ffc4ec6ba9e438a1a5a066a1bf" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Element</name></member>
      <member refid="d0/d00/a01286_1ae98a4458c10414b5a86e2d57aded34b5" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>emod_</name></member>
      <member refid="d0/d00/a01286_1a50164592b0aa80d9027a707436cfc50c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FERequirementType</name></member>
      <member refid="d0/d00/a01286_1aaf49fc71022971578d72cce0ae28aa55" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FlatBasis</name></member>
      <member refid="d0/d00/a01286_1af3ddba31ce5bb464d3831e5aa37cbc00" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geo_</name></member>
      <member refid="d0/d00/a01286_1a9d79259ab8e7093c190171a8b4ddff13" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geometry</name></member>
      <member refid="d0/d00/a01286_1a199e66dea3f46b43e92443e427335c20" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Geometry</name></member>
      <member refid="d2/da6/a01210_1ac47a208cf2511bf8676282280360ab38" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>globalFlatIndices</name></member>
      <member refid="d2/da6/a01210_1a6f9f635b6e082d4f56988229a944b4e6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GlobalIndex</name></member>
      <member refid="d2/da6/a01210_1a74443a55b1c44a242d4089637228d001" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridElement</name></member>
      <member refid="d2/da6/a01210_1a0fe5d4e10f331905629351786c72ce6a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>gridElement</name></member>
      <member refid="d0/d00/a01286_1a32bea39022e61c6978c29f0b75847e44" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridView</name></member>
      <member refid="d0/d00/a01286_1a99c658e2b0aa008672bfbc67e11c56db" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LinearElastic</name></member>
      <member refid="d0/d00/a01286_1acf549079afaf07ee432d7d4d313bf328" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localBasis</name></member>
      <member refid="d0/d00/a01286_1a1d9cc0964e73991e6a06ad38e7bfb78a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="d2/da6/a01210_1a4b49c02de08fb5c115affa646c5f249a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="d2/da6/a01210_1a00a045439d18c431ef49d7349230272b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="d0/d00/a01286_1a630a04c604ae2e56673604452e3fd39a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalView</name></member>
      <member refid="d0/d00/a01286_1ae9391f3895e965ecc5dfea1af1ac62f7" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangent</name></member>
      <member refid="d0/d00/a01286_1a23a003fe0c49bfc18714da0889b00c65" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangentFunction</name></member>
      <member refid="d0/d00/a01286_1a2279ac283b972f47d58c51730ca47d6b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>myDim</name></member>
      <member refid="d0/d00/a01286_1a33fbf32f4837529fb342bc3ced62107b" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>nu_</name></member>
      <member refid="d2/da6/a01210_1a08d63c99f722a352ee1ebe29bcb88bcd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>num_children</name></member>
      <member refid="d0/d00/a01286_1ab6ce7edbeb15b437c5977d4f8962d03d" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="d0/d00/a01286_1a8049cfa72180a450b99157636f8286d0" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes_</name></member>
      <member refid="d0/d00/a01286_1a2bf5dffeeb22108cae5126814dd98163" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order</name></member>
      <member refid="d0/d00/a01286_1ae8d1c52446c69f9284a2248d4fcf8ea9" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order_</name></member>
      <member refid="d2/da6/a01210_1a009345be8aeaf011f22f4c32c7d6f638" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>PowerBasisFE</name></member>
      <member refid="d0/d00/a01286_1aab04fec155c76056c0c302352686787a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>ResultRequirementsType</name></member>
      <member refid="d2/da6/a01210_1a603635da96938a751807c9dc1dd81f39" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>RootBasis</name></member>
      <member refid="d2/da6/a01210_1a65fbcfb67bd20fd4a434230b5efa5bd1" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>size</name></member>
      <member refid="d0/d00/a01286_1a8622364f84baada158d636021dc3d3d4" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>strainFunction</name></member>
      <member refid="dc/ded/a01290_1ab0350cc85099b73b31b6f337bba45052" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traction</name></member>
      <member refid="d0/d00/a01286_1a68d172e1b8834272956a8fa7e138072e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>TractionType</name></member>
      <member refid="d0/d00/a01286_1aa098cb85040dc0e2f937f27356379ef5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traits</name></member>
      <member refid="d7/d88/a01294_1a4b5995b4de476887526d16c90600b634" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Volume</name></member>
      <member refid="d0/d00/a01286_1afb5b60dfe956fa4b70195462b2e4ac0e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>VolumeType</name></member>
      <member refid="d7/d88/a01294_1aa57591d28c62806bfac624043d2e0258" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
      <member refid="dc/ded/a01290_1a1eee242b581174d0fd8e7587130234be" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, TraitsFromFE&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;::"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
