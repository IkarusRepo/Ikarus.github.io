<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="de/df3/a00185" kind="file" language="C++">
    <compoundname>adaptivestepsizing.hh</compoundname>
    <includes refid="da/d15/a00188" local="no">ikarus/controlroutines/pathfollowingfunctions.hh</includes>
    <includes refid="dc/de6/a00167" local="no">ikarus/solver/nonlinearsolver/solverinfos.hh</includes>
    <includedby refid="d9/dd0/a00191" local="no">pathfollowingtechnique.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>adaptivestepsizing.hh</label>
        <link refid="de/df3/a00185"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/controlroutines/pathfollowingfunctions.hh</label>
        <link refid="da/d15/a00188"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="db/dd9/a00179"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="dc/de6/a00167"/>
      </node>
      <node id="15">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="d4/d3a/a00101"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="df/d98/a00107"/>
      </node>
      <node id="19">
        <label>ikarus/utils/traits.hh</label>
        <link refid="da/d1e/a00149"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Eigen/Core</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="14">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="16">
        <label>concepts</label>
      </node>
      <node id="8">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="22">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="17">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="21">
        <label>tuple</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="13">
        <label>variant</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>adaptivestepsizing.hh</label>
        <link refid="de/df3/a00185"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pathfollowingtechnique.hh</label>
        <link refid="d9/dd0/a00191"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d0/dd3/a01077" prot="public">Ikarus::AdaptiveStepSizing::NoOp</innerclass>
    <innerclass refid="dd/dee/a01081" prot="public">Ikarus::AdaptiveStepSizing::IterationBased</innerclass>
    <innernamespace refid="dd/df3/a00219">Ikarus</innernamespace>
    <innernamespace refid="d5/d0b/a00220">Ikarus::AdaptiveStepSizing</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="da/d15/a00188" kindref="compound">ikarus/controlroutines/pathfollowingfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dc/de6/a00167" kindref="compound">ikarus/solver/nonlinearsolver/solverinfos.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="d5/d0b/a00220" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d5/d0b/a00220" kindref="compound">Ikarus::AdaptiveStepSizing</ref><sp/>{</highlight></codeline>
<codeline lineno="10" refid="d0/dd3/a01077" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d0/dd3/a01077" kindref="compound">NoOp</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NonLinearOperator&gt;</highlight></codeline>
<codeline lineno="12" refid="d0/dd3/a01077_1aab69ce284a8a68572d0ac1edea6e0791" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dd3/a01077_1aab69ce284a8a68572d0ac1edea6e0791" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d4b/a01309" kindref="compound">NonLinearSolverInformation</ref>&amp;,<sp/><ref refid="de/d1c/a01093" kindref="compound">Ikarus::SubsidiaryArgs</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0b/a01253" kindref="compound">NonLinearOperator</ref>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="13" refid="d0/dd3/a01077_1af42dff6b9945230918607a14f159e52e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/dd3/a01077_1af42dff6b9945230918607a14f159e52e" kindref="member">targetIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="14" refid="d0/dd3/a01077_1a11d06e5af06b4cf8fb95a1c37624e393" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dd3/a01077_1a11d06e5af06b4cf8fb95a1c37624e393" kindref="member">setTargetIterations</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="dd/dee/a01081" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/dee/a01081" kindref="compound">IterationBased</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NonLinearOperator&gt;</highlight></codeline>
<codeline lineno="19" refid="dd/dee/a01081_1aeb04564978e21c0cb75faf5494d6937c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/dee/a01081_1aeb04564978e21c0cb75faf5494d6937c" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d4b/a01309" kindref="compound">NonLinearSolverInformation</ref>&amp;<sp/>solverInfo,<sp/><ref refid="de/d1c/a01093" kindref="compound">Ikarus::SubsidiaryArgs</ref>&amp;<sp/>subsidiaryArgs,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0b/a01253" kindref="compound">NonLinearOperator</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subsidiaryArgs.<ref refid="de/d1c/a01093_1a217c729e1ae8b05a98c852f19b0d6ae5" kindref="member">currentStep</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetIterations_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;For<sp/>IterationBased,<sp/>targetIterations<sp/>should<sp/>not<sp/>be<sp/>equal<sp/>to<sp/>0.<sp/>Try<sp/>calling<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;setTargetIterations(int)<sp/>first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>previousIterations<sp/>=<sp/>solverInfo.<ref refid="db/d4b/a01309_1a81570cd3d9f6589a4d1ba81211f41b99" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previousIterations<sp/>&gt;<sp/>targetIterations_)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsidiaryArgs.<ref refid="de/d1c/a01093_1a9c0bca7ed999dcf751648d41b5d9aa78" kindref="member">stepSize</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sqrt(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(targetIterations_)<sp/>/<sp/>previousIterations)<sp/>*<sp/>subsidiaryArgs.<ref refid="de/d1c/a01093_1a9c0bca7ed999dcf751648d41b5d9aa78" kindref="member">stepSize</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31" refid="dd/dee/a01081_1aabdaad05b950b53e014624271a16fd9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/dee/a01081_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>targetIterations_;<sp/>}</highlight></codeline>
<codeline lineno="32" refid="dd/dee/a01081_1a52017ebcd89859d5ae214cc8767ef78d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/dee/a01081_1a52017ebcd89859d5ae214cc8767ef78d" kindref="member">setTargetIterations</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/dee/a01081_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref>)<sp/>{<sp/>targetIterations_<sp/>=<sp/><ref refid="dd/dee/a01081_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref>;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetIterations_{0};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::AdaptiveStepSizing</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/adaptivestepsizing.hh"/>
  </compounddef>
</doxygen>
