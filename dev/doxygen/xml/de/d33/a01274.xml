<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="de/d33/a01274" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::EnhancedAssumedStrains</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DisplacementBasedElement</basecompoundref>
    <includes refid="d7/d06/a00131" local="no">ikarus/finiteelements/mechanics/enhancedassumedstrains.hh</includes>
    <templateparamlist>
      <param>
        <type>typename DisplacementBasedElement</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" prot="public" static="no">
        <type>typename DisplacementBasedElement::FERequirementType</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::FERequirementType =  typename DisplacementBasedElement::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="339" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d33/a01274_1a5ed0cee3df4cbf8a9aed6a705dd8642e" prot="public" static="no">
        <type>typename DisplacementBasedElement::ResultRequirementsType</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::ResultRequirementsType =  typename DisplacementBasedElement::ResultRequirementsType</definition>
        <argsstring></argsstring>
        <name>ResultRequirementsType</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::ResultRequirementsType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="340" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d33/a01274_1a5699ce520159375f9737ec518130e50e" prot="public" static="no">
        <type>typename DisplacementBasedElement::LocalView</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::LocalView =  typename DisplacementBasedElement::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="341" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d33/a01274_1aee26978267fb07c5c013a33bbc85f380" prot="public" static="no">
        <type>typename DisplacementBasedElement::GridView</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::GridView =  typename DisplacementBasedElement::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="342" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d33/a01274_1a550c9fb8dcd8c64d21c9adaf4749c866" prot="public" static="no">
        <type>typename DisplacementBasedElement::Traits</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::Traits =  typename DisplacementBasedElement::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="343" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="de/d33/a01274_1ab30968323ba4b9bbe8db8d92ecdf8224" prot="private" static="no">
        <type><ref refid="d1/d67/a00310_1a87e3feaaba5839ab7b515df24438c07f" kindref="member">EAS2DVariant</ref>&lt; typename LocalView::Element::Geometry &gt;</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::EAS2DVariantImpl =  EAS2DVariant&lt;typename LocalView::Element::Geometry&gt;</definition>
        <argsstring></argsstring>
        <name>EAS2DVariantImpl</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::EAS2DVariantImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="600" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d33/a01274_1ac2ab85da4af3a17f31400cca02b870e2" prot="private" static="no">
        <type><ref refid="d1/d67/a00310_1a4e486ca9fc463568d5018e15b3d68b0d" kindref="member">EAS3DVariant</ref>&lt; typename LocalView::Element::Geometry &gt;</type>
        <definition>using Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::EAS3DVariantImpl =  EAS3DVariant&lt;typename LocalView::Element::Geometry&gt;</definition>
        <argsstring></argsstring>
        <name>EAS3DVariantImpl</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::EAS3DVariantImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="601" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="601" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/d33/a01274_1abcce6b657bac6b2de287c8e6222f95bd" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt; Traits::mydim==2, EAS2DVariantImpl, EAS3DVariantImpl &gt;</type>
        <definition>std::conditional_t&lt;Traits::mydim == 2, EAS2DVariantImpl, EAS3DVariantImpl&gt; Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::easVariant_</definition>
        <argsstring></argsstring>
        <name>easVariant_</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::easVariant_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="602" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d33/a01274_1a823479c56e7a66f61a2932c54dc06452" prot="private" static="no" mutable="yes">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::L</definition>
        <argsstring></argsstring>
        <name>L</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="603" column="29" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="603" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d33/a01274_1a1f09e03a1efdba3ff76ad0f37acc0abc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::EnhancedAssumedStrains</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>EnhancedAssumedStrains</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::EnhancedAssumedStrains</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(not std::is_same_v&lt;std::remove_cvref_t&lt;std::tuple_element_t&lt;0, std::tuple&lt;Args...&gt;&gt;&gt;, EnhancedAssumedStrains&gt;)    </requiresclause>
        <briefdescription>
<para>Constructor for Enhanced Assumed Strains elements. </para>
        </briefdescription>
        <detaileddescription>
<para>Disabling this forwarding constructor if the argument provided is <ref refid="de/d33/a01274" kindref="compound">EnhancedAssumedStrains</ref> itself, to forward the calls to the implicit copy constructor <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Variadic template for constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments forwarded to the base class. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="356" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="356" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1aa455935bfd539dbd145450c9e8732bdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculates a scalar quantity for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates a scalar quantity for the element based on the FERequirementType.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Computed scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="367" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="367" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1a27a311be4e36cbb8d68d96e6d9046afd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::isDisplacementBased</definition>
        <argsstring>() const</argsstring>
        <name>isDisplacementBased</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::isDisplacementBased</qualifiedname>
        <briefdescription>
<para>Checks if the element is displacement-based and the EAS is turned off. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the element is displacement-based, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="378" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="378" bodyend="378"/>
        <referencedby refid="de/d33/a01274_1a22e25753bb3cf0c5b296c3af10c443b6" compoundref="d7/d06/a00131" startline="462" endline="498">Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateAt</referencedby>
        <referencedby refid="de/d33/a01274_1a7f2216c3b8f6b94145ae586324018376" compoundref="d7/d06/a00131" startline="423" endline="446">Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateMatrix</referencedby>
        <referencedby refid="de/d33/a01274_1aa455935bfd539dbd145450c9e8732bdc" compoundref="d7/d06/a00131" startline="367" endline="371">Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateScalar</referencedby>
        <referencedby refid="de/d33/a01274_1afc5adc55bc187c5d033a90cbae91ae44" compoundref="d7/d06/a00131" startline="549" endline="555">Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="de/d33/a01274_1afa32c429e6121e0573a0fedbe43d2f45" compoundref="d7/d06/a00131" startline="558" endline="597">Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="de/d33/a01274_1a3990ba9792f807ae9d0c2f5fd7fb7e85" compoundref="d7/d06/a00131" startline="505" endline="545">Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::setEASType</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1a3a92d4669635a5ab22a10bc353111d95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates vectorial quantities for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the vectorial quantities for the element based on the FERequirementType.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the calculated forces. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="388" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1ab8c3ff043b0808de14656d79ec56de5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::easVariant</definition>
        <argsstring>() const</argsstring>
        <name>easVariant</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::easVariant</qualifiedname>
        <briefdescription>
<para>Gets the variant representing the type of Enhanced Assumed Strains (EAS). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the EAS variant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="397" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1aa75e2ef6c92f084608e36d5aa6a1122e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::getNumberOfEASParameters</definition>
        <argsstring>() const</argsstring>
        <name>getNumberOfEASParameters</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::getNumberOfEASParameters</qualifiedname>
        <briefdescription>
<para>Gets the number of EAS parameters based on the current EAS type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of EAS parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="404" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="404" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1a7f2216c3b8f6b94145ae586324018376" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the matrix for the element based on the FERequirementType.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store the calculated stiffness. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>fill K with displacement-based stiffness. It is assumed to be assembled block-wise on element level. This means the displacements x,y,z of node I are grouped together.</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="423" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="423" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1a22e25753bb3cf0c5b296c3af10c443b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateAt</definition>
        <argsstring>(const ResultRequirementsType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, ResultTypeMap&lt; double &gt; &amp;result) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="de/d33/a01274_1a5ed0cee3df4cbf8a9aed6a705dd8642e" kindref="member">ResultRequirementsType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="da/dab/a01362" kindref="compound">Dune::FieldVector</ref>&lt; double, Traits::mydim &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="d7/dc5/a01242" kindref="compound">ResultTypeMap</ref>&lt; double &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates the results at a given set of local coordinates using the Enhanced Assumed Strains (EAS) method. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the results at the specified local coordinates . It takes into account the displacement-based element calculations and, if applicable, incorporates the EAS method for enhanced accuracy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The result requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>The local coordinates at which results are to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The result container to store the calculated values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ResultRequirementsType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requirements for results. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="462" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="462" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1a3990ba9792f807ae9d0c2f5fd7fb7e85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::setEASType</definition>
        <argsstring>(int numberOfEASParameters_)</argsstring>
        <name>setEASType</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::setEASType</qualifiedname>
        <param>
          <type>int</type>
          <declname>numberOfEASParameters_</declname>
        </param>
        <briefdescription>
<para>Sets the EAS type for 2D elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfEASParameters_</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of EAS parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="505" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="505" bodyend="545"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/d33/a01274_1afc5adc55bc187c5d033a90cbae91ae44" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>ScalarType</type>
        <definition>ScalarType Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="549" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="549" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="de/d33/a01274_1afa32c429e6121e0573a0fedbe43d2f45" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="558" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="558" bodyend="597"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="de/d33/a01274_1a74c112866fd17cd75ab4897999c57355" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>enhancedStrainSize</declname>
            <defname>enhancedStrainSize</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;::calculateDAndLMatrix</definition>
        <argsstring>(const auto &amp;easFunction, const auto &amp;par, Eigen::Matrix&lt; double, enhancedStrainSize, enhancedStrainSize &gt; &amp;DMat, Eigen::MatrixXd &amp;LMat) const</argsstring>
        <name>calculateDAndLMatrix</name>
        <qualifiedname>Ikarus::EnhancedAssumedStrains::calculateDAndLMatrix</qualifiedname>
        <param>
          <type>const auto &amp;</type>
          <declname>easFunction</declname>
        </param>
        <param>
          <type>const auto &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; double, enhancedStrainSize, enhancedStrainSize &gt; &amp;</type>
          <declname>DMat</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>LMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="605" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="605" bodyend="629"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper class for using Enhanced Assumed Strains (EAS) with displacement based elements. </para>
    </briefdescription>
    <detaileddescription>
<para>This class extends a displacement-based element to support Enhanced Assumed Strains.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DisplacementBasedElement</parametername>
</parameternamelist>
<parameterdescription>
<para>The base displacement-based element type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DisplacementBasedElement</label>
      </node>
      <node id="1">
        <label>Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;</label>
        <link refid="de/d33/a01274"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DisplacementBasedElement</label>
      </node>
      <node id="1">
        <label>Ikarus::EnhancedAssumedStrains&lt; DisplacementBasedElement &gt;</label>
        <link refid="de/d33/a01274"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" line="337" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/enhancedassumedstrains.hh" bodystart="337" bodyend="630"/>
    <listofallmembers>
      <member refid="de/d33/a01274_1a22e25753bb3cf0c5b296c3af10c443b6" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateAt</name></member>
      <member refid="de/d33/a01274_1a74c112866fd17cd75ab4897999c57355" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateDAndLMatrix</name></member>
      <member refid="de/d33/a01274_1a7f2216c3b8f6b94145ae586324018376" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateMatrix</name></member>
      <member refid="de/d33/a01274_1aa455935bfd539dbd145450c9e8732bdc" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateScalar</name></member>
      <member refid="de/d33/a01274_1afc5adc55bc187c5d033a90cbae91ae44" prot="protected" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateScalarImpl</name></member>
      <member refid="de/d33/a01274_1a3a92d4669635a5ab22a10bc353111d95" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateVector</name></member>
      <member refid="de/d33/a01274_1afa32c429e6121e0573a0fedbe43d2f45" prot="protected" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>calculateVectorImpl</name></member>
      <member refid="de/d33/a01274_1ab30968323ba4b9bbe8db8d92ecdf8224" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>EAS2DVariantImpl</name></member>
      <member refid="de/d33/a01274_1ac2ab85da4af3a17f31400cca02b870e2" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>EAS3DVariantImpl</name></member>
      <member refid="de/d33/a01274_1ab8c3ff043b0808de14656d79ec56de5f" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>easVariant</name></member>
      <member refid="de/d33/a01274_1abcce6b657bac6b2de287c8e6222f95bd" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>easVariant_</name></member>
      <member refid="de/d33/a01274_1a1f09e03a1efdba3ff76ad0f37acc0abc" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>EnhancedAssumedStrains</name></member>
      <member refid="de/d33/a01274_1a5a888bacae06491a7e890c9424518f25" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>FERequirementType</name></member>
      <member refid="de/d33/a01274_1aa75e2ef6c92f084608e36d5aa6a1122e" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>getNumberOfEASParameters</name></member>
      <member refid="de/d33/a01274_1aee26978267fb07c5c013a33bbc85f380" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>GridView</name></member>
      <member refid="de/d33/a01274_1a27a311be4e36cbb8d68d96e6d9046afd" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>isDisplacementBased</name></member>
      <member refid="de/d33/a01274_1a823479c56e7a66f61a2932c54dc06452" prot="private" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>L</name></member>
      <member refid="de/d33/a01274_1a5699ce520159375f9737ec518130e50e" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>LocalView</name></member>
      <member refid="de/d33/a01274_1a5ed0cee3df4cbf8a9aed6a705dd8642e" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>ResultRequirementsType</name></member>
      <member refid="de/d33/a01274_1a3990ba9792f807ae9d0c2f5fd7fb7e85" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>setEASType</name></member>
      <member refid="de/d33/a01274_1a550c9fb8dcd8c64d21c9adaf4749c866" prot="public" virt="non-virtual"><scope>Ikarus::EnhancedAssumedStrains</scope><name>Traits</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
