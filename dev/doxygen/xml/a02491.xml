<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a02491" kind="file" language="C++">
    <compoundname>finiteelements/mechanics/linearelastic.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">optional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">dune/fufem/boundarypatch.hh</includes>
    <includes local="no">dune/geometry/quadraturerules.hh</includes>
    <includes local="no">dune/localfefunctions/expressions/linearStrainsExpr.hh</includes>
    <includes local="no">dune/localfefunctions/impl/standardLocalFunction.hh</includes>
    <includes local="no">dune/localfefunctions/manifolds/realTuple.hh</includes>
    <includes refid="a00119" local="no">ikarus/finiteelements/febase.hh</includes>
    <includes refid="a00131" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="a00122" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a00194" local="no">ikarus/finiteelements/mechanics/loads.hh</includes>
    <includes refid="a00140" local="no">ikarus/finiteelements/mechanics/materials.hh</includes>
    <includes refid="a00116" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includes refid="a00011" local="no">ikarus/utils/defaultfunctions.hh</includes>
    <includes refid="a00065" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includedby refid="a02494" local="no">linearelastic.hh</includedby>
    <includedby refid="a00266" local="no">registerelement.hh</includedby>
    <incdepgraph>
      <node id="10">
        <label>ikarus/finiteelements/febase.hh</label>
        <link refid="a00119"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="a00131"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00122"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00134"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="a00137"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>linearelastic.hh</label>
        <link refid="a02491"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ikarus/finiteelements/mechanics/loads.hh</label>
        <link refid="a00194"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/finiteelements/mechanics/loads/traction.hh</label>
        <link refid="a00143"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ikarus/finiteelements/mechanics/loads/volume.hh</label>
        <link refid="a00146"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>ikarus/finiteelements/mechanics/materials.hh</label>
        <link refid="a00140"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="a00161"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ikarus/finiteelements/mechanics/materials/linearelasticity.hh</label>
        <link refid="a00176"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ikarus/finiteelements/mechanics/materials/neohooke.hh</label>
        <link refid="a00158"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00170"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>svk.hh</label>
        <link refid="a00173"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>tags.hh</label>
        <link refid="a00164"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>ikarus/finiteelements/mechanics/materials/vanishingstress.hh</label>
        <link refid="a00167"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00116"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="a00242"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="a00248"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00245"/>
      </node>
      <node id="23">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00026"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00011"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>linearalgebrahelper.hh</label>
        <link refid="a00065"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00035"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00047"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="a00068"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="a00227"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="a00230"/>
      </node>
      <node id="18">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00050"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00008"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ikarus/utils/traversal.hh</label>
        <link refid="a00059"/>
      </node>
      <node id="16">
        <label>Eigen/Core</label>
      </node>
      <node id="28">
        <label>Eigen/Sparse</label>
      </node>
      <node id="61">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="44">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="24">
        <label>concepts</label>
      </node>
      <node id="15">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="54">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="31">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="22">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="42">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="5">
        <label>dune/fufem/boundarypatch.hh</label>
      </node>
      <node id="26">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="27">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="6">
        <label>dune/geometry/quadraturerules.hh</label>
      </node>
      <node id="43">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="7">
        <label>dune/localfefunctions/expressions/linearStrainsExpr.hh</label>
      </node>
      <node id="8">
        <label>dune/localfefunctions/impl/standardLocalFunction.hh</label>
      </node>
      <node id="9">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="66">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="59">
        <label>memory</label>
      </node>
      <node id="19">
        <label>numeric</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="41">
        <label>random</label>
      </node>
      <node id="20">
        <label>ranges</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="30">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="21">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="52">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="25">
        <label>utility</label>
      </node>
      <node id="60">
        <label>variant</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>linearelastic.hh</label>
        <link refid="a02491"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a02488"/>
      </node>
      <node id="2">
        <label>linearelastic.hh</label>
        <link refid="a02494"/>
      </node>
      <node id="5">
        <label>nonlinearelastic.hh</label>
        <link refid="a02500"/>
      </node>
      <node id="3">
        <label>registerelement.hh</label>
        <link refid="a00266"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01328" prot="public">Ikarus::LinearElastic</innerclass>
    <innernamespace refid="a00328">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the LinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DUNE_LOCALFEFUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;dune/fufem/boundarypatch.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;dune/geometry/quadraturerules.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;dune/localfefunctions/expressions/linearStrainsExpr.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;dune/localfefunctions/impl/standardLocalFunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;dune/localfefunctions/manifolds/realTuple.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00119" kindref="compound">ikarus/finiteelements/febase.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00131" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00122" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00194" kindref="compound">ikarus/finiteelements/mechanics/loads.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00140" kindref="compound">ikarus/finiteelements/mechanics/materials.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00116" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00011" kindref="compound">ikarus/utils/defaultfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="a00065" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00328" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BH,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FER<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useFlat<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="46" refid="a01328" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01328" kindref="compound">LinearElastic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01232" kindref="compound">FEBase</ref>&lt;BH,<sp/>useFlat,<sp/>FER,<sp/>useEigenRef&gt;,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01336" kindref="compound">Volume</ref>&lt;LinearElastic&lt;BH,<sp/>FER,<sp/>useEigenRef,<sp/>useFlat&gt;,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>FEBase&lt;BH,<sp/>useFlat,<sp/>FER,<sp/>useEigenRef&gt;::Traits&gt;,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01332" kindref="compound">Traction</ref>&lt;LinearElastic&lt;BH,<sp/>FER,<sp/>useEigenRef,<sp/>useFlat&gt;,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>FEBase&lt;BH,<sp/>useFlat,<sp/>FER,<sp/>useEigenRef&gt;::Traits&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="a01328_1a40eee3838220cccab2e15e7047991988" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01232" kindref="compound">Base</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01232" kindref="compound">FEBase&lt;BH, useFlat, FER, useEigenRef&gt;</ref>;</highlight></codeline>
<codeline lineno="54" refid="a01328_1a950078f863ac0e34a6633eaa6efb16e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a950078f863ac0e34a6633eaa6efb16e9" kindref="member">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01232_1ac5fdc9a8e9d4a7d670df89d397129588" kindref="member">Base::Traits</ref>;</highlight></codeline>
<codeline lineno="55" refid="a01328_1a660143a4c32e9768e75cbad2365c3f7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a660143a4c32e9768e75cbad2365c3f7b" kindref="member">BasisHandler</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::BasisHandler;</highlight></codeline>
<codeline lineno="56" refid="a01328_1a814b5f30cae83d0bf86cb814e1d1b087" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a814b5f30cae83d0bf86cb814e1d1b087" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::FlatBasis;</highlight></codeline>
<codeline lineno="57" refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::FERequirementType;</highlight></codeline>
<codeline lineno="58" refid="a01328_1a5522b3975f13520030ce71dd68ad9b84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a5522b3975f13520030ce71dd68ad9b84" kindref="member">LocalView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::LocalView;</highlight></codeline>
<codeline lineno="59" refid="a01328_1a8b5becbccef0dc42423cd76c27bef5b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a8b5becbccef0dc42423cd76c27bef5b8" kindref="member">Geometry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::Geometry;</highlight></codeline>
<codeline lineno="60" refid="a01328_1ad517cec2661544d1be2525a529f91432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1ad517cec2661544d1be2525a529f91432" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::GridView;</highlight></codeline>
<codeline lineno="61" refid="a01328_1a042a0043867c47d57faf6db8f5b96de0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a042a0043867c47d57faf6db8f5b96de0" kindref="member">Element</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::Element;</highlight></codeline>
<codeline lineno="62" refid="a01328_1a827cb2b8d4b745e07db3955c25c35f4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01336" kindref="compound">VolumeType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01336" kindref="compound">Volume&lt;LinearElastic, Traits&gt;</ref>;</highlight></codeline>
<codeline lineno="63" refid="a01328_1a1fc3d5fa49ff4f5c1e46c9f0844afc05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332" kindref="compound">TractionType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01332" kindref="compound">Traction&lt;LinearElastic, Traits&gt;</ref>;</highlight></codeline>
<codeline lineno="64" refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" kindref="member">myDim</ref><sp/>=<sp/>Traits::mydim;</highlight></codeline>
<codeline lineno="65" refid="a01328_1a91770d9f8e1c7c06007d91ac3999999e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01328_1a91770d9f8e1c7c06007d91ac3999999e" kindref="member">LocalBasisType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VolumeLoad<sp/>=<sp/>utils::LoadDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeumannBoundaryLoad<sp/>=<sp/>utils::LoadDefault&gt;</highlight></codeline>
<codeline lineno="81" refid="a01328_1a3089737b2164de05fb2604d55bce0e01" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01328_1a3089737b2164de05fb2604d55bce0e01" kindref="member">LinearElastic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a660143a4c32e9768e75cbad2365c3f7b" kindref="member">BasisHandler</ref>&amp;<sp/>basisHandler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element&amp;<sp/>element,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>emod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VolumeLoad<sp/>volumeLoad<sp/>=<sp/>{},<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/>neumannBoundary<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeumannBoundaryLoad<sp/>neumannBoundaryLoad<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="a01328_1a40eee3838220cccab2e15e7047991988" kindref="member">Base</ref>(basisHandler,<sp/>element),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01328_1a827cb2b8d4b745e07db3955c25c35f4b" kindref="member">VolumeType</ref>(volumeLoad),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01328_1a1fc3d5fa49ff4f5c1e46c9f0844afc05" kindref="member">TractionType</ref>(neumannBoundary,<sp/>neumannBoundaryLoad),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emod_{emod},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_{nu}<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>firstChild<sp/>=<sp/>this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>().tree().child(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/>=<sp/>firstChild.finiteElement();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>geo_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_shared&lt;const<sp/>Geometry&gt;(this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>().element().<ref refid="a01328_1a246ca86f533ad0ceadb983a4dbd4ae80" kindref="member">geometry</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfNodes_<sp/><sp/><sp/>=<sp/>fe.size();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>order_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>(fe.localBasis().order());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>localBasis_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::CachedLocalBasis(fe.localBasis());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>().element().impl().getQuadratureRule(order_);<sp/>})</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>().element().impl().isTrimmed())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_.bind(this-&gt;localView().element().impl().getQuadratureRule(order_),<sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>().element().type(),<sp/>order_),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>().element().type(),<sp/>order_),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="114" refid="a01328_1a6526cbcd08616598920cf2286ff041bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01328_1a6526cbcd08616598920cf2286ff041bf" kindref="member">displacementFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.getGlobalSolution(<ref refid="a00315_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">Ikarus::FESolutions::displacement</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/><sp/><sp/><sp/><sp/>=<sp/>Ikarus::FEHelper::localSolutionBlockVector&lt;Traits&gt;(d,<sp/>this-&gt;<ref refid="a01232_1a53a30773e643a5bc8709ae74a2ba68d3" kindref="member">localView</ref>(),<sp/>dx);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::StandardLocalFunction<sp/>uFunction(localBasis_,<sp/>disp,<sp/>geo_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uFunction;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="130" refid="a01328_1a950067ec358a96fdff38c38ac6ac6ca4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01328_1a950067ec358a96fdff38c38ac6ac6ca4" kindref="member">strainFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::linearStrains(<ref refid="a01328_1a6526cbcd08616598920cf2286ff041bf" kindref="member">displacementFunction</ref>(par,<sp/>dx));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="a01328_1a9b8a8b22100c74f236bc974262db042a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01328_1a9b8a8b22100c74f236bc974262db042a" kindref="member">materialTangent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" kindref="member">myDim</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00328_1a90678a80e6b2b4849072623df02dae58" kindref="member">planeStressLinearElasticMaterialTangent</ref>(emod_,<sp/>nu_);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" kindref="member">myDim</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00328_1ab859759a8309b785e7872d8360171030" kindref="member">linearElasticMaterialTangent3D</ref>(emod_,<sp/>nu_);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="a01328_1a33d2cf28926eaf2e46e3231d750b4e82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01328_1a33d2cf28926eaf2e46e3231d750b4e82" kindref="member">materialTangentFunction</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[&amp;]([[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gp)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01328_1a9b8a8b22100c74f236bc974262db042a" kindref="member">materialTangent</ref>();<sp/>};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="a01328_1a246ca86f533ad0ceadb983a4dbd4ae80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a8b5becbccef0dc42423cd76c27bef5b8" kindref="member">Geometry</ref>&amp;<sp/><ref refid="a01328_1a246ca86f533ad0ceadb983a4dbd4ae80" kindref="member">geometry</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*geo_;<sp/>}</highlight></codeline>
<codeline lineno="158" refid="a01328_1ad1604e983d8de31a5ca747c35bf509f5" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="a01328_1ad1604e983d8de31a5ca747c35bf509f5" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfNodes_;<sp/>}</highlight></codeline>
<codeline lineno="159" refid="a01328_1ad2da7f4caadbc6df50553d71900b3bb6" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01328_1ad2da7f4caadbc6df50553d71900b3bb6" kindref="member">order</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="a01328_1ababbfa85d0473cf7a7bd38b8f1351e1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01328_1ababbfa85d0473cf7a7bd38b8f1351e1d" kindref="member">calculateScalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateScalarImpl&lt;double&gt;(par);<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="a01328_1a7ca7b43c3fe2c59cf64ff7a818025d63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01328_1a7ca7b43c3fe2c59cf64ff7a818025d63" kindref="member">calculateVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;&gt;<sp/>force)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>calculateVectorImpl&lt;double&gt;(par,<sp/>force);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="a01328_1ab108d5374fab0ec824376ebf0ecb09f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01328_1ab108d5374fab0ec824376ebf0ecb09f5" kindref="member">calculateMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;&gt;<sp/>K)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01328_1a950067ec358a96fdff38c38ac6ac6ca4" kindref="member">strainFunction</ref>(par);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00345" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="a01328_1a9b8a8b22100c74f236bc974262db042a" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="a01232_1a986d3b0d39a10f702bddff51023d38ef" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numberOfNodes_;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopJ<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(j)),<sp/>on(<ref refid="a01232_1a986d3b0d39a10f702bddff51023d38ef" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K.template<sp/>block&lt;myDim,<sp/>myDim&gt;(i<sp/>*<sp/><ref refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" kindref="member">myDim</ref>,<sp/>j<sp/>*<sp/><ref refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" kindref="member">myDim</ref>)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>due<sp/>to<sp/>displacement-dependent<sp/>external<sp/>loads,<sp/>e.g.,<sp/>follower<sp/>loads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01336_1a50c6859b6c9a40fbb8ac9cc77d8087db" kindref="member">VolumeType::calculateMatrix</ref>(par,<sp/>K);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01332_1aa4336b55618b836ca7b2b3aebf4242bf" kindref="member">TractionType::calculateMatrix</ref>(par,<sp/>K);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RT&gt;</highlight></codeline>
<codeline lineno="213" refid="a01328_1a26a1e73d069038a8358bd64ed58476dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">consteval</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01328_1a26a1e73d069038a8358bd64ed58476dc" kindref="member">canProvideResultType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSameResultType&lt;RT,<sp/>ResultType::linearStress&gt;;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RT&gt;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(canProvideResultType&lt;RT&gt;())</highlight></codeline>
<codeline lineno="228" refid="a01328_1af0a9ba328c012192d3e7a0f0339ad744" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01328_1af0a9ba328c012192d3e7a0f0339ad744" kindref="member">calculateAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01520" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">RTWrapper<sp/>=<sp/><ref refid="a01276" kindref="compound">ResultWrapper&lt;RT&lt;typename Traits::ctype, myDim, Traits::worlddim&gt;</ref>,<sp/><ref refid="a00328_1acfb09bb7db104db62d3d1d2dc3e009b2a57dea6f5039281b7fee517fc43bf3110" kindref="member">ResultShape::Vector</ref>&gt;;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isSameResultType&lt;RT,<sp/>ResultType::linearStress&gt;)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01328_1a950067ec358a96fdff38c38ac6ac6ca4" kindref="member">strainFunction</ref>(req);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/>=<sp/><ref refid="a01328_1a9b8a8b22100c74f236bc974262db042a" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epsVoigt<sp/><sp/>=<sp/>eps.evaluate(local,<sp/>Dune::on(Dune::DerivativeDirections::gridElement));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RTWrapper{(C<sp/>*<sp/>epsVoigt).eval()};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_unreachable();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;const<sp/>Geometry&gt;<sp/>geo_;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt;&gt;<sp/>localBasis_;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>emod_;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu_;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfNodes_{0};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order_{};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="250" refid="a01328_1a2bd57b0020bc5144908df7d582533cc7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01328_1a2bd57b0020bc5144908df7d582533cc7" kindref="member">calculateScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>ScalarType<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01328_1a6526cbcd08616598920cf2286ff041bf" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01328_1a950067ec358a96fdff38c38ac6ac6ca4" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="a00315_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">Ikarus::FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00345" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="a01328_1a9b8a8b22100c74f236bc974262db042a" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>ScalarType<sp/>energy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/>=<sp/>eps.evaluate(gpIndex,<sp/>on(<ref refid="a01232_1a986d3b0d39a10f702bddff51023d38ef" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>(0.5<sp/>*<sp/>EVoigt.dot(C<sp/>*<sp/>EVoigt))<sp/>*<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/><ref refid="a01336_1a7ec1326b708d8c08fee05ca7b601f997" kindref="member">VolumeType::calculateScalarImpl</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>or<sp/>surface<sp/>loads,<sp/>i.e.,<sp/>neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/><ref refid="a01332_1a2576d38cb79bb0b5bf59f433fa7c1633" kindref="member">TractionType::calculateScalarImpl</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="276" refid="a01328_1af75f290aad4b52072053aa027d4b2f0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01328_1af75f290aad4b52072053aa027d4b2f0d" kindref="member">calculateVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01328_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ScalarType&gt;<sp/>force,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01328_1a950067ec358a96fdff38c38ac6ac6ca4" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00345" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="a01328_1a9b8a8b22100c74f236bc974262db042a" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stresses<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(C<sp/>*<sp/>eps.evaluate(gpIndex,<sp/>on(<ref refid="a01232_1a986d3b0d39a10f702bddff51023d38ef" kindref="member">gridElement</ref>))).eval();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="a01232_1a986d3b0d39a10f702bddff51023d38ef" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;myDim&gt;(<ref refid="a01328_1abdafebbb8089d2c0a9ec5ff9ec30e87e" kindref="member">myDim</ref><sp/>*<sp/>i)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>stresses<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01336_1a9b91a057a51ab4487656d8bd94fdd234" kindref="member">VolumeType::calculateVectorImpl</ref>(par,<sp/>force,<sp/>dx);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces,<sp/>boundary<sp/>forces,<sp/>i.e.,<sp/>at<sp/>the<sp/>Neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01332_1aabcfd5d855e2230fe90abb12a1ba8d2b" kindref="member">TractionType::calculateVectorImpl</ref>(par,<sp/>force,<sp/>dx);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>LinearElastic<sp/>depends<sp/>on<sp/>dune-localfefunctions,<sp/>which<sp/>is<sp/>not<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh"/>
  </compounddef>
</doxygen>
