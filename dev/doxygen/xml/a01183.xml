<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01183" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::DenseFlatAssembler</compoundname>
    <basecompoundref refid="a01175" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</basecompoundref>
    <includes refid="a00188" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEC</type>
      </param>
      <param>
        <type>typename DV</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01183_1a54962e56b865ac1c9065c42d96fb6780" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEC &gt;</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEC&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="387" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01183_1aa2e4d50fb9ac8b9d9922d98e9bcaf81b" prot="public" static="no">
        <type><ref refid="a01175" kindref="compound">VectorFlatAssembler</ref>&lt; FEC, DV &gt;</type>
        <definition>using Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::Base =  VectorFlatAssembler&lt;FEC, DV&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::Base</qualifiedname>
        <briefdescription>
<para>Type alias for the base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="388" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01183_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" static="no">
        <type>typename DV::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::Basis =  typename DV::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="390" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01183_1abf6599ec65ab1574a3282a553584f9e9" prot="public" static="no">
        <type>DV</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::DirichletValuesType =  DV</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="391" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01183_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" static="no">
        <type>FEC</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainer =  FEC</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="392" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01183_1a69ef7a0291ed086199b2f5b4b1173bfc" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="393" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01183_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="394" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01167_1acee7beef45351811911847086414709e" prot="public" static="no">
        <type>typename Basis::GridView</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="40" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01167_1ad65c9d93766e445ec688411634e9bce6" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;, const <ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref>, <ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="42" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01183_1a0022585432c65ff80b9c28c9bca85921" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matRaw_</definition>
        <argsstring></argsstring>
        <name>matRaw_</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matRaw_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Raw dense matrix for assembly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="441" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01183_1a762b412ccf930a31926b67d1257101af" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::mat_</definition>
        <argsstring></argsstring>
        <name>mat_</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::mat_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Dense matrix quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="442" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01183_1ae97ca8d69633081e2ee4cf13dcbfb675" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::matRed_</definition>
        <argsstring></argsstring>
        <name>matRed_</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::matRed_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Reduced dense matrix quantity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="443" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="443" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01183_1ad225386e9ac269916f38107030c5508d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::DenseFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues)</argsstring>
        <name>DenseFlatAssembler</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::DenseFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="a01167_1abf6599ec65ab1574a3282a553584f9e9" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues</declname>
        </param>
        <briefdescription>
<para>&lt; Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="a01183" kindref="compound">DenseFlatAssembler</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirichletValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="402" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="402" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="a01183_1a1b25b3be5126355ae0a06b08a204ffc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::MatrixXd &amp;</type>
        <definition>const Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::getRawMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getRawMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the raw dense matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="411" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="411" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="a01183_1a3baaec4dae68ca424102650fd660871b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::MatrixXd &amp;</type>
        <definition>const Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::getMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom rows and columns, and a one is written on the diagonal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the modified dense matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="422" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="a01183_1a58efbb96e88836e88b8352d1bd605e0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::MatrixXd &amp;</type>
        <definition>const Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;::getReducedMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrix</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getReducedMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. The size of the matrix has the size of the free degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the reduced dense matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="431" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="431" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="a01175_1a15da22b282305962bc6498a1451694de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="226" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="a01175_1a027ac8d2135f675df889fdf80a678081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="237" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="a01175_1a51fc1c4a8302dd955bd27dfa6e81bc6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. This vector has a reduced size by the number of fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated reduced vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="246" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="a01171_1a0bf594865140bd900a6f31807dfc6f7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEC, DV &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="165" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="69" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="75" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; B, FEC &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="84" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1aa8da4086d468797668b6d551129e96dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="90" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="98" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="106" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="114" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="114" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01183_1a8aef416cff465be1a8de850a8d78d3d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::assembleRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::MatrixXd &amp;assemblyMat)</argsstring>
        <name>assembleRawMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::assembleRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="436" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="255" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="a01183_1ad47212032e8ce2f60538ebc31485af5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::getRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="437" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="a01183_1aafed206ceb742e0b5fe18bf73d5834d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::getMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="438" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="283" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="a01183_1ad55c76161e2f901d4ea5da6e900c3c2c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd &amp;</type>
        <definition>Eigen::MatrixXd &amp; Ikarus::DenseFlatAssembler&lt; B, FEC &gt;::getReducedMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrixImpl</name>
        <qualifiedname>Ikarus::DenseFlatAssembler::getReducedMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="439" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="298" bodyend="325"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01183" kindref="compound">DenseFlatAssembler</ref> assembles matrix quantities using a flat basis Indexing strategy. The matrix is stored in a dense matrix format. This format is exploited during the assembly process. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEC</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DV</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Requires <ref refid="a01620" kindref="compound">Ikarus::Concepts::FlatIndexBasis&lt;BasisEmbedded&gt;</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01183"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01167"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01171"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01175"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01183"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01167"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01171"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01175"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="384" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="385" bodyend="444"/>
    <listofallmembers>
      <member refid="a01183_1a8aef416cff465be1a8de850a8d78d3d0" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>assembleRawMatrixImpl</name></member>
      <member refid="a01183_1aa2e4d50fb9ac8b9d9922d98e9bcaf81b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>Base</name></member>
      <member refid="a01183_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>Basis</name></member>
      <member refid="a01167_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="a01167_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="a01183_1ad225386e9ac269916f38107030c5508d" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>DenseFlatAssembler</name></member>
      <member refid="a01183_1abf6599ec65ab1574a3282a553584f9e9" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="a01167_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="a01183_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="a01183_1a54962e56b865ac1c9065c42d96fb6780" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="a01167_1ad65c9d93766e445ec688411634e9bce6" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="a01183_1a69ef7a0291ed086199b2f5b4b1173bfc" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="a01167_1aa8da4086d468797668b6d551129e96dd" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="a01167_1a09b56d7e0fd2161b781450e89a8a32d6" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="a01183_1a3baaec4dae68ca424102650fd660871b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getMatrix</name></member>
      <member refid="a01183_1aafed206ceb742e0b5fe18bf73d5834d9" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getMatrixImpl</name></member>
      <member refid="a01183_1a1b25b3be5126355ae0a06b08a204ffc6" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawMatrix</name></member>
      <member refid="a01183_1ad47212032e8ce2f60538ebc31485af5d" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawMatrixImpl</name></member>
      <member refid="a01175_1a15da22b282305962bc6498a1451694de" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="a01183_1a58efbb96e88836e88b8352d1bd605e0b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedMatrix</name></member>
      <member refid="a01183_1ad55c76161e2f901d4ea5da6e900c3c2c" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedMatrixImpl</name></member>
      <member refid="a01175_1a51fc1c4a8302dd955bd27dfa6e81bc6f" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="a01171_1a0bf594865140bd900a6f31807dfc6f7e" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getScalar</name></member>
      <member refid="a01175_1a027ac8d2135f675df889fdf80a678081" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>getVector</name></member>
      <member refid="a01183_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="a01167_1acee7beef45351811911847086414709e" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>GridView</name></member>
      <member refid="a01167_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="a01183_1a762b412ccf930a31926b67d1257101af" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>mat_</name></member>
      <member refid="a01183_1a0022585432c65ff80b9c28c9bca85921" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matRaw_</name></member>
      <member refid="a01183_1ae97ca8d69633081e2ee4cf13dcbfb675" prot="private" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>matRed_</name></member>
      <member refid="a01167_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="a01171_1aea70457453f4efbf67bf9541c43afff2" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="a01167_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>size</name></member>
      <member refid="a01175_1ae1d7d3cba6d1c1ab4373fff67e1a300c" prot="public" virt="non-virtual"><scope>Ikarus::DenseFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
