<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00167" kind="file" language="C++">
    <compoundname>resultfunction.hh</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">dune/vtk/vtkwriter.hh</includes>
    <includes refid="a00236" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a00164" local="no">ikarus/io/resultevaluators.hh</includes>
    <includes refid="a00026" local="no">ikarus/utils/eigendunetransformations.hh</includes>
    <incdepgraph>
      <node id="5">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00236"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ikarus/io/resultevaluators.hh</label>
        <link refid="a00164"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>resultfunction.hh</label>
        <link refid="a00167"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ikarus/utils/eigendunetransformations.hh</label>
        <link refid="a00026"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00032"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Eigen/Core</label>
      </node>
      <node id="16">
        <label>assert.h</label>
      </node>
      <node id="17">
        <label>dune/common/diagonalmatrix.hh</label>
      </node>
      <node id="10">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="18">
        <label>dune/common/fmatrix.hh</label>
      </node>
      <node id="19">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="14">
        <label>dune/common/math.hh</label>
      </node>
      <node id="20">
        <label>dune/istl/scaledidmatrix.hh</label>
      </node>
      <node id="4">
        <label>dune/vtk/vtkwriter.hh</label>
      </node>
      <node id="6">
        <label>iosfwd</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="8">
        <label>set</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01386" prot="public">Ikarus::ResultFunction</innerclass>
    <innernamespace refid="a00325">Ikarus</innernamespace>
    <briefdescription>
<para><ref refid="a00325" kindref="compound">Ikarus</ref> Result Evaluators for Stress Analysis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/vtk/vtkwriter.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00236" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00164" kindref="compound">ikarus/io/resultevaluators.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00026" kindref="compound">ikarus/utils/eigendunetransformations.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00325" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DefaultUserFunction</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElementType_,<sp/>ResultType<sp/>resType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UserFunction<sp/>=<sp/>Impl::DefaultUserFunction&gt;</highlight></codeline>
<codeline lineno="47" refid="a01386" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01386" kindref="compound">ResultFunction</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Dune::VTKFunction&lt;typename<sp/>ElementType_::GridView&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="a01386_1ab767a2a99f8a7a4864d7e2375e147d3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01386_1ab767a2a99f8a7a4864d7e2375e147d3f" kindref="member">ElementType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ElementType_;</highlight></codeline>
<codeline lineno="51" refid="a01386_1a1376ce8ed894daf97cf33d9ba47a3080" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01386_1a1376ce8ed894daf97cf33d9ba47a3080" kindref="member">FERequirementType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElementType::FERequirementType;</highlight></codeline>
<codeline lineno="52" refid="a01386_1ad3bf17db4685dd6163c2d44aadbaa007" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01386_1ad3bf17db4685dd6163c2d44aadbaa007" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElementType::GridView;</highlight></codeline>
<codeline lineno="53" refid="a01386_1afe05553bbd7e7f98f81e6823bea11b53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01386_1afe05553bbd7e7f98f81e6823bea11b53" kindref="member">ctype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GridView::ctype;</highlight></codeline>
<codeline lineno="54" refid="a01386_1ac4059cf43d314738236f596e8ca52e95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01386_1ac4059cf43d314738236f596e8ca52e95" kindref="member">griddim</ref><sp/>=<sp/>GridView::dimension;</highlight></codeline>
<codeline lineno="55" refid="a01386_1a9d4a16551fbcc6ea2c28422c8940de8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01386_1a9d4a16551fbcc6ea2c28422c8940de8c" kindref="member">Entity</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GridView::template<sp/>Codim&lt;0&gt;::Entity;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="a01386_1a65d6c379aff40e196b8bf71b3aa1a9f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01386_1a65d6c379aff40e196b8bf71b3aa1a9f1" kindref="member">evaluate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01386_1a9d4a16551fbcc6ea2c28422c8940de8c" kindref="member">Entity</ref>&amp;<sp/>e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01370" kindref="compound">Dune::FieldVector&lt;ctype, griddim&gt;</ref>&amp;<sp/>local)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>gridView.indexSet().index(e);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateComponent(index,<sp/>local,<sp/>comp);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="a01386_1aaeb8d5d82f871924ba565861155f3014" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01386_1aaeb8d5d82f871924ba565861155f3014" kindref="member">ncomps</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01370" kindref="compound">Dune::FieldVector&lt;ctype, griddim&gt;</ref><sp/>val(0.0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>fes_-&gt;at(0).template<sp/>calculateAt&lt;resType&gt;(feRequirements_,<sp/>val);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sigma.rows()<sp/>*<sp/>sigma.cols());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userFunction_.ncomps();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="a01386_1a0c2f6fd71f2eabf8963f690e17e287c5" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01386_1a0c2f6fd71f2eabf8963f690e17e287c5" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00325_1a0853622412d4cedc078b81ba454eb250" kindref="member">toString</ref>(resType);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userFunction_.name();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="a01386_1a1697f1e77287d97449f086e98064dd7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01386_1a1697f1e77287d97449f086e98064dd7e" kindref="member">ResultFunction</ref>(std::vector&lt;ElementType&gt;*<sp/>fes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01386_1a1376ce8ed894daf97cf33d9ba47a3080" kindref="member">FERequirementType</ref>&amp;<sp/>req)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>gridView{fes-&gt;at(0).localView().globalBasis().gridView()},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feRequirements_{req},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fes_{fes},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userFunction_{UserFunction{}}<sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>evaluateComponent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eleID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01370" kindref="compound">Dune::FieldVector&lt;ctype, griddim&gt;</ref>&amp;<sp/>local,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>fes_-&gt;at(eleID).template<sp/>calculateAt&lt;resType&gt;(feRequirements_,<sp/>local);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userFunction_(result,<sp/>comp);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result(comp);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="a01386_1ad3bf17db4685dd6163c2d44aadbaa007" kindref="member">GridView</ref><sp/>gridView;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="a01386_1a1376ce8ed894daf97cf33d9ba47a3080" kindref="member">FERequirementType</ref><sp/>feRequirements_;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::vector&lt;ElementType&gt;*<sp/>fes_;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>[[no_unique_address]]<sp/>std::string<sp/>name_{};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>UserFunction<sp/>userFunction_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh"/>
  </compounddef>
</doxygen>
