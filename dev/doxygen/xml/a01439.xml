<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01439" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::TrustRegion</compoundname>
    <basecompoundref refid="a01567" prot="public" virt="non-virtual">Ikarus::IObservable&lt; NonLinearSolverMessages &gt;</basecompoundref>
    <includes refid="a00149" local="no">ikarus/solver/nonlinearsolver/trustregion.hh</includes>
    <templateparamlist>
      <param>
        <type>typename NLO</type>
      </param>
      <param>
        <type><ref refid="a00325_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref></type>
        <declname>preConditioner</declname>
        <defname>preConditioner</defname>
        <defval><ref refid="a00325_1ace28d4868cfc647491f7938f04ef6c66a7a24b184ba388b8e327feb98dbe168ff" kindref="member">PreConditioner::IncompleteCholesky</ref></defval>
      </param>
      <param>
        <type>typename UF</type>
        <defval><ref refid="a01479" kindref="compound">utils::UpdateDefault</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01439_1a44fa96b7ca63e50d8ed3707b4129369b" prot="public" static="no">
        <type>typename NLO::template ParameterValue&lt; 0 &gt;</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::ValueType =  typename NLO::template ParameterValue&lt;0&gt;</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>Ikarus::TrustRegion::ValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the parameter vector of the nonlinear operator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="125" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01439_1a1071054a0b75f9fbe27832ea672792b0" prot="public" static="no">
        <type>typename NLO::DerivativeType</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::CorrectionType =  typename NLO::DerivativeType</definition>
        <argsstring></argsstring>
        <name>CorrectionType</name>
        <qualifiedname>Ikarus::TrustRegion::CorrectionType</qualifiedname>
        <briefdescription>
<para>Type of the correction of x += deltaX. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="127" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01439_1a7f187a825b0a65e7d9ab1c21578da1cf" prot="public" static="no">
        <type>UF</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::UpdateFunction =  UF</definition>
        <argsstring></argsstring>
        <name>UpdateFunction</name>
        <qualifiedname>Ikarus::TrustRegion::UpdateFunction</qualifiedname>
        <briefdescription>
<para>Type of the update function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="128" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01439_1a7334271a9133e2503f142decf6ecebb7" prot="public" static="no">
        <type>NLO</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::NonLinearOperator =  NLO</definition>
        <argsstring></argsstring>
        <name>NonLinearOperator</name>
        <qualifiedname>Ikarus::TrustRegion::NonLinearOperator</qualifiedname>
        <briefdescription>
<para>Type of the non-linear operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="130" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01439_1a34bb35f72b19375a57329d3fec82515c" prot="public" static="no">
        <type>std::remove_cvref_t&lt; typename NLO::template FunctionReturnType&lt; 0 &gt; &gt;</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::ScalarType =  std::remove_cvref_t&lt;typename NLO::template FunctionReturnType&lt;0&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Ikarus::TrustRegion::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the scalar cost </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="132" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01439_1a631486c0b90c8a1a0bfc9d80694f6a4f" prot="public" static="no">
        <type>std::remove_cvref_t&lt; typename NLO::template FunctionReturnType&lt; 2 &gt; &gt;</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::MatrixType =  std::remove_cvref_t&lt;typename NLO::template FunctionReturnType&lt;2&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MatrixType</name>
        <qualifiedname>Ikarus::TrustRegion::MatrixType</qualifiedname>
        <briefdescription>
<para>Type of the Hessian. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="135" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="a01439_1a9d02d3c87e842a02fb9ba3827b05e2f6" prot="private" static="no">
        <type>std::conditional_t&lt; preConditioner==<ref refid="a00325_1ace28d4868cfc647491f7938f04ef6c66a7a93111b975ec3c3824eab230f3ec608" kindref="member">PreConditioner::IdentityPreconditioner</ref>, Eigen::IdentityPreconditioner, std::conditional_t&lt; preConditioner==<ref refid="a00325_1ace28d4868cfc647491f7938f04ef6c66a3c6b5404db3b7bf45a0302f376a53afc" kindref="member">PreConditioner::DiagonalPreconditioner</ref>, typename Eigen::DiagonalPreconditioner&lt; <ref refid="a01439_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref> &gt;, typename Eigen::IncompleteCholesky&lt; <ref refid="a01439_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref> &gt; &gt; &gt;</type>
        <definition>using Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::PreConditionerType =  std::conditional_t&lt;preConditioner == PreConditioner::IdentityPreconditioner, Eigen::IdentityPreconditioner, std::conditional_t&lt;preConditioner == PreConditioner::DiagonalPreconditioner, typename Eigen::DiagonalPreconditioner&lt;ScalarType&gt;, typename Eigen::IncompleteCholesky&lt;ScalarType&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>PreConditionerType</name>
        <qualifiedname>Ikarus::TrustRegion::PreConditionerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="467" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="471" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01439_1a75c8fd8fd873133536c086ee233615b8" prot="private" static="no" mutable="no">
        <type>NLO</type>
        <definition>NLO Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::nonLinearOperator_</definition>
        <argsstring></argsstring>
        <name>nonLinearOperator_</name>
        <qualifiedname>Ikarus::TrustRegion::nonLinearOperator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="451" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a8e17d129b13ac3c99fcb69179992e709" prot="private" static="no" mutable="no">
        <type><ref refid="a01439_1a7f187a825b0a65e7d9ab1c21578da1cf" kindref="member">UpdateFunction</ref></type>
        <definition>UpdateFunction Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::updateFunction_</definition>
        <argsstring></argsstring>
        <name>updateFunction_</name>
        <qualifiedname>Ikarus::TrustRegion::updateFunction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="452" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a1c31f9eaad7a7053ca3c7cf106814c12" prot="private" static="no" mutable="no">
        <type>NLO::template ParameterValue&lt; 0 &gt;</type>
        <definition>NLO::template ParameterValue&lt;0&gt; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::xOld_</definition>
        <argsstring></argsstring>
        <name>xOld_</name>
        <qualifiedname>Ikarus::TrustRegion::xOld_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="453" column="41" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a815b413d4d51a3343828e6c43339d930" prot="private" static="no" mutable="no">
        <type><ref refid="a01439_1a1071054a0b75f9fbe27832ea672792b0" kindref="member">CorrectionType</ref></type>
        <definition>CorrectionType Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::eta_</definition>
        <argsstring></argsstring>
        <name>eta_</name>
        <qualifiedname>Ikarus::TrustRegion::eta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="454" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1ad2c36fbe5c66ee463ba9cc6ec48912b1" prot="private" static="no" mutable="no">
        <type><ref refid="a01439_1a1071054a0b75f9fbe27832ea672792b0" kindref="member">CorrectionType</ref></type>
        <definition>CorrectionType Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::Heta_</definition>
        <argsstring></argsstring>
        <name>Heta_</name>
        <qualifiedname>Ikarus::TrustRegion::Heta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="455" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a7bdc662fa4941a557f28a566b0810688" prot="private" static="no" mutable="no">
        <type><ref refid="a01427" kindref="compound">TrustRegionSettings</ref></type>
        <definition>TrustRegionSettings Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <qualifiedname>Ikarus::TrustRegion::options_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="456" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1af55faee2493e9705bd0db4cb8956ee8d" prot="private" static="no" mutable="no">
        <type><ref refid="a01431" kindref="compound">AlgoInfo</ref></type>
        <definition>AlgoInfo Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::info_</definition>
        <argsstring></argsstring>
        <name>info_</name>
        <qualifiedname>Ikarus::TrustRegion::info_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="457" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a6b82651461328df396eba5b54996b923" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::choleskyInitialShift_</definition>
        <argsstring></argsstring>
        <name>choleskyInitialShift_</name>
        <qualifiedname>Ikarus::TrustRegion::choleskyInitialShift_</qualifiedname>
        <initializer>= 1e-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="458" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1ab9d0147aeb3c494f184e84750fb585a5" prot="private" static="no" mutable="no">
        <type><ref refid="a01383" kindref="compound">Eigen::TCGInfo</ref>&lt; double &gt;</type>
        <definition>Eigen::TCGInfo&lt;double&gt; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::innerInfo_</definition>
        <argsstring></argsstring>
        <name>innerInfo_</name>
        <qualifiedname>Ikarus::TrustRegion::innerInfo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="459" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a5c945d49f60fb85e40713cdb0cdfd03d" prot="private" static="no" mutable="no">
        <type><ref refid="a01435" kindref="compound">Stats</ref></type>
        <definition>Stats Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::stats_</definition>
        <argsstring></argsstring>
        <name>stats_</name>
        <qualifiedname>Ikarus::TrustRegion::stats_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="460" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a7a2131eb019ac9a2bed3ffaa40afb361" prot="private" static="no" mutable="no">
        <type>std::array&lt; std::string, 6 &gt;</type>
        <definition>std::array&lt;std::string, 6&gt; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::tcg_stop_reason_</definition>
        <argsstring></argsstring>
        <name>tcg_stop_reason_</name>
        <qualifiedname>Ikarus::TrustRegion::tcg_stop_reason_</qualifiedname>
        <initializer>{
      {&quot;negative curvature&quot;, &quot;exceeded trust region&quot;, &quot;reached target residual-kappa (linear)&quot;,
       &quot;reached target residual-theta (superlinear)&quot;, &quot;maximum inner iterations&quot;, &quot;model increased&quot;}
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="462" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01439_1a2eed7c771913c7cc202bc9a4dbabe711" prot="private" static="no" mutable="no">
        <type><ref refid="a01387" kindref="compound">Eigen::TruncatedConjugateGradient</ref>&lt; <ref refid="a01439_1a631486c0b90c8a1a0bfc9d80694f6a4f" kindref="member">MatrixType</ref>, Eigen::Lower|Eigen::Upper, PreConditionerType &gt;</type>
        <definition>Eigen::TruncatedConjugateGradient&lt;MatrixType, Eigen::Lower | Eigen::Upper, PreConditionerType&gt; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::truncatedConjugateGradient_</definition>
        <argsstring></argsstring>
        <name>truncatedConjugateGradient_</name>
        <qualifiedname>Ikarus::TrustRegion::truncatedConjugateGradient_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="473" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="473" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="a01439_1aab235ae4494c2abf7780b4ce2e27153a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <qualifiedname>Ikarus::TrustRegion::eps_</qualifiedname>
        <initializer>= 0.0001220703125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="461" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="461" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01439_1aca59267eff2ad5358225cc5eafbe21d0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::TrustRegion</definition>
        <argsstring>(const NLO &amp;nonLinearOperator, UF updateFunction={})</argsstring>
        <name>TrustRegion</name>
        <qualifiedname>Ikarus::TrustRegion::TrustRegion</qualifiedname>
        <param>
          <type>const NLO &amp;</type>
          <declname>nonLinearOperator</declname>
        </param>
        <param>
          <type>UF</type>
          <declname>updateFunction</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="a01439" kindref="compound">TrustRegion</ref> solver instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nonLinearOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>Nonlinear operator to solve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Update function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="142" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="142" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1a504a0eb127e772c205775a6545fbdb98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::setup</definition>
        <argsstring>(const TrustRegionSettings &amp;settings)</argsstring>
        <name>setup</name>
        <qualifiedname>Ikarus::TrustRegion::setup</qualifiedname>
        <param>
          <type>const <ref refid="a01427" kindref="compound">TrustRegionSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Sets up the <ref refid="a01439" kindref="compound">TrustRegion</ref> solver with the provided settings and checks feasibility. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_settings</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a01427" kindref="compound">TrustRegionSettings</ref> containing the solver configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="154" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1af244b67329c3aab4aa81f37c9eabae8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SolutionType</type>
            <defval>NoPredictor</defval>
          </param>
        </templateparamlist>
        <type><ref refid="a01423" kindref="compound">NonLinearSolverInformation</ref></type>
        <definition>NonLinearSolverInformation Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::solve</definition>
        <argsstring>(const SolutionType &amp;dxPredictor=NoPredictor{})</argsstring>
        <name>solve</name>
        <qualifiedname>Ikarus::TrustRegion::solve</qualifiedname>
        <param>
          <type>const SolutionType &amp;</type>
          <declname>dxPredictor</declname>
          <defval>NoPredictor{}</defval>
        </param>
    <requiresclause>std::is_same_v&lt;SolutionType, NoPredictor&gt; || std::is_convertible_v&lt;SolutionType, CorrectionType&gt;    </requiresclause>
        <briefdescription>
<para>Solves the nonlinear optimization problem using the <ref refid="a01439" kindref="compound">TrustRegion</ref> algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SolutionType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the solution predictor (default is NoPredictor). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dxPredictor</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution predictor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01423" kindref="compound">NonLinearSolverInformation</ref> containing information about the solver result. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="175" column="30" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="175" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1a58d156c1eb6c5ac3abee28d14beadc2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::nonLinearOperator</definition>
        <argsstring>()</argsstring>
        <name>nonLinearOperator</name>
        <qualifiedname>Ikarus::TrustRegion::nonLinearOperator</qualifiedname>
        <briefdescription>
<para>Access the nonlinear operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the nonlinear operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="362" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1ad67c98f02c195b788f78a229e1898006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; MT &gt;::subscribe</definition>
        <argsstring>(NonLinearSolverMessages message, std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>subscribe</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::subscribe</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="a01563" kindref="compound">IObserver</ref>&lt; <ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Subscribe an observer to receive notifications for a specific message type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to subscribe to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be subscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="141" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a13bd8d73b485186680f640786e2682e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::subscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::subscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="a01563" kindref="compound">IObserver</ref>&lt; <ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Subscribe an observer to receive notifications for all message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be subscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="146" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a026462a1a050728e37bc24e33d2edd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::subscribeAll</definition>
        <argsstring>(std::initializer_list&lt; std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; &gt; observers)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::subscribeAll</qualifiedname>
        <param>
          <type>std::initializer_list&lt; std::shared_ptr&lt; <ref refid="a01563" kindref="compound">IObserver</ref>&lt; <ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt; &gt;</type>
          <declname>observers</declname>
        </param>
        <briefdescription>
<para>Subscribe multiple observers to receive notifications for all message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observers</parametername>
</parameternamelist>
<parameterdescription>
<para>List of observers to be subscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="151" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a3eb718b8fa1ecc373371a6751a316b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; MT &gt;::unSubscribe</definition>
        <argsstring>(NonLinearSolverMessages message, std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>unSubscribe</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::unSubscribe</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="a01563" kindref="compound">IObserver</ref>&lt; <ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Unsubscribe an observer from receiving notifications for a specific message type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to unsubscribe from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be unsubscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="157" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a378a520833df0d6e27dbb35b621c838d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; MT &gt;::unSubscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; NonLinearSolverMessages &gt; &gt; observer)</argsstring>
        <name>unSubscribeAll</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::unSubscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="a01563" kindref="compound">IObserver</ref>&lt; <ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref> &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Unsubscribe an observer from receiving notifications for all message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>The observer to be unsubscribed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="162" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a4bce3750aa7d52aff9baf122a54e16b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="167" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1ac035ba934c33e090c4a45128ac13f190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, ScalarType val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="a01439_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with a floating-point value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the floating-point value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating-point value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="176" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="183" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a2f93322aa7327069dd4469983933bd16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, const std::string &amp;val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="190" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1ae0c6cec757e540f22b65fce1f782e380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, double val2)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an integer and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="198" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a72e3156874ce81a1c7548b9f74db522c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an integer value and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="206" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1ac72b261cd2af7f59e98f1504814bc785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(NonLinearSolverMessages message, Eigen::VectorX&lt; ScalarType &gt; vec)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type><ref refid="a00319_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>Eigen::VectorX&lt; <ref refid="a01439_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref> &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Notify observers about a specific message type with an Eigen::VectorX. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements in the Eigen::VectorX. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to notify about. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorX to be sent with the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="215" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a19047649c66f704c2ba2f1276c1a0e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="257" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1a03d4668b7111180f0427e8382359f3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message, ScalarType val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="a01439_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="265" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1ad758bd6f15e8228a3439f52ee2ad6aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message, int val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="272" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1acf19e220bc71c046619dd21b3f50e8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message, const std::string &amp;val)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="279" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1aae4ef907815822352e07fe25cefa8980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message, int val1, double val2)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="286" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="286" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1ae12cb2deb2aa20f0cbc3d78b9a562eb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message, int val1, const std::string &amp;val2)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="293" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="293" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="a01567_1aa5a60c5b81bb92de527c49ea8fce147d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObservable&lt; NonLinearSolverMessages  &gt;::notify</definition>
        <argsstring>(MT message, Eigen::VectorX&lt; ScalarType &gt; vec)</argsstring>
        <name>notify</name>
        <qualifiedname>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;::notify</qualifiedname>
        <param>
          <type>MT</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Eigen::VectorX&lt; <ref refid="a01439_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref> &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="301" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="301" bodyend="305"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01439_1a984bd7460ee6e69a4d47cc145e9eb52f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::logState</definition>
        <argsstring>() const</argsstring>
        <name>logState</name>
        <qualifiedname>Ikarus::TrustRegion::logState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="365" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="365" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1a8c256a5e32007e80ef53957873955190" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::logFinalState</definition>
        <argsstring>()</argsstring>
        <name>logFinalState</name>
        <qualifiedname>Ikarus::TrustRegion::logFinalState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="374" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="374" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1a17523ce53d6b2f84bed195d85da004d1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::energy</definition>
        <argsstring>()</argsstring>
        <name>energy</name>
        <qualifiedname>Ikarus::TrustRegion::energy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="380" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1acb969bce3e2adf77e6e6397ad92422b5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::gradient</definition>
        <argsstring>()</argsstring>
        <name>gradient</name>
        <qualifiedname>Ikarus::TrustRegion::gradient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="381" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="381" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1a35cc82703cede25aa656fb43895c0802" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::hessian</definition>
        <argsstring>()</argsstring>
        <name>hessian</name>
        <qualifiedname>Ikarus::TrustRegion::hessian</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="382" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="382" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1a8a26204499a2deb559b9e72374af3a5c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::stoppingCriterion</definition>
        <argsstring>()</argsstring>
        <name>stoppingCriterion</name>
        <qualifiedname>Ikarus::TrustRegion::stoppingCriterion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Gradient correction tolerance reached <linebreak/>
</para>
<para>Maximum Time reached <linebreak/>
</para>
<para>Maximum Iterations reached <linebreak/>
</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="384" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="384" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="a01439_1ab2846c8af2e4643714fe7dd10074479b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;::solveInnerProblem</definition>
        <argsstring>()</argsstring>
        <name>solveInnerProblem</name>
        <qualifiedname>Ikarus::TrustRegion::solveInnerProblem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="428" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="428" bodyend="449"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Trust Region solver for non-linear optimization problems. </para>
    </briefdescription>
    <detaileddescription>
<para>Refer to <ref refid="a02488_1CITEREF_trustregion" kindref="member">[2]</ref> for details of the algorithm.</para>
<para>This code is heavily inspired by the trust-region implementation of <ulink url="https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/trustregions/trustregions.m">Manopt</ulink>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NLO</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the nonlinear operator to solve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preConditioner</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of preconditioner to use (default is IncompleteCholesky). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UF</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the update function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01567"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObservable&lt; MessageType &gt;</label>
        <link refid="a01567"/>
      </node>
      <node id="1">
        <label>Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;</label>
        <link refid="a01439"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01567"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObservable&lt; MessageType &gt;</label>
        <link refid="a01567"/>
      </node>
      <node id="1">
        <label>Ikarus::TrustRegion&lt; NLO, preConditioner, UF &gt;</label>
        <link refid="a01439"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" line="122" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh" bodystart="123" bodyend="474"/>
    <listofallmembers>
      <member refid="a01439_1a6b82651461328df396eba5b54996b923" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>choleskyInitialShift_</name></member>
      <member refid="a01439_1a1071054a0b75f9fbe27832ea672792b0" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>CorrectionType</name></member>
      <member refid="a01439_1a17523ce53d6b2f84bed195d85da004d1" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>energy</name></member>
      <member refid="a01439_1aab235ae4494c2abf7780b4ce2e27153a" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>eps_</name></member>
      <member refid="a01439_1a815b413d4d51a3343828e6c43339d930" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>eta_</name></member>
      <member refid="a01439_1acb969bce3e2adf77e6e6397ad92422b5" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>gradient</name></member>
      <member refid="a01439_1a35cc82703cede25aa656fb43895c0802" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>hessian</name></member>
      <member refid="a01439_1ad2c36fbe5c66ee463ba9cc6ec48912b1" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>Heta_</name></member>
      <member refid="a01439_1af55faee2493e9705bd0db4cb8956ee8d" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>info_</name></member>
      <member refid="a01439_1ab9d0147aeb3c494f184e84750fb585a5" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>innerInfo_</name></member>
      <member refid="a01567_1ac8058d5b1ebb462a10712ba598154e23" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>IObservable</name></member>
      <member refid="a01439_1a8c256a5e32007e80ef53957873955190" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>logFinalState</name></member>
      <member refid="a01439_1a984bd7460ee6e69a4d47cc145e9eb52f" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>logState</name></member>
      <member refid="a01439_1a631486c0b90c8a1a0bfc9d80694f6a4f" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>MatrixType</name></member>
      <member refid="a01439_1a7334271a9133e2503f142decf6ecebb7" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>NonLinearOperator</name></member>
      <member refid="a01439_1a58d156c1eb6c5ac3abee28d14beadc2a" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>nonLinearOperator</name></member>
      <member refid="a01439_1a75c8fd8fd873133536c086ee233615b8" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>nonLinearOperator_</name></member>
      <member refid="a01567_1a4bce3750aa7d52aff9baf122a54e16b5" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1ac035ba934c33e090c4a45128ac13f190" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1a2f93322aa7327069dd4469983933bd16" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1ae0c6cec757e540f22b65fce1f782e380" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1a72e3156874ce81a1c7548b9f74db522c" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1ac72b261cd2af7f59e98f1504814bc785" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1a19047649c66f704c2ba2f1276c1a0e8b" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1a03d4668b7111180f0427e8382359f3bf" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1ad758bd6f15e8228a3439f52ee2ad6aaa" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1acf19e220bc71c046619dd21b3f50e8bb" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1aae4ef907815822352e07fe25cefa8980" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1ae12cb2deb2aa20f0cbc3d78b9a562eb3" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01567_1aa5a60c5b81bb92de527c49ea8fce147d" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>notify</name></member>
      <member refid="a01439_1a7bdc662fa4941a557f28a566b0810688" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>options_</name></member>
      <member refid="a01439_1a9d02d3c87e842a02fb9ba3827b05e2f6" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>PreConditionerType</name></member>
      <member refid="a01439_1a34bb35f72b19375a57329d3fec82515c" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>ScalarType</name></member>
      <member refid="a01439_1a504a0eb127e772c205775a6545fbdb98" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>setup</name></member>
      <member refid="a01439_1af244b67329c3aab4aa81f37c9eabae8f" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>solve</name></member>
      <member refid="a01439_1ab2846c8af2e4643714fe7dd10074479b" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>solveInnerProblem</name></member>
      <member refid="a01439_1a5c945d49f60fb85e40713cdb0cdfd03d" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>stats_</name></member>
      <member refid="a01439_1a8a26204499a2deb559b9e72374af3a5c" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>stoppingCriterion</name></member>
      <member refid="a01567_1ad67c98f02c195b788f78a229e1898006" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>subscribe</name></member>
      <member refid="a01567_1a13bd8d73b485186680f640786e2682e5" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>subscribeAll</name></member>
      <member refid="a01567_1a026462a1a050728e37bc24e33d2edd9c" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>subscribeAll</name></member>
      <member refid="a01439_1a7a2131eb019ac9a2bed3ffaa40afb361" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>tcg_stop_reason_</name></member>
      <member refid="a01439_1a2eed7c771913c7cc202bc9a4dbabe711" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>truncatedConjugateGradient_</name></member>
      <member refid="a01439_1aca59267eff2ad5358225cc5eafbe21d0" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>TrustRegion</name></member>
      <member refid="a01567_1a3eb718b8fa1ecc373371a6751a316b24" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>unSubscribe</name></member>
      <member refid="a01567_1a378a520833df0d6e27dbb35b621c838d" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>unSubscribeAll</name></member>
      <member refid="a01439_1a7f187a825b0a65e7d9ab1c21578da1cf" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>UpdateFunction</name></member>
      <member refid="a01439_1a8e17d129b13ac3c99fcb69179992e709" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>updateFunction_</name></member>
      <member refid="a01439_1a44fa96b7ca63e50d8ed3707b4129369b" prot="public" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>ValueType</name></member>
      <member refid="a01439_1a1c31f9eaad7a7053ca3c7cf106814c12" prot="private" virt="non-virtual"><scope>Ikarus::TrustRegion</scope><name>xOld_</name></member>
      <member refid="a01567_1ad1fe15b31cccec8e44c695af550938ed" prot="public" virt="virtual"><scope>Ikarus::TrustRegion</scope><name>~IObservable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
