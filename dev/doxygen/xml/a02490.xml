<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a02490" kind="file" language="C++">
    <compoundname>finiteelements/mechanics/linearelastic.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">optional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">dune/fufem/boundarypatch.hh</includes>
    <includes local="no">dune/geometry/quadraturerules.hh</includes>
    <includes local="no">dune/localfefunctions/expressions/linearStrainsExpr.hh</includes>
    <includes local="no">dune/localfefunctions/impl/standardLocalFunction.hh</includes>
    <includes local="no">dune/localfefunctions/manifolds/realTuple.hh</includes>
    <includes refid="a00116" local="no">ikarus/finiteelements/febases/powerbasisfe.hh</includes>
    <includes refid="a00179" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="a00128" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a00170" local="no">ikarus/finiteelements/mechanics/loads.hh</includes>
    <includes refid="a00167" local="no">ikarus/finiteelements/mechanics/materials.hh</includes>
    <includes refid="a00122" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includes refid="a00029" local="no">ikarus/utils/defaultfunctions.hh</includes>
    <includes refid="a00062" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includedby refid="a02493" local="no">linearelastic.hh</includedby>
    <includedby refid="a00197" local="no">registerelement.hh</includedby>
    <incdepgraph>
      <node id="10">
        <label>ikarus/finiteelements/febases/powerbasisfe.hh</label>
        <link refid="a00116"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="a00179"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00128"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="a00125"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>linearelastic.hh</label>
        <link refid="a02490"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/finiteelements/mechanics/loads.hh</label>
        <link refid="a00170"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/finiteelements/mechanics/loads/traction.hh</label>
        <link refid="a00140"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ikarus/finiteelements/mechanics/loads/volume.hh</label>
        <link refid="a00137"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ikarus/finiteelements/mechanics/materials.hh</label>
        <link refid="a00167"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="a00152"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>ikarus/finiteelements/mechanics/materials/linearelasticity.hh</label>
        <link refid="a00158"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>ikarus/finiteelements/mechanics/materials/neohooke.hh</label>
        <link refid="a00161"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00149"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>svk.hh</label>
        <link refid="a00143"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>tags.hh</label>
        <link refid="a00155"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>ikarus/finiteelements/mechanics/materials/vanishingstress.hh</label>
        <link refid="a00146"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00122"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="a00245"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="a00236"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00233"/>
      </node>
      <node id="12">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00020"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00029"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>linearalgebrahelper.hh</label>
        <link refid="a00062"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00008"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00041"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="a00011"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="a00221"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="a00209"/>
      </node>
      <node id="48">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00017"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00056"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Eigen/Core</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="59">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="39">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="13">
        <label>concepts</label>
      </node>
      <node id="26">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="30">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="21">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="51">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="37">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="5">
        <label>dune/fufem/boundarypatch.hh</label>
      </node>
      <node id="16">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="17">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="6">
        <label>dune/geometry/quadraturerules.hh</label>
      </node>
      <node id="38">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="7">
        <label>dune/localfefunctions/expressions/linearStrainsExpr.hh</label>
      </node>
      <node id="8">
        <label>dune/localfefunctions/impl/standardLocalFunction.hh</label>
      </node>
      <node id="9">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="64">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="57">
        <label>memory</label>
      </node>
      <node id="49">
        <label>numeric</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="35">
        <label>random</label>
      </node>
      <node id="36">
        <label>ranges</label>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="20">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="50">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="47">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="58">
        <label>variant</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>linearelastic.hh</label>
        <link refid="a02490"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a02487"/>
      </node>
      <node id="2">
        <label>linearelastic.hh</label>
        <link refid="a02493"/>
      </node>
      <node id="3">
        <label>registerelement.hh</label>
        <link refid="a00197"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01289" prot="public">Ikarus::LinearElastic</innerclass>
    <innernamespace refid="a00313">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the LinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DUNE_LOCALFEFUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/fufem/boundarypatch.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/geometry/quadraturerules.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/expressions/linearStrainsExpr.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/impl/standardLocalFunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/manifolds/realTuple.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00116" kindref="compound">ikarus/finiteelements/febases/powerbasisfe.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00179" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00128" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00170" kindref="compound">ikarus/finiteelements/mechanics/loads.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00167" kindref="compound">ikarus/finiteelements/mechanics/materials.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00122" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00029" kindref="compound">ikarus/utils/defaultfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00062" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00313" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FERequirements_<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="45" refid="a01289" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01289" kindref="compound">LinearElastic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01213" kindref="compound">PowerBasisFE</ref>&lt;typename<sp/>Basis_::FlatBasis&gt;,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01297" kindref="compound">Volume</ref>&lt;LinearElastic&lt;Basis_,<sp/>FERequirements_,<sp/>useEigenRef&gt;,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraitsFromFE&lt;Basis_,<sp/>FERequirements_,<sp/>useEigenRef&gt;&gt;,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01293" kindref="compound">Traction</ref>&lt;LinearElastic&lt;Basis_,<sp/>FERequirements_,<sp/>useEigenRef&gt;,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraitsFromFE&lt;Basis_,<sp/>FERequirements_,<sp/>useEigenRef&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="a01289_1aa098cb85040dc0e2f937f27356379ef5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01333" kindref="compound">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01333" kindref="compound">TraitsFromFE&lt;Basis_, FERequirements_, useEigenRef&gt;</ref>;</highlight></codeline>
<codeline lineno="52" refid="a01289_1ac67d77bbb42299a97ba00a00265a2a98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1ac67d77bbb42299a97ba00a00265a2a98" kindref="member">Basis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1a6a750e6394db5c344790453319075dd4" kindref="member">Traits::Basis</ref>;</highlight></codeline>
<codeline lineno="53" refid="a01289_1aaf49fc71022971578d72cce0ae28aa55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1aaf49fc71022971578d72cce0ae28aa55" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1a4cd4d3b203993f8b5de5ca968bda0b97" kindref="member">Traits::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="54" refid="a01289_1a50164592b0aa80d9027a707436cfc50c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1ae29466435644541bf50d0f8fecbac1dd" kindref="member">Traits::FERequirementType</ref>;</highlight></codeline>
<codeline lineno="55" refid="a01289_1a630a04c604ae2e56673604452e3fd39a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1a630a04c604ae2e56673604452e3fd39a" kindref="member">LocalView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1a36437741d63f3d325f363c8df4d2aac5" kindref="member">Traits::LocalView</ref>;</highlight></codeline>
<codeline lineno="56" refid="a01289_1a199e66dea3f46b43e92443e427335c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1a199e66dea3f46b43e92443e427335c20" kindref="member">Geometry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1af8b05c9e9d401efcdb7d97e197b9fc1f" kindref="member">Traits::Geometry</ref>;</highlight></codeline>
<codeline lineno="57" refid="a01289_1a32bea39022e61c6978c29f0b75847e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1a32bea39022e61c6978c29f0b75847e44" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1ae15acf23e6cfbae7db57da6d4dd5ca80" kindref="member">Traits::GridView</ref>;</highlight></codeline>
<codeline lineno="58" refid="a01289_1af40ba2ffc4ec6ba9e438a1a5a066a1bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1af40ba2ffc4ec6ba9e438a1a5a066a1bf" kindref="member">Element</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1a179f7c62c0c2fef548d7ae31705de71e" kindref="member">Traits::Element</ref>;</highlight></codeline>
<codeline lineno="59" refid="a01289_1aab04fec155c76056c0c302352686787a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1aab04fec155c76056c0c302352686787a" kindref="member">ResultRequirementsType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01333_1a5b3e19bb8aac79a0cceeacd20c021d97" kindref="member">Traits::ResultRequirementsType</ref>;</highlight></codeline>
<codeline lineno="60" refid="a01289_1a46df9b5887e5f1c87dfd24aeca94824a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01213" kindref="compound">BaseDisp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01213" kindref="compound">PowerBasisFE&lt;FlatBasis&gt;</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>globalIndices<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="a01289_1afb5b60dfe956fa4b70195462b2e4ac0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01297" kindref="compound">VolumeType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01297" kindref="compound">Volume&lt;LinearElastic&lt;Basis_, FERequirements_, useEigenRef&gt;</ref>,<sp/><ref refid="a01333" kindref="compound">Traits</ref>&gt;;</highlight></codeline>
<codeline lineno="62" refid="a01289_1a68d172e1b8834272956a8fa7e138072e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01293" kindref="compound">TractionType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01293" kindref="compound">Traction&lt;LinearElastic&lt;Basis_, FERequirements_, useEigenRef&gt;</ref>,<sp/><ref refid="a01333" kindref="compound">Traits</ref>&gt;;</highlight></codeline>
<codeline lineno="63" refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/><sp/><sp/>=<sp/><ref refid="a01333_1a9e797097afc9ec86a072555b99778bf5" kindref="member">Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="64" refid="a01289_1a1d9cc0964e73991e6a06ad38e7bfb78a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01289_1a1d9cc0964e73991e6a06ad38e7bfb78a" kindref="member">LocalBasisType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VolumeLoad<sp/>=<sp/>utils::LoadDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeumannBoundaryLoad<sp/>=<sp/>utils::LoadDefault&gt;</highlight></codeline>
<codeline lineno="80" refid="a01289_1a99c658e2b0aa008672bfbc67e11c56db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01289_1a99c658e2b0aa008672bfbc67e11c56db" kindref="member">LinearElastic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1ac67d77bbb42299a97ba00a00265a2a98" kindref="member">Basis</ref>&amp;<sp/>globalBasis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element&amp;<sp/>element,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>emod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VolumeLoad<sp/>p_volumeLoad<sp/>=<sp/>{},<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/>p_neumannBoundary<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeumannBoundaryLoad<sp/>p_neumannBoundaryLoad<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="a01289_1a46df9b5887e5f1c87dfd24aeca94824a" kindref="member">BaseDisp</ref>(globalBasis.flat(),<sp/>element),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01289_1afb5b60dfe956fa4b70195462b2e4ac0e" kindref="member">VolumeType</ref>(p_volumeLoad),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01289_1a68d172e1b8834272956a8fa7e138072e" kindref="member">TractionType</ref>(p_neumannBoundary,<sp/>p_neumannBoundaryLoad),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emod_{emod},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_{nu}<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().bind(element);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>first_child<sp/>=<sp/>this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().tree().child(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/><sp/>=<sp/>first_child.finiteElement();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_shared&lt;const<sp/>Geometry&gt;(this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().<ref refid="a01289_1a9d79259ab8e7093c190171a8b4ddff13" kindref="member">geometry</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numberOfNodes_<sp/><sp/><sp/><sp/>=<sp/>fe.size();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>(fe.localBasis().order());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>localBasis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::CachedLocalBasis(fe.localBasis());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().getQuadratureRule(order_);<sp/>})</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().isTrimmed())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis.bind(this-&gt;localView().element().impl().getQuadratureRule(order_),<sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/>order_),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/>order_),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="114" refid="a01289_1a80bcd6e7b26b4529df93d12314d92117" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01289_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.getGlobalSolution(<ref refid="a00300_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">Ikarus::FESolutions::displacement</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/><sp/><sp/><sp/><sp/>=<sp/>Ikarus::FEHelper::localSolutionBlockVector&lt;Traits&gt;(d,<sp/>this-&gt;<ref refid="a01213_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>(),<sp/>dx);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::StandardLocalFunction<sp/>uFunction(localBasis,<sp/>disp,<sp/>geo_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uFunction;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="130" refid="a01289_1a8622364f84baada158d636021dc3d3d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01289_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::linearStrains(<ref refid="a01289_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(par,<sp/>dx));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00313_1a90678a80e6b2b4849072623df02dae58" kindref="member">planeStressLinearElasticMaterialTangent</ref>(emod_,<sp/>nu_);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00313_1afc9c57d60ca4a8c1075c44d926e497a8" kindref="member">linearElasticMaterialTangent3D</ref>(emod_,<sp/>nu_);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="a01289_1a23a003fe0c49bfc18714da0889b00c65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01289_1a23a003fe0c49bfc18714da0889b00c65" kindref="member">materialTangentFunction</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[&amp;]([[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gp)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();<sp/>};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="a01289_1a9d79259ab8e7093c190171a8b4ddff13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a199e66dea3f46b43e92443e427335c20" kindref="member">Geometry</ref>&amp;<sp/><ref refid="a01289_1a9d79259ab8e7093c190171a8b4ddff13" kindref="member">geometry</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*geo_;<sp/>}</highlight></codeline>
<codeline lineno="158" refid="a01289_1ab6ce7edbeb15b437c5977d4f8962d03d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="a01289_1ab6ce7edbeb15b437c5977d4f8962d03d" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfNodes_;<sp/>}</highlight></codeline>
<codeline lineno="159" refid="a01289_1a2bf5dffeeb22108cae5126814dd98163" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01289_1a2bf5dffeeb22108cae5126814dd98163" kindref="member">order</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="a01289_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01289_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" kindref="member">calculateScalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateScalarImpl&lt;double&gt;(par);<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="a01289_1a35aa251bcd641913a8448b9502030349" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01289_1a35aa251bcd641913a8448b9502030349" kindref="member">calculateVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;&gt;<sp/>force)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateVectorImpl&lt;double&gt;(par,<sp/>force);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="a01289_1a9d491b6c69f9f28b2a838075526fa705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01289_1a9d491b6c69f9f28b2a838075526fa705" kindref="member">calculateMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;&gt;<sp/>K)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01289_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(par);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00318" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="a01213_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numberOfNodes_;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopJ<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(j)),<sp/>on(<ref refid="a01213_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K.template<sp/>block&lt;myDim,<sp/>myDim&gt;(i<sp/>*<sp/><ref refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref>,<sp/>j<sp/>*<sp/><ref refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref>)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>due<sp/>to<sp/>displacement-dependent<sp/>external<sp/>loads,<sp/>e.g.,<sp/>follower<sp/>loads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01297_1ab34ccd72bb7397283f7c2dcbf595841e" kindref="member">VolumeType::calculateMatrix</ref>(par,<sp/>K);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01293_1ad5b9f64124013ab2e98b6494e9b511b3" kindref="member">TractionType::calculateMatrix</ref>(par,<sp/>K);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="a01289_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01289_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" kindref="member">calculateAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1aab04fec155c76056c0c302352686787a" kindref="member">ResultRequirementsType</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01365" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01245" kindref="compound">ResultTypeMap&lt;double&gt;</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::Indices;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00318" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01289_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(req.getFERequirements());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/>=<sp/><ref refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epsVoigt<sp/><sp/>=<sp/>eps.evaluate(local,<sp/>on(<ref refid="a01213_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00300_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">linearStress</ref><sp/>=<sp/>(C<sp/>*<sp/>epsVoigt).eval();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.isResultRequested(<ref refid="a00300_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">ResultType::linearStress</ref>))</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="a01245_1aa399a96000daf40950e388eb0b23a7c0" kindref="member">insertOrAssignResult</ref>(<ref refid="a00300_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">ResultType::linearStress</ref>,<sp/><ref refid="a00300_1gga531be167e924b749eb8b4ccc7f1c18c9ad8cbb8fe32024cc3f1376a24d27aeae7" kindref="member">linearStress</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>requested<sp/>result<sp/>type<sp/>is<sp/>NOT<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Geometry&gt;<sp/>geo_;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt;&gt;<sp/>localBasis;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>emod_;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu_;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfNodes_{0};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order_{};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="242" refid="a01289_1a2f4e42b682af401fcfaada66e5a05d53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01289_1a2f4e42b682af401fcfaada66e5a05d53" kindref="member">calculateScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>ScalarType<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01289_1a80bcd6e7b26b4529df93d12314d92117" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01289_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="a00300_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">Ikarus::FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00318" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ScalarType<sp/>energy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/>=<sp/>eps.evaluate(gpIndex,<sp/>on(<ref refid="a01213_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>(0.5<sp/>*<sp/>EVoigt.dot(C<sp/>*<sp/>EVoigt))<sp/>*<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/><ref refid="a01297_1a38b6d9f88ad5734093413497e3ac7b29" kindref="member">VolumeType::calculateScalarImpl</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>or<sp/>surface<sp/>loads,<sp/>i.e.,<sp/>neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/><ref refid="a01293_1a3b3de553171d016228f21cbac1e7f47d" kindref="member">TractionType::calculateScalarImpl</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="267" refid="a01289_1a3cb0f7f1a2745097f3e91b9c0928722f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01289_1a3cb0f7f1a2745097f3e91b9c0928722f" kindref="member">calculateVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01289_1a50164592b0aa80d9027a707436cfc50c" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ScalarType&gt;<sp/>force,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01289_1a8622364f84baada158d636021dc3d3d4" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00318" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="a01289_1ae9391f3895e965ecc5dfea1af1ac62f7" kindref="member">materialTangent</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stresses<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(C<sp/>*<sp/>eps.evaluate(gpIndex,<sp/>on(<ref refid="a01213_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>))).eval();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="a01213_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;myDim&gt;(<ref refid="a01289_1a2279ac283b972f47d58c51730ca47d6b" kindref="member">myDim</ref><sp/>*<sp/>i)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>stresses<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01297_1af2fc872a641d42398fc9d8bd60aa973c" kindref="member">VolumeType::calculateVectorImpl</ref>(par,<sp/>force,<sp/>dx);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces,<sp/>boundary<sp/>forces,<sp/>i.e.,<sp/>at<sp/>the<sp/>Neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01293_1a0cac2c7cc2a06ae38bc83f97664e4d8c" kindref="member">TractionType::calculateVectorImpl</ref>(par,<sp/>force,<sp/>dx);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>error<sp/>LinearElastic<sp/>depends<sp/>on<sp/>dune-localfefunctions,<sp/>which<sp/>is<sp/>not<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh"/>
  </compounddef>
</doxygen>
