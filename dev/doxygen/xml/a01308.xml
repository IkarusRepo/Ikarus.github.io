<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01308" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::Traction</compoundname>
    <includes refid="a00209" local="no">ikarus/finiteelements/mechanics/loads/traction.hh</includes>
    <templateparamlist>
      <param>
        <type>typename DFE</type>
      </param>
      <param>
        <type>typename Traits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01308_1a6acd5326c47bea7af9805c069678c9c7" prot="public" static="no">
        <type>typename Traits::FERequirementType</type>
        <definition>using Ikarus::Traction&lt; DFE, Traits &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::Traction::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="25" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01308_1af70224be0c49af50928114aa0e24b22b" prot="public" static="no">
        <type>typename Traits::LocalView</type>
        <definition>using Ikarus::Traction&lt; DFE, Traits &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::Traction::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="26" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01308_1ade2bba6c519ff851d93f6aba15e06417" prot="public" static="no">
        <type>typename Traits::GridView</type>
        <definition>using Ikarus::Traction&lt; DFE, Traits &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::Traction::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="27" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01308_1abd307f8712d6f1f03617ed383ebf67c1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; DFE, Traits &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::Traction::myDim</qualifiedname>
        <initializer>= Traits::mydim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="28" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01308_1a1d2ad110e77cf497bc88ac1a8735fc97" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; DFE, Traits &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Traction::worldDim</qualifiedname>
        <initializer>= Traits::worlddim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="29" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="29" bodyend="-1"/>
        <referencedby refid="a01308_1aabcfd5d855e2230fe90abb12a1ba8d2b" compoundref="a00209" startline="115" endline="146">Ikarus::Traction&lt; DFE, Traits &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01308_1a1347584c2a5e24630cb2d1b9fbc69cb3" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="a01308_1a1d2ad110e77cf497bc88ac1a8735fc97" kindref="member">worldDim</ref> &gt;(const <ref refid="a01496" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01308_1a1d2ad110e77cf497bc88ac1a8735fc97" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::Traction&lt; DFE, Traits &gt;::neumannBoundaryLoad_</definition>
        <argsstring></argsstring>
        <name>neumannBoundaryLoad_</name>
        <qualifiedname>Ikarus::Traction::neumannBoundaryLoad_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="154" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01308_1a46a18655602ae9cc6d89ff647ab4d1c6" prot="private" static="no" mutable="no">
        <type>const BoundaryPatch&lt; <ref refid="a01308_1ade2bba6c519ff851d93f6aba15e06417" kindref="member">GridView</ref> &gt; *</type>
        <definition>const BoundaryPatch&lt;GridView&gt;* Ikarus::Traction&lt; DFE, Traits &gt;::neumannBoundary_</definition>
        <argsstring></argsstring>
        <name>neumannBoundary_</name>
        <qualifiedname>Ikarus::Traction::neumannBoundary_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="155" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01308_1a3fa13c11a3d654ba3800c233856574a6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NBL</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::Traction&lt; DFE, Traits &gt;::Traction</definition>
        <argsstring>(const BoundaryPatch&lt; GridView &gt; *neumannBoundary, NBL neumannBoundaryLoad)</argsstring>
        <name>Traction</name>
        <qualifiedname>Ikarus::Traction::Traction</qualifiedname>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="a01308_1ade2bba6c519ff851d93f6aba15e06417" kindref="member">GridView</ref> &gt; *</type>
          <declname>neumannBoundary</declname>
        </param>
        <param>
          <type>NBL</type>
          <declname>neumannBoundaryLoad</declname>
        </param>
        <briefdescription>
<para>Constructor for the Loads class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NBL</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="39" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="a01308_1a96c3bc299da08a776e46b488aed3ded7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Traction&lt; DFE, Traits &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Traction::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given <ref refid="a01248" kindref="compound">FERequirements</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="a01248" kindref="compound">FERequirements</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="56" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="a01308_1af90d4b6149bb2241644c92855759e6f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DFE, Traits &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Traction::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="65" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="a01308_1aa4336b55618b836ca7b2b3aebf4242bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DFE, Traits &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Traction::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="75" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="75" bodyend="77"/>
        <referencedby refid="a01304_1ab108d5374fab0ec824376ebf0ecb09f5" compoundref="a02464" startline="185" endline="205">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01344_1abe95aba4255becb35502caaa4442063c" compoundref="a02470" startline="224" endline="246">Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01308_1a2576d38cb79bb0b5bf59f433fa7c1633" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Traction&lt; DFE, Traits &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Traction::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="81" bodyend="112"/>
        <referencedby refid="a01304_1a2bd57b0020bc5144908df7d582533cc7" compoundref="a02464" startline="239" endline="262">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01344_1ad7e34f32d4881e6bd7286bbdc4d6d2af" compoundref="a02470" startline="281" endline="303">Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01296_1a3eff5a18382fed4d45da446ad8d9fdb0" compoundref="a02458" startline="351" endline="374">Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01308_1aabcfd5d855e2230fe90abb12a1ba8d2b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DFE, Traits &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Traction::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Integration rule along the boundary</para>
<para>The value of the local function wrt the i-th coeff</para>
<para>Value of the Neumann data at the current position</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="115" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="115" bodyend="146"/>
        <referencedby refid="a01304_1af75f290aad4b52072053aa027d4b2f0d" compoundref="a02464" startline="265" endline="288">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01344_1aa36fb72f92ed5b674f56b434aedc8845" compoundref="a02470" startline="306" endline="328">Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01296_1a6dbd8faca927367f2665a67132cf66d6" compoundref="a02458" startline="315" endline="348">Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01308_1a38ba7822f8f38691c80a0b607e488d03" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DFE, Traits &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Traction::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="149" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="149" bodyend="150"/>
        <referencedby refid="a01296_1aa6b452c8beb9c8b41899486bdefd793b" compoundref="a02458" startline="269" endline="312">Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrixImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01308_1a40912731e6a2d2204fb313db5f116304" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const DFE &amp;</type>
        <definition>constexpr const DFE &amp; Ikarus::Traction&lt; DFE, Traits &gt;::dbElement</definition>
        <argsstring>() const</argsstring>
        <name>dbElement</name>
        <qualifiedname>Ikarus::Traction::dbElement</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying displacement-based finite element (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying displacement-based finite element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="162" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="162" bodyend="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01308" kindref="compound">Traction</ref> class represents distributed traction load that can be applied. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DFE</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the displacement-based finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of traits for handling finite elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01296"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01304"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01344"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::Traction&lt; DFE, Traits &gt;</label>
        <link refid="a01308"/>
      </node>
      <node id="2">
        <label>Ikarus::Traction&lt; KirchhoffLoveShell&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01308"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; KirchhoffLoveShell&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01308"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; NonLinearElastic&lt; BH, MAT, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01308"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NonLinearElastic&lt; BH, MAT, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="22" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="23" bodyend="163"/>
    <listofallmembers>
      <member refid="a01308_1aa4336b55618b836ca7b2b3aebf4242bf" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateMatrix</name></member>
      <member refid="a01308_1a38ba7822f8f38691c80a0b607e488d03" prot="protected" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01308_1a96c3bc299da08a776e46b488aed3ded7" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateScalar</name></member>
      <member refid="a01308_1a2576d38cb79bb0b5bf59f433fa7c1633" prot="protected" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateScalarImpl</name></member>
      <member refid="a01308_1af90d4b6149bb2241644c92855759e6f5" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateVector</name></member>
      <member refid="a01308_1aabcfd5d855e2230fe90abb12a1ba8d2b" prot="protected" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateVectorImpl</name></member>
      <member refid="a01308_1a40912731e6a2d2204fb313db5f116304" prot="private" virt="non-virtual"><scope>Ikarus::Traction</scope><name>dbElement</name></member>
      <member refid="a01308_1a6acd5326c47bea7af9805c069678c9c7" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>FERequirementType</name></member>
      <member refid="a01308_1ade2bba6c519ff851d93f6aba15e06417" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>GridView</name></member>
      <member refid="a01308_1af70224be0c49af50928114aa0e24b22b" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>LocalView</name></member>
      <member refid="a01308_1abd307f8712d6f1f03617ed383ebf67c1" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>myDim</name></member>
      <member refid="a01308_1a46a18655602ae9cc6d89ff647ab4d1c6" prot="private" virt="non-virtual"><scope>Ikarus::Traction</scope><name>neumannBoundary_</name></member>
      <member refid="a01308_1a1347584c2a5e24630cb2d1b9fbc69cb3" prot="private" virt="non-virtual"><scope>Ikarus::Traction</scope><name>neumannBoundaryLoad_</name></member>
      <member refid="a01308_1a3fa13c11a3d654ba3800c233856574a6" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>Traction</name></member>
      <member refid="a01308_1a1d2ad110e77cf497bc88ac1a8735fc97" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
