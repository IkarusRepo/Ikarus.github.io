<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01421" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::FEMixin</compoundname>
    <basecompoundref refid="a01425" prot="public" virt="non-virtual">Ikarus::Skills&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;</basecompoundref>
    <includes refid="a00278" local="no">ikarus/finiteelements/mixin.hh</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="a01245" kindref="compound">PreFE</ref></type>
      </param>
      <param>
        <type>template&lt; typename, typename &gt; class...</type>
        <declname>Skills</declname>
        <defname>Skills</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01421_1ada59c15363d83f6e635ecd6e1672d6a4" prot="public" static="no">
        <type>decltype(std::tuple_cat(computeSupportedResultTypes&lt; <ref refid="a01425" kindref="compound">Skills</ref>&lt; <ref refid="a01245" kindref="compound">PreFE</ref>, typename PreFE::template <ref refid="a01241" kindref="compound">FE</ref>&lt; Skills... &gt; &gt; &gt;()...))</type>
        <definition>using Ikarus::FEMixin&lt; PreFE, Skills &gt;::SupportedResultTypes =  decltype(std::tuple_cat(computeSupportedResultTypes&lt;Skills&lt;PreFE, typename PreFE::template FE&lt;Skills...&gt; &gt;&gt;()...))</definition>
        <argsstring></argsstring>
        <name>SupportedResultTypes</name>
        <qualifiedname>Ikarus::FEMixin::SupportedResultTypes</qualifiedname>
        <briefdescription>
<para>Type alias for the supported result types by the mixin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="63" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01421_1a78dab4c9a5818baef9889f3e0523b562" prot="public" static="no">
        <type><ref refid="a01245_1a9d8e27b97d32f23d3f27b43d67719712" kindref="member">PreFE::Traits</ref></type>
        <definition>using Ikarus::FEMixin&lt; PreFE, Skills &gt;::Traits =  PreFE::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::FEMixin::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="66" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01421_1acf3003809bd583f33bd0a516d3255385" prot="public" static="no">
        <type>typename <ref refid="a01301_1a07ae507e77464265d631a82eea32e45a" kindref="member">Traits::FERequirementType</ref></type>
        <definition>using Ikarus::FEMixin&lt; PreFE, Skills &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::FEMixin::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="67" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01421_1af20e97c72e6f0bcec8e156aa367f126c" prot="public" static="no">
        <type>typename <ref refid="a01301_1a247c2f275ba82e1c6b73b157c00213c3" kindref="member">Traits::LocalView</ref></type>
        <definition>using Ikarus::FEMixin&lt; PreFE, Skills &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::FEMixin::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="68" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01425_1a2ad44dcb1253eaebcbc976a2725b9d02" prot="public" static="no">
        <type>std::tuple&lt; ARGS... &gt;</type>
        <definition>using Ikarus::Skills&lt; ARGS &gt;::Args =  std::tuple&lt;ARGS...&gt;</definition>
        <argsstring></argsstring>
        <name>Args</name>
        <qualifiedname>Ikarus::Skills&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;::Args</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="235" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01421_1a1eeb8c1a6f93d0c7aa5f8f15b85a22d5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::FEMixin&lt; PreFE, Skills &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::FEMixin::worldDim</qualifiedname>
        <initializer>= <ref refid="a01301_1aa72f0d4219850668dc72117052455aca" kindref="member">Traits::worlddim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="69" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="a01421_1a4783ce320146e5535f9d65d22d806e5b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::FEMixin&lt; PreFE, Skills &gt;::implementsCalculateScalarImpl</definition>
        <argsstring></argsstring>
        <name>implementsCalculateScalarImpl</name>
        <qualifiedname>Ikarus::FEMixin::implementsCalculateScalarImpl</qualifiedname>
        <initializer>=
      (requires(<ref refid="a01421" kindref="compound">FEMixin</ref> m, const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref>&amp; par,
                const std::optional&lt;std::reference_wrapper&lt;const Eigen::VectorX&lt;double&gt;&gt;&gt;&amp; dx) {
        m.Skills&lt;<ref refid="a01245" kindref="compound">PreFE</ref>, typename PreFE::template <ref refid="a01241" kindref="compound">FE</ref>&lt;Skills...&gt;&gt;<ref refid="a01421_1af77a266d1ffc5fdeea20a342414a71f4" kindref="member">::calculateScalarImpl</ref>(par, dx);
      } ||
       ...)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="131" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01421_1a921897b50501512c28cda03b6592111b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::FEMixin&lt; PreFE, Skills &gt;::implementsCalculateVectorImpl</definition>
        <argsstring></argsstring>
        <name>implementsCalculateVectorImpl</name>
        <qualifiedname>Ikarus::FEMixin::implementsCalculateVectorImpl</qualifiedname>
        <initializer>=
      (requires(<ref refid="a01421" kindref="compound">FEMixin</ref> m, const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref>&amp; par, typename Traits::template VectorType&lt;double&gt; force,
                const std::optional&lt;std::reference_wrapper&lt;const Eigen::VectorX&lt;double&gt;&gt;&gt;&amp; dx) {
        m.Skills&lt;<ref refid="a01245" kindref="compound">PreFE</ref>, typename PreFE::template <ref refid="a01241" kindref="compound">FE</ref>&lt;Skills...&gt;&gt;<ref refid="a01421_1aa25cd816f70b28d63413c297eb2a8fe5" kindref="member">::calculateVectorImpl</ref>(par, force, dx);
      } ||
       ...)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="162" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01421_1a2f8cdcc80b7aa6db4fac30a3e801de2e" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::FEMixin&lt; PreFE, Skills &gt;::implementsCalculateMatrixImpl</definition>
        <argsstring></argsstring>
        <name>implementsCalculateMatrixImpl</name>
        <qualifiedname>Ikarus::FEMixin::implementsCalculateMatrixImpl</qualifiedname>
        <initializer>=
      (requires(<ref refid="a01421" kindref="compound">FEMixin</ref> m, const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref>&amp; par, typename Traits::template MatrixType&lt;double&gt; K,
                const std::optional&lt;std::reference_wrapper&lt;const Eigen::VectorX&lt;double&gt;&gt;&gt;&amp; dx) {
        m.Skills&lt;<ref refid="a01245" kindref="compound">PreFE</ref>, typename PreFE::template <ref refid="a01241" kindref="compound">FE</ref>&lt;Skills...&gt;&gt;<ref refid="a01421_1aa3a171322de0617cc2ef5ac3f97da3b2" kindref="member">::calculateMatrixImpl</ref>(par, K, dx);
      } ||
       ...)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="188" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01421_1a14fdffeb8d301d73b605ce7fc1732b98" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::FEMixin&lt; PreFE, Skills &gt;::FEMixin</definition>
        <argsstring>(typename Skills&lt; PreFE, typename PreFE::template FE&lt; Skills... &gt; &gt;::Pre &amp;&amp;... skillsArgs)</argsstring>
        <name>FEMixin</name>
        <qualifiedname>Ikarus::FEMixin::FEMixin</qualifiedname>
        <param>
          <type>typename <ref refid="a01425" kindref="compound">Skills</ref>&lt; <ref refid="a01245" kindref="compound">PreFE</ref>, typename PreFE::template <ref refid="a01241" kindref="compound">FE</ref>&lt; Skills... &gt; &gt;::Pre &amp;&amp;...</type>
          <declname>skillsArgs</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01421" kindref="compound">FEMixin</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>skillsArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>Variadic arguments for initializing the additional skills. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="34" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="a01421_1a5ac409f243f97656da841035a3c53574" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::FEMixin&lt; PreFE, Skills &gt;::calculateAt</definition>
        <argsstring>(const FERequirementType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::FEMixin::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01573" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01301_1ac9913312b3916225484a0e7125e4f94a" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
    <requiresclause>requires(FEMixin m, const FERequirementType&amp; req, const <ref refid="a01573" kindref="compound">Dune::FieldVector</ref>&lt;double, Traits::mydim&gt;&amp; local) { m.template calculateAtImpl&lt;RT&gt;(req, local, Dune::PriorityTag&lt;10&gt;()); }    </requiresclause>
        <briefdescription>
<para>Calculate the element values at a specific location for a given ResultType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>The ResultType to calculate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>The local coordinates where the calculation is performed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated result as specified by the ResultType. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="120" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="a01421_1ad64afd529f274032176261fea660b027" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FEMixin&lt; PreFE, Skills &gt;::bind</definition>
        <argsstring>()</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FEMixin::bind</qualifiedname>
        <briefdescription>
<para>Call all bind functions if the skill implements it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="142" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="a01421_1af77a266d1ffc5fdeea20a342414a71f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::FEMixin&lt; PreFE, Skills &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::FEMixin::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
    <requiresclause>implementsCalculateScalarImpl    </requiresclause>
        <briefdescription>
<para>Calculate the scalar value in each skill and joins them by <computeroutput>+</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector used in the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="154" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="a01421_1aa25cd816f70b28d63413c297eb2a8fe5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::FEMixin&lt; PreFE, Skills &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::FEMixin::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
    <requiresclause>implementsCalculateVectorImpl    </requiresclause>
        <briefdescription>
<para>Calculate the vector for each skill. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector used in the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="180" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="a01421_1aa3a171322de0617cc2ef5ac3f97da3b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::FEMixin&lt; PreFE, Skills &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt; ScalarType &gt; K, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::FEMixin::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt; ScalarType &gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
    <requiresclause>implementsCalculateMatrixImpl    </requiresclause>
        <briefdescription>
<para>Calculate the matrix for each skill. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector used in the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="206" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="206" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01421_1ad037d914bd0a3933ebe3fc11caa84e39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, typename &gt; class</type>
            <declname>Skill</declname>
            <defname>Skill</defname>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>static consteval bool Ikarus::FEMixin&lt; PreFE, Skills &gt;::hasSkill</definition>
        <argsstring>()</argsstring>
        <name>hasSkill</name>
        <qualifiedname>Ikarus::FEMixin::hasSkill</qualifiedname>
        <briefdescription>
<para>Checks if the mixin class has a specific skill. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Skill</parametername>
</parameternamelist>
<parameterdescription>
<para>The skill to check for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the skill is present, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="45" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="a01421_1a110f90b96f46170073656bf013700688" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>consteval auto</type>
        <definition>static consteval auto Ikarus::FEMixin&lt; PreFE, Skills &gt;::computeSupportedResultTypes</definition>
        <argsstring>()</argsstring>
        <name>computeSupportedResultTypes</name>
        <qualifiedname>Ikarus::FEMixin::computeSupportedResultTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="52" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="a01421_1a28024314d4f1fc5d3c5e3142757e8d7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto calculateScalar</definition>
        <argsstring>(const FEMixin &amp;self, const FERequirementType &amp;par)</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::FEMixin::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01421" kindref="compound">FEMixin</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="78" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="friend" id="a01421_1afc32fd65e2c9d5dcd8568ef056596a1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void calculateVector</definition>
        <argsstring>(const FEMixin &amp;self, const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force)</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::FEMixin::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01421" kindref="compound">FEMixin</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="89" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="friend" id="a01421_1a40ec2a09c963f297bf405985c07dd857" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void calculateMatrix</definition>
        <argsstring>(const FEMixin &amp;self, const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K)</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::FEMixin::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01421" kindref="compound">FEMixin</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="a01421_1acf3003809bd583f33bd0a516d3255385" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="101" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="101" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01421_1a98c214702f5ed3617ae68759a1f9bead" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Sk</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::FEMixin&lt; PreFE, Skills &gt;::invokeBind</definition>
        <argsstring>()</argsstring>
        <name>invokeBind</name>
        <qualifiedname>Ikarus::FEMixin::invokeBind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="126" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="126" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01421_1acbf5789e676110b6a812fbc67aca366d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::FEMixin&lt; PreFE, Skills &gt;::underlying</definition>
        <argsstring>() const</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::FEMixin::underlying</qualifiedname>
        <briefdescription>
<para>Get a reference to the underlying finite element object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the underlying finite element object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="218" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="a01421_1aa3008bb76b6b23ca15c55a1d1485d484" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FEMixin&lt; PreFE, Skills &gt;::underlying</definition>
        <argsstring>()</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::FEMixin::underlying</qualifiedname>
        <briefdescription>
<para>Get a reference to the underlying finite element object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the underlying finite element object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="224" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="224" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="a01425_1a2e8750088bcaddd3fba36e24ab06b099" prot="public" static="no" mutable="no">
        <type><ref refid="a01425_1a2ad44dcb1253eaebcbc976a2725b9d02" kindref="member">Args</ref></type>
        <definition>Args Ikarus::Skills&lt; ARGS &gt;::args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <qualifiedname>Ikarus::Skills&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;::args</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="236" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CRTP mixin class for finite elements with additional skills. </para>
    </briefdescription>
    <detaileddescription>
<para>This mixin class is designed for finite elements and provides the ability to include additional skills through the CRTP (Curiously Recurring Template Pattern).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a01245" kindref="compound">PreFE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The base finite element class. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="a01425" kindref="compound">Skills</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>A template parameter pack for additional skills to be mixed into the finite element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Ikarus::FEMixin&lt; PreFE, Skills... &gt;</label>
        <link refid="a01421"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; PreFE, Skills... &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::FE&lt; PreFE, Skills &gt;</label>
        <link refid="a01241"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::FEMixin&lt; PreFE, Skills &gt;</label>
        <link refid="a01421"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Skills&lt; ARGS &gt;</label>
        <link refid="a01425"/>
      </node>
      <node id="2">
        <label>Ikarus::Skills&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;</label>
        <link refid="a01425"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::FEMixin&lt; PreFE, Skills &gt;</label>
        <link refid="a01421"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Skills&lt; ARGS &gt;</label>
        <link refid="a01425"/>
      </node>
      <node id="2">
        <label>Ikarus::Skills&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;</label>
        <link refid="a01425"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; PreFE, PreFE::template FE&lt; Skills... &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" line="27" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mixin.hh" bodystart="28" bodyend="225"/>
    <listofallmembers>
      <member refid="a01425_1a2e8750088bcaddd3fba36e24ab06b099" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>args</name></member>
      <member refid="a01425_1a2ad44dcb1253eaebcbc976a2725b9d02" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>Args</name></member>
      <member refid="a01421_1ad64afd529f274032176261fea660b027" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>bind</name></member>
      <member refid="a01421_1a5ac409f243f97656da841035a3c53574" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateAt</name></member>
      <member refid="a01421_1a40ec2a09c963f297bf405985c07dd857" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateMatrix</name></member>
      <member refid="a01421_1aa3a171322de0617cc2ef5ac3f97da3b2" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01421_1a28024314d4f1fc5d3c5e3142757e8d7f" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateScalar</name></member>
      <member refid="a01421_1af77a266d1ffc5fdeea20a342414a71f4" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateScalarImpl</name></member>
      <member refid="a01421_1afc32fd65e2c9d5dcd8568ef056596a1d" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateVector</name></member>
      <member refid="a01421_1aa25cd816f70b28d63413c297eb2a8fe5" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>calculateVectorImpl</name></member>
      <member refid="a01421_1a110f90b96f46170073656bf013700688" prot="private" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>computeSupportedResultTypes</name></member>
      <member refid="a01421_1a14fdffeb8d301d73b605ce7fc1732b98" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>FEMixin</name></member>
      <member refid="a01421_1acf3003809bd583f33bd0a516d3255385" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>FERequirementType</name></member>
      <member refid="a01421_1ad037d914bd0a3933ebe3fc11caa84e39" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>hasSkill</name></member>
      <member refid="a01421_1a2f8cdcc80b7aa6db4fac30a3e801de2e" prot="private" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>implementsCalculateMatrixImpl</name></member>
      <member refid="a01421_1a4783ce320146e5535f9d65d22d806e5b" prot="private" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>implementsCalculateScalarImpl</name></member>
      <member refid="a01421_1a921897b50501512c28cda03b6592111b" prot="private" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>implementsCalculateVectorImpl</name></member>
      <member refid="a01421_1a98c214702f5ed3617ae68759a1f9bead" prot="private" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>invokeBind</name></member>
      <member refid="a01421_1af20e97c72e6f0bcec8e156aa367f126c" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>LocalView</name></member>
      <member refid="a01421_1ada59c15363d83f6e635ecd6e1672d6a4" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>SupportedResultTypes</name></member>
      <member refid="a01421_1a78dab4c9a5818baef9889f3e0523b562" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>Traits</name></member>
      <member refid="a01421_1acbf5789e676110b6a812fbc67aca366d" prot="protected" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>underlying</name></member>
      <member refid="a01421_1aa3008bb76b6b23ca15c55a1d1485d484" prot="protected" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>underlying</name></member>
      <member refid="a01421_1a1eeb8c1a6f93d0c7aa5f8f15b85a22d5" prot="public" virt="non-virtual"><scope>Ikarus::FEMixin</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
