<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01310" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::Traction</compoundname>
    <includes refid="a00194" local="no">ikarus/finiteelements/mechanics/loads/traction.hh</includes>
    <templateparamlist>
      <param>
        <type>typename DisplacementBasedElement</type>
      </param>
      <param>
        <type>typename Traits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" prot="public" static="no">
        <type>typename Traits::FERequirementType</type>
        <definition>using Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::Traction::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="25" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01310_1aa929e87072d4632e34dae86f12f35b6f" prot="public" static="no">
        <type>typename Traits::LocalView</type>
        <definition>using Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::Traction::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="26" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01310_1a055e8c867a09ddb37177fcecfbedd827" prot="public" static="no">
        <type>typename Traits::GridView</type>
        <definition>using Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::Traction::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="27" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01310_1a38f601316eb612388ff73f6142e9aa74" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::Traction::myDim</qualifiedname>
        <initializer>= Traits::mydim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="28" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01310_1a1eee242b581174d0fd8e7587130234be" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Traction::worldDim</qualifiedname>
        <initializer>= Traits::worlddim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="29" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="29" bodyend="-1"/>
        <referencedby refid="a01310_1a0cac2c7cc2a06ae38bc83f97664e4d8c" compoundref="a00194" startline="116" endline="147">Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01310_1a82e6bb2f2dfce28b5582f6dcd153f320" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="a01310_1a1eee242b581174d0fd8e7587130234be" kindref="member">worldDim</ref> &gt;(const <ref refid="a01378" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01310_1a1eee242b581174d0fd8e7587130234be" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::neumannBoundaryLoad</definition>
        <argsstring></argsstring>
        <name>neumannBoundaryLoad</name>
        <qualifiedname>Ikarus::Traction::neumannBoundaryLoad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="155" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01310_1a7153df13be7ba76879a15abff1913b3b" prot="private" static="no" mutable="no">
        <type>const BoundaryPatch&lt; <ref refid="a01310_1a055e8c867a09ddb37177fcecfbedd827" kindref="member">GridView</ref> &gt; *</type>
        <definition>const BoundaryPatch&lt;GridView&gt;* Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::neumannBoundary</definition>
        <argsstring></argsstring>
        <name>neumannBoundary</name>
        <qualifiedname>Ikarus::Traction::neumannBoundary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="156" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01310_1ab0350cc85099b73b31b6f337bba45052" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NeumannBoundaryLoad</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::Traction</definition>
        <argsstring>(const BoundaryPatch&lt; GridView &gt; *p_neumannBoundary, NeumannBoundaryLoad p_neumannBoundaryLoad)</argsstring>
        <name>Traction</name>
        <qualifiedname>Ikarus::Traction::Traction</qualifiedname>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="a01310_1a055e8c867a09ddb37177fcecfbedd827" kindref="member">GridView</ref> &gt; *</type>
          <declname>p_neumannBoundary</declname>
        </param>
        <param>
          <type>NeumannBoundaryLoad</type>
          <declname>p_neumannBoundaryLoad</declname>
        </param>
        <briefdescription>
<para>Constructor for the Loads class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NeumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="39" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="a01310_1ac9ed9f5497683a52effe2c572056c6e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Traction::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given <ref refid="a01250" kindref="compound">FERequirements</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="a01250" kindref="compound">FERequirements</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="56" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="a01310_1a7c9d37bb3d426f00c1451d5a5222b748" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Traction::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="65" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="a01310_1ad5b9f64124013ab2e98b6494e9b511b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Traction::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="75" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="75" bodyend="77"/>
        <referencedby refid="a01306_1a9d491b6c69f9f28b2a838075526fa705" compoundref="a02515" startline="187" endline="207">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01346_1a4cdd78cc86c784202967911c9953e667" compoundref="a02521" startline="226" endline="248">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01310_1a3b3de553171d016228f21cbac1e7f47d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Traction::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="81" bodyend="113"/>
        <referencedby refid="a01298_1a83c5d12a0591fce31bc29ea903156863" compoundref="a02509" startline="353" endline="377">Ikarus::KirchhoffLoveShell&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01306_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="a02515" startline="244" endline="267">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01346_1aa5bba94f05661386e4e62d6c74889490" compoundref="a02521" startline="283" endline="305">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01310_1a0cac2c7cc2a06ae38bc83f97664e4d8c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Traction::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Integration rule along the boundary</para>
<para>The value of the local function wrt the i-th coeff</para>
<para>Value of the Neumann data at the current position</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="116" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="116" bodyend="147"/>
        <referencedby refid="a01298_1a41a0a9873dd4107fd444250de72e99bc" compoundref="a02509" startline="317" endline="350">Ikarus::KirchhoffLoveShell&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01306_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="a02515" startline="270" endline="293">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01346_1ab3328f45d8603589239dcea4c86a745b" compoundref="a02521" startline="308" endline="330">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01310_1aae1b4a04dd13b2ec2145ef141bf3190c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Traction::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="150" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="150" bodyend="151"/>
        <referencedby refid="a01298_1aab5382fc4bf1bac0f78dbd306a6ba010" compoundref="a02509" startline="271" endline="314">Ikarus::KirchhoffLoveShell&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrixImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01310_1a41b502e50ce85a22fa535f32c79d9de3" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const DisplacementBasedElement &amp;</type>
        <definition>constexpr const DisplacementBasedElement &amp; Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;::dbElement</definition>
        <argsstring>() const</argsstring>
        <name>dbElement</name>
        <qualifiedname>Ikarus::Traction::dbElement</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying displacement-based finite element (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying displacement-based finite element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="163" column="44" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="163" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01310" kindref="compound">Traction</ref> class represents distributed traction load that can be applied. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DisplacementBasedElement</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the displacement-based finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of traits for handling finite elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::KirchhoffLoveShell&lt; Basis_, FERequirements_, useEigenRef &gt;</label>
        <link refid="a01298"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;</label>
        <link refid="a01306"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;</label>
        <link refid="a01346"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::Traction&lt; DisplacementBasedElement, Traits &gt;</label>
        <link refid="a01310"/>
      </node>
      <node id="2">
        <label>Ikarus::Traction&lt; KirchhoffLoveShell&lt; Basis_, FERequirements&lt;&gt;, false &gt;, FETraits&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01310"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; KirchhoffLoveShell&lt; Basis_, FERequirements&lt;&gt;, false &gt;, FETraits&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Traction&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, FETraits&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01310"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; Basis_, FERequirements&lt;&gt;, false &gt;, FETraits&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; NonLinearElastic&lt; Basis_, Material_, FERequirements&lt;&gt;, false &gt;, FETraits&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</label>
        <link refid="a01310"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NonLinearElastic&lt; Basis_, Material_, FERequirements&lt;&gt;, false &gt;, FETraits&lt; Basis_, FERequirements&lt;&gt;, false &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="22" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="23" bodyend="166"/>
    <listofallmembers>
      <member refid="a01310_1ad5b9f64124013ab2e98b6494e9b511b3" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateMatrix</name></member>
      <member refid="a01310_1aae1b4a04dd13b2ec2145ef141bf3190c" prot="protected" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01310_1ac9ed9f5497683a52effe2c572056c6e0" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateScalar</name></member>
      <member refid="a01310_1a3b3de553171d016228f21cbac1e7f47d" prot="protected" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateScalarImpl</name></member>
      <member refid="a01310_1a7c9d37bb3d426f00c1451d5a5222b748" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateVector</name></member>
      <member refid="a01310_1a0cac2c7cc2a06ae38bc83f97664e4d8c" prot="protected" virt="non-virtual"><scope>Ikarus::Traction</scope><name>calculateVectorImpl</name></member>
      <member refid="a01310_1a41b502e50ce85a22fa535f32c79d9de3" prot="private" virt="non-virtual"><scope>Ikarus::Traction</scope><name>dbElement</name></member>
      <member refid="a01310_1ab2e0b2df428dd9dd03b3589e7502b4c1" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>FERequirementType</name></member>
      <member refid="a01310_1a055e8c867a09ddb37177fcecfbedd827" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>GridView</name></member>
      <member refid="a01310_1aa929e87072d4632e34dae86f12f35b6f" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>LocalView</name></member>
      <member refid="a01310_1a38f601316eb612388ff73f6142e9aa74" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>myDim</name></member>
      <member refid="a01310_1a7153df13be7ba76879a15abff1913b3b" prot="private" virt="non-virtual"><scope>Ikarus::Traction</scope><name>neumannBoundary</name></member>
      <member refid="a01310_1a82e6bb2f2dfce28b5582f6dcd153f320" prot="private" virt="non-virtual"><scope>Ikarus::Traction</scope><name>neumannBoundaryLoad</name></member>
      <member refid="a01310_1ab0350cc85099b73b31b6f337bba45052" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>Traction</name></member>
      <member refid="a01310_1a1eee242b581174d0fd8e7587130234be" prot="public" virt="non-virtual"><scope>Ikarus::Traction</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
