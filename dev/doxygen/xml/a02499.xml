<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a02499" kind="file" language="C++">
    <compoundname>finiteelements/mechanics/nonlinearelastic.hh</compoundname>
    <includes local="no">dune/fufem/boundarypatch.hh</includes>
    <includes local="no">dune/geometry/quadraturerules.hh</includes>
    <includes local="no">dune/geometry/type.hh</includes>
    <includes local="no">dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh</includes>
    <includes local="no">dune/localfefunctions/expressions/greenLagrangeStrains.hh</includes>
    <includes local="no">dune/localfefunctions/impl/standardLocalFunction.hh</includes>
    <includes local="no">dune/localfefunctions/manifolds/realTuple.hh</includes>
    <includes refid="a00119" local="no">ikarus/finiteelements/febases/powerbasisfe.hh</includes>
    <includes refid="a00182" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="a00131" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a00173" local="no">ikarus/finiteelements/mechanics/loads.hh</includes>
    <includes refid="a00158" local="no">ikarus/finiteelements/mechanics/materials/tags.hh</includes>
    <includes refid="a00125" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includes refid="a00029" local="no">ikarus/utils/defaultfunctions.hh</includes>
    <includes refid="a00035" local="no">ikarus/utils/eigendunetransformations.hh</includes>
    <includes refid="a00065" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includedby refid="a02502" local="no">nonlinearelastic.hh</includedby>
    <incdepgraph>
      <node id="9">
        <label>ikarus/finiteelements/febases/powerbasisfe.hh</label>
        <link refid="a00119"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="a00182"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00131"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="a00128"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/finiteelements/mechanics/loads.hh</label>
        <link refid="a00173"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ikarus/finiteelements/mechanics/loads/traction.hh</label>
        <link refid="a00143"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>ikarus/finiteelements/mechanics/loads/volume.hh</label>
        <link refid="a00140"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00158"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>nonlinearelastic.hh</label>
        <link refid="a02499"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00125"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00020"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00029"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/utils/eigendunetransformations.hh</label>
        <link refid="a00035"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>linearalgebrahelper.hh</label>
        <link refid="a00065"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00008"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00059"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Eigen/Core</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="45">
        <label>assert.h</label>
      </node>
      <node id="41">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="12">
        <label>concepts</label>
      </node>
      <node id="46">
        <label>dune/common/diagonalmatrix.hh</label>
      </node>
      <node id="28">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="32">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="47">
        <label>dune/common/fmatrix.hh</label>
      </node>
      <node id="48">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="22">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="39">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="2">
        <label>dune/fufem/boundarypatch.hh</label>
      </node>
      <node id="16">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="17">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="3">
        <label>dune/geometry/quadraturerules.hh</label>
      </node>
      <node id="4">
        <label>dune/geometry/type.hh</label>
      </node>
      <node id="40">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="49">
        <label>dune/istl/scaledidmatrix.hh</label>
      </node>
      <node id="5">
        <label>dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh</label>
      </node>
      <node id="6">
        <label>dune/localfefunctions/expressions/greenLagrangeStrains.hh</label>
      </node>
      <node id="7">
        <label>dune/localfefunctions/impl/standardLocalFunction.hh</label>
      </node>
      <node id="8">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="25">
        <label>iosfwd</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="37">
        <label>random</label>
      </node>
      <node id="38">
        <label>ranges</label>
      </node>
      <node id="27">
        <label>set</label>
      </node>
      <node id="21">
        <label>tuple</label>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>nonlinearelastic.hh</label>
        <link refid="a02499"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nonlinearelastic.hh</label>
        <link refid="a02502"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01332" prot="public">Ikarus::NonLinearElastic</innerclass>
    <innernamespace refid="a00316">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the NonLinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DUNE_LOCALFEFUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/fufem/boundarypatch.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/geometry/quadraturerules.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/geometry/type.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/expressions/greenLagrangeStrains.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/impl/standardLocalFunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dune/localfefunctions/manifolds/realTuple.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00119" kindref="compound">ikarus/finiteelements/febases/powerbasisfe.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00182" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00131" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00173" kindref="compound">ikarus/finiteelements/mechanics/loads.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00158" kindref="compound">ikarus/finiteelements/mechanics/materials/tags.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00125" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00029" kindref="compound">ikarus/utils/defaultfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00035" kindref="compound">ikarus/utils/eigendunetransformations.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;<ref refid="a00065" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00316" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Material_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FERequirements_<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="44" refid="a01332" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01332" kindref="compound">NonLinearElastic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01216" kindref="compound">PowerBasisFE</ref>&lt;typename<sp/>Basis_::FlatBasis&gt;,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01300" kindref="compound">Volume</ref>&lt;NonLinearElastic&lt;Basis_,<sp/>Material_,<sp/>FERequirements_,<sp/>useEigenRef&gt;,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraitsFromFE&lt;Basis_,<sp/>FERequirements_,<sp/>useEigenRef&gt;&gt;,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01296" kindref="compound">Traction</ref>&lt;NonLinearElastic&lt;Basis_,<sp/>Material_,<sp/>FERequirements_,<sp/>useEigenRef&gt;,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraitsFromFE&lt;Basis_,<sp/>FERequirements_,<sp/>useEigenRef&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="a01332_1aad6d75ca17e07cb7deab8f2d2e76b0d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01336" kindref="compound">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01336" kindref="compound">TraitsFromFE&lt;Basis_, FERequirements_, useEigenRef&gt;</ref>;</highlight></codeline>
<codeline lineno="51" refid="a01332_1ae61be1f5b6bdd9443c5ac05e1c526e2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1ae61be1f5b6bdd9443c5ac05e1c526e2f" kindref="member">Basis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1a6a750e6394db5c344790453319075dd4" kindref="member">Traits::Basis</ref>;</highlight></codeline>
<codeline lineno="52" refid="a01332_1afc4ec54126ffcf064c026548b8def36f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1afc4ec54126ffcf064c026548b8def36f" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1a4cd4d3b203993f8b5de5ca968bda0b97" kindref="member">Traits::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="53" refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1ae29466435644541bf50d0f8fecbac1dd" kindref="member">Traits::FERequirementType</ref>;</highlight></codeline>
<codeline lineno="54" refid="a01332_1a734b832d2e3da29878954ac6e195b777" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1a734b832d2e3da29878954ac6e195b777" kindref="member">LocalView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1a36437741d63f3d325f363c8df4d2aac5" kindref="member">Traits::LocalView</ref>;</highlight></codeline>
<codeline lineno="55" refid="a01332_1adfc5aadc33a3225e2493c91d106d951d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1adfc5aadc33a3225e2493c91d106d951d" kindref="member">Geometry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1af8b05c9e9d401efcdb7d97e197b9fc1f" kindref="member">Traits::Geometry</ref>;</highlight></codeline>
<codeline lineno="56" refid="a01332_1adf29dfa503f9123880503d874f80e670" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1adf29dfa503f9123880503d874f80e670" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1ae15acf23e6cfbae7db57da6d4dd5ca80" kindref="member">Traits::GridView</ref>;</highlight></codeline>
<codeline lineno="57" refid="a01332_1a6b5b825027cf741ba76c9683701373d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1a6b5b825027cf741ba76c9683701373d5" kindref="member">Element</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1a179f7c62c0c2fef548d7ae31705de71e" kindref="member">Traits::Element</ref>;</highlight></codeline>
<codeline lineno="58" refid="a01332_1a10a6dce759626ef381f39b5798316619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1a10a6dce759626ef381f39b5798316619" kindref="member">ResultRequirementsType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01336_1a5b3e19bb8aac79a0cceeacd20c021d97" kindref="member">Traits::ResultRequirementsType</ref>;</highlight></codeline>
<codeline lineno="59" refid="a01332_1a40a4c51d68b06cefe120b931a6fb8647" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01216" kindref="compound">BasePowerFE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01216" kindref="compound">PowerBasisFE&lt;FlatBasis&gt;</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>globalIndices<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="a01332_1ac44404a0f9d5ee9c786775dc0b8ef760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1ac44404a0f9d5ee9c786775dc0b8ef760" kindref="member">Material</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Material_;</highlight></codeline>
<codeline lineno="61" refid="a01332_1a6d5e4e1db7af32672a4345589e00ebe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01300" kindref="compound">VolumeType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01300" kindref="compound">Volume&lt;NonLinearElastic&lt;Basis_, Material_, FERequirements_, useEigenRef&gt;</ref>,<sp/><ref refid="a01336" kindref="compound">Traits</ref>&gt;;</highlight></codeline>
<codeline lineno="62" refid="a01332_1a030408ba33d6f027a9057e8d3a829159" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01296" kindref="compound">TractionType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01296" kindref="compound">Traction&lt;NonLinearElastic&lt;Basis_, Material_, FERequirements_, useEigenRef&gt;</ref>,<sp/><ref refid="a01336" kindref="compound">Traits</ref>&gt;;</highlight></codeline>
<codeline lineno="63" refid="a01332_1ac980630bbf94190d87100b44b7a53837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01332_1ac980630bbf94190d87100b44b7a53837" kindref="member">LocalBasisType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="a01332_1a089f6bc160374739a5111aa99e2f4b95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01332_1a089f6bc160374739a5111aa99e2f4b95" kindref="member">myDim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01336_1a9e797097afc9ec86a072555b99778bf5" kindref="member">Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="66" refid="a01332_1a2b89a8d5f5b634b295327b9cdbf8579d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1a2b89a8d5f5b634b295327b9cdbf8579d" kindref="member">strainType</ref><sp/>=<sp/><ref refid="a00305_1ggacef1e451de1a99845c59d7391064fb8faca3f1e4bb21fd00a3d29c5d8aff8e11e" kindref="member">StrainTags::greenLagrangian</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VolumeLoad<sp/>=<sp/>utils::LoadDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeumannBoundaryLoad<sp/>=<sp/>utils::LoadDefault&gt;</highlight></codeline>
<codeline lineno="81" refid="a01332_1afcba98cc2fcdf140b11fd652dcc7d361" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01332_1afcba98cc2fcdf140b11fd652dcc7d361" kindref="member">NonLinearElastic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1ae61be1f5b6bdd9443c5ac05e1c526e2f" kindref="member">Basis</ref>&amp;<sp/>globalBasis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element&amp;<sp/>element,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1ac44404a0f9d5ee9c786775dc0b8ef760" kindref="member">Material</ref>&amp;<sp/>p_mat,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VolumeLoad<sp/>p_volumeLoad<sp/>=<sp/>{},<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/>p_neumannBoundary<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeumannBoundaryLoad<sp/>p_neumannBoundaryLoad<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="a01332_1a40a4c51d68b06cefe120b931a6fb8647" kindref="member">BasePowerFE</ref>(globalBasis.flat(),<sp/>element),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01332_1a6d5e4e1db7af32672a4345589e00ebe8" kindref="member">VolumeType</ref>(p_volumeLoad),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01332_1a030408ba33d6f027a9057e8d3a829159" kindref="member">TractionType</ref>(p_neumannBoundary,<sp/>p_neumannBoundaryLoad),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat{p_mat}<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().bind(element);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>first_child<sp/>=<sp/>this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().tree().child(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/><sp/>=<sp/>first_child.finiteElement();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_shared&lt;const<sp/>Geometry&gt;(this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().<ref refid="a01332_1a19b3729a38801ee4b804c5a90c95c763" kindref="member">geometry</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numberOfNodes_<sp/><sp/><sp/><sp/>=<sp/>fe.size();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>(fe.localBasis().order());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>localBasis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::CachedLocalBasis(fe.localBasis());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().getQuadratureRule(order_);<sp/>})</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().isTrimmed())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis.bind(this-&gt;localView().element().impl().getQuadratureRule(order_),<sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/>order_),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/>order_),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="115" refid="a01332_1a89b811cd039a701d8a1d2c5b8796c50f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1a89b811cd039a701d8a1d2c5b8796c50f" kindref="member">displacementFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.getGlobalSolution(<ref refid="a00303_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">Ikarus::FESolutions::displacement</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/><sp/><sp/><sp/><sp/>=<sp/>Ikarus::FEHelper::localSolutionBlockVector&lt;Traits&gt;(d,<sp/>this-&gt;<ref refid="a01216_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>(),<sp/>dx);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::StandardLocalFunction<sp/>uFunction(localBasis,<sp/>disp,<sp/>geo_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uFunction;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="132" refid="a01332_1ae258d2211b130b7b6f167aa86ac1fab7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1ae258d2211b130b7b6f167aa86ac1fab7" kindref="member">strainFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::greenLagrangeStrains(<ref refid="a01332_1a89b811cd039a701d8a1d2c5b8796c50f" kindref="member">displacementFunction</ref>(par,<sp/>dx));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strainDim,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="147" refid="a01332_1ae091d629e7aa235d88e381368a75f5bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1ae091d629e7aa235d88e381368a75f5bc" kindref="member">materialTangent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>strainDim&gt;&amp;<sp/>strain)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ScalarType,<sp/>double&gt;)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat.template<sp/>tangentModuli&lt;strainType,<sp/>voigt&gt;(strain);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>matAD<sp/>=<sp/>mat.template<sp/>rebind&lt;ScalarType&gt;();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matAD.template<sp/>tangentModuli&lt;strainType,<sp/>voigt&gt;(strain);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strainDim&gt;</highlight></codeline>
<codeline lineno="165" refid="a01332_1a5e139eb8977fd8a47656dc680ac15214" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1a5e139eb8977fd8a47656dc680ac15214" kindref="member">getInternalEnergy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>strainDim&gt;&amp;<sp/>strain)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ScalarType,<sp/>double&gt;)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat.template<sp/>storedEnergy&lt;strainType&gt;(strain);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>matAD<sp/>=<sp/>mat.template<sp/>rebind&lt;ScalarType&gt;();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matAD.template<sp/>storedEnergy&lt;strainType&gt;(strain);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strainDim,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="184" refid="a01332_1ad86ce202de620c405536c11514a0f6db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1ad86ce202de620c405536c11514a0f6db" kindref="member">getStress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>strainDim&gt;&amp;<sp/>strain)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ScalarType,<sp/>double&gt;)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat.template<sp/>stresses&lt;strainType,<sp/>voigt&gt;(strain);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>matAD<sp/>=<sp/>mat.template<sp/>rebind&lt;ScalarType&gt;();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matAD.template<sp/>stresses&lt;strainType,<sp/>voigt&gt;(strain);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="a01332_1a19b3729a38801ee4b804c5a90c95c763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1adfc5aadc33a3225e2493c91d106d951d" kindref="member">Geometry</ref>&amp;<sp/><ref refid="a01332_1a19b3729a38801ee4b804c5a90c95c763" kindref="member">geometry</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*geo_;<sp/>}</highlight></codeline>
<codeline lineno="194" refid="a01332_1aca8d346ffc5392056481de5c925e4866" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="a01332_1aca8d346ffc5392056481de5c925e4866" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfNodes_;<sp/>}</highlight></codeline>
<codeline lineno="195" refid="a01332_1a3cf664c8926af751cbc5c55c42a860bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01332_1a3cf664c8926af751cbc5c55c42a860bc" kindref="member">order</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="a01332_1a744057f5543df5a612211f6fb1acbd7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01332_1a744057f5543df5a612211f6fb1acbd7c" kindref="member">calculateScalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateScalarImpl&lt;double&gt;(par);<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="a01332_1affd164f3f82e4856e5fea2cf9479324c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01332_1affd164f3f82e4856e5fea2cf9479324c" kindref="member">calculateVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;&gt;<sp/>force)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateVectorImpl&lt;double&gt;(par,<sp/>force);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="a01332_1a4cdd78cc86c784202967911c9953e667" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01332_1a4cdd78cc86c784202967911c9953e667" kindref="member">calculateMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;&gt;<sp/>K)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00321" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01332_1ae258d2211b130b7b6f167aa86ac1fab7" kindref="member">strainFunction</ref>(par);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(eps.evaluate(gpIndex,<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>))).eval();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01332_1ae091d629e7aa235d88e381368a75f5bc" kindref="member">materialTangent</ref>(EVoigt);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stresses<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01332_1ad86ce202de620c405536c11514a0f6db" kindref="member">getStress</ref>(EVoigt);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numberOfNodes_;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopJ<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(j)),<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kgIJ<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i,<sp/>j)),<sp/>along(stresses),<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K.template<sp/>block&lt;myDim,<sp/>myDim&gt;(i<sp/>*<sp/><ref refid="a01332_1a089f6bc160374739a5111aa99e2f4b95" kindref="member">myDim</ref>,<sp/>j<sp/>*<sp/><ref refid="a01332_1a089f6bc160374739a5111aa99e2f4b95" kindref="member">myDim</ref>)<sp/>+=<sp/>(bopI.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJ<sp/>+<sp/>kgIJ)<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>due<sp/>to<sp/>displacement-dependent<sp/>external<sp/>loads,<sp/>e.g.,<sp/>follower<sp/>loads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01300_1ab34ccd72bb7397283f7c2dcbf595841e" kindref="member">VolumeType::calculateMatrix</ref>(par,<sp/>K);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01296_1ad5b9f64124013ab2e98b6494e9b511b3" kindref="member">TractionType::calculateMatrix</ref>(par,<sp/>K);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="a01332_1afc5090fbbd1054eaa33932e88f2fdb42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01332_1afc5090fbbd1054eaa33932e88f2fdb42" kindref="member">calculateAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a10a6dce759626ef381f39b5798316619" kindref="member">ResultRequirementsType</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01248" kindref="compound">ResultTypeMap&lt;double&gt;</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00321" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01332_1a89b811cd039a701d8a1d2c5b8796c50f" kindref="member">displacementFunction</ref>(req.getFERequirements());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>uFunction.evaluateDerivative(local,<sp/>Dune::wrt(spatialAll),<sp/>Dune::on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(0.5<sp/>*<sp/>(H.transpose()<sp/>+<sp/>H<sp/>+<sp/>H.transpose()<sp/>*<sp/>H)).eval();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/><sp/><sp/><sp/>=<sp/><ref refid="a00312_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(E);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00305_1gga70b4ce43c53cc5e949d49919f437501eab13248d68ac5516c015337b68346fc21" kindref="member">PK2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mat.template<sp/>stresses&lt;StrainTags::greenLagrangian&gt;(EVoigt);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.isResultRequested(<ref refid="a00303_1gga531be167e924b749eb8b4ccc7f1c18c9afa06a140291f2b4bc25c81e5e6bac241" kindref="member">ResultType::PK2Stress</ref>))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="a01248_1aa399a96000daf40950e388eb0b23a7c0" kindref="member">insertOrAssignResult</ref>(<ref refid="a00303_1gga531be167e924b749eb8b4ccc7f1c18c9afa06a140291f2b4bc25c81e5e6bac241" kindref="member">ResultType::PK2Stress</ref>,<sp/><ref refid="a00305_1gga70b4ce43c53cc5e949d49919f437501eab13248d68ac5516c015337b68346fc21" kindref="member">PK2</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>requested<sp/>result<sp/>type<sp/>is<sp/>NOT<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Geometry&gt;<sp/>geo_;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt;&gt;<sp/>localBasis;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01304" kindref="compound">Material</ref><sp/>mat;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfNodes_{0};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order_{};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="281" refid="a01332_1aa5bba94f05661386e4e62d6c74889490" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01332_1aa5bba94f05661386e4e62d6c74889490" kindref="member">calculateScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>ScalarType<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00321" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01332_1a89b811cd039a701d8a1d2c5b8796c50f" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01332_1ae258d2211b130b7b6f167aa86ac1fab7" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="a00303_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">Ikarus::FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ScalarType<sp/>energy<sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(eps.evaluate(gpIndex,<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>))).eval();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internalEnergy<sp/>=<sp/><ref refid="a01332_1a5e139eb8977fd8a47656dc680ac15214" kindref="member">getInternalEnergy</ref>(EVoigt);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>internalEnergy<sp/>*<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/><ref refid="a01300_1a38b6d9f88ad5734093413497e3ac7b29" kindref="member">VolumeType::calculateScalarImpl</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>or<sp/>surface<sp/>loads,<sp/>i.e.,<sp/>neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/><ref refid="a01296_1a3b3de553171d016228f21cbac1e7f47d" kindref="member">TractionType::calculateScalarImpl</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="305" refid="a01332_1ab3328f45d8603589239dcea4c86a745b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01332_1ab3328f45d8603589239dcea4c86a745b" kindref="member">calculateVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01332_1a845acdbdee4d31a14517c29a6e41a633" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ScalarType&gt;<sp/>force,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00321" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/><ref refid="a01332_1ae258d2211b130b7b6f167aa86ac1fab7" kindref="member">strainFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>eps.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo_-&gt;integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EVoigt<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(eps.evaluate(gpIndex,<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>))).eval();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stresses<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01332_1ad86ce202de620c405536c11514a0f6db" kindref="member">getStress</ref>(EVoigt);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bopI<sp/>=<sp/>eps.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)),<sp/>on(<ref refid="a01216_1a0fe5d4e10f331905629351786c72ce6a" kindref="member">gridElement</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;myDim&gt;(<ref refid="a01332_1a089f6bc160374739a5111aa99e2f4b95" kindref="member">myDim</ref><sp/>*<sp/>i)<sp/>+=<sp/>bopI.transpose()<sp/>*<sp/>stresses<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01300_1af2fc872a641d42398fc9d8bd60aa973c" kindref="member">VolumeType::calculateVectorImpl</ref>(par,<sp/>force,<sp/>dx);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces,<sp/>boundary<sp/>forces,<sp/>i.e.,<sp/>at<sp/>the<sp/>Neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01296_1a0cac2c7cc2a06ae38bc83f97664e4d8c" kindref="member">TractionType::calculateVectorImpl</ref>(par,<sp/>force,<sp/>dx);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>error<sp/>NonLinearElastic<sp/>depends<sp/>on<sp/>dune-localfefunctions,<sp/>which<sp/>is<sp/>not<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh"/>
  </compounddef>
</doxygen>
