<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d6/d02/a01542" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ControlLogger</compoundname>
    <basecompoundref refid="da/dcf/a01558" prot="public" virt="non-virtual">Ikarus::IObserver&lt; ControlMessages &gt;</basecompoundref>
    <includes refid="d3/de5/a00209" local="no">ikarus/utils/observer/controllogger.hh</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d6/d02/a01542_1ad819dbc0a3255f89715cac1904c2fe10" prot="private" static="no">
        <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
        <definition>using Ikarus::ControlLogger::TimePoint =  std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;</definition>
        <argsstring></argsstring>
        <name>TimePoint</name>
        <qualifiedname>Ikarus::ControlLogger::TimePoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="55" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d02/a01542_1a2a3dac2eb251a5ec440bde375f525f89" prot="private" static="no" mutable="no">
        <type>TimePoint</type>
        <definition>TimePoint Ikarus::ControlLogger::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>Ikarus::ControlLogger::start</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="56" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d02/a01542_1a8a7c07f5447887f941c2a1dbd946b120" prot="private" static="no" mutable="no">
        <type>TimePoint</type>
        <definition>TimePoint Ikarus::ControlLogger::stop</definition>
        <argsstring></argsstring>
        <name>stop</name>
        <qualifiedname>Ikarus::ControlLogger::stop</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="57" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d02/a01542_1a9d4b43d38ff5b7c6845df0c405ecb2a7" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds Ikarus::ControlLogger::duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <qualifiedname>Ikarus::ControlLogger::duration</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="58" column="31" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d02/a01542_1a10ad975b5a99ce217fd1d122963f46e8" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="da/dcf/a01558_1a478eaa94650cf462a050e28ecf098773">updateImpl</reimplements>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for control message logging. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="29" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d6/d02/a01542_1a9c8c660297d060779e05303c63c1b4be" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message, const std::string &amp;val) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="da/dcf/a01558_1ae97b76e37ab99f985a0ef71f4a9efd37">updateImpl</reimplements>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for logging control messages with string values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="36" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d6/d02/a01542_1a78f7ab50c3ad889e9dafe84ecc59bb9f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message, int val1, const std::string &amp;val2) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="da/dcf/a01558_1af53b8b154a887fce37fee355b0244c21">updateImpl</reimplements>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for logging control messages with an integer and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d6/d02/a01542_1aca92cd9bf83a7575260a015a646aca8c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message, int val1, double val2) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="da/dcf/a01558_1a4d0a13cbe1104d10c4ec5e928f64ab4b">updateImpl</reimplements>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for logging control messages with an integer and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a8c171635a257ce7fe905a58337717efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="34" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a0f235d3f9f49582c0902dfcd5217f4a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="44" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a97bf3fd861a8eac696a97ec56d953b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="54" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a05a6a76b6875406ae8ff5e05f2662d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="64" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1ab87bc0dab48de914d7f5221fb9c3477b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and two values (integer and double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="75" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a5d2fb507095933199fab726c17e01bcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message, an integer value, and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="86" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a20e3859480f6cab562f33ce9da888380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(ControlMessages message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an Eigen::VectorXd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorXd associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="96" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="96" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="da/dcf/a01558_1a663889f78a7dbd3561fa6a497e023a23" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, double val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="103" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1adc61a4813394bdde201018db198544a3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, int val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="104" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="da/dcf/a01558_1a4b7267849be75994c85c8ebe7af10465" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(ControlMessages message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="d8/d17/a00304_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="108" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d6/d02/a01542" kindref="compound">ControlLogger</ref> class for logging control messages. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements an observer for control messages and logs relevant information based on the received messages. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; ControlMessages &gt;</label>
        <link refid="da/dcf/a01558"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ControlLogger</label>
        <link refid="d6/d02/a01542"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MessageType &gt;</label>
        <link refid="da/dcf/a01558"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; ControlMessages &gt;</label>
        <link refid="da/dcf/a01558"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ControlLogger</label>
        <link refid="d6/d02/a01542"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MessageType &gt;</label>
        <link refid="da/dcf/a01558"/>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="22" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="22" bodyend="59"/>
    <listofallmembers>
      <member refid="d6/d02/a01542_1a9d4b43d38ff5b7c6845df0c405ecb2a7" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>duration</name></member>
      <member refid="d6/d02/a01542_1a2a3dac2eb251a5ec440bde375f525f89" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>start</name></member>
      <member refid="d6/d02/a01542_1a8a7c07f5447887f941c2a1dbd946b120" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>stop</name></member>
      <member refid="d6/d02/a01542_1ad819dbc0a3255f89715cac1904c2fe10" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>TimePoint</name></member>
      <member refid="da/dcf/a01558_1a8c171635a257ce7fe905a58337717efe" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="da/dcf/a01558_1a0f235d3f9f49582c0902dfcd5217f4a1" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="da/dcf/a01558_1a97bf3fd861a8eac696a97ec56d953b47" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="da/dcf/a01558_1a05a6a76b6875406ae8ff5e05f2662d57" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="da/dcf/a01558_1ab87bc0dab48de914d7f5221fb9c3477b" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="da/dcf/a01558_1a5d2fb507095933199fab726c17e01bcf" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="da/dcf/a01558_1a20e3859480f6cab562f33ce9da888380" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="d6/d02/a01542_1a10ad975b5a99ce217fd1d122963f46e8" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="d6/d02/a01542_1a9c8c660297d060779e05303c63c1b4be" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="d6/d02/a01542_1a78f7ab50c3ad889e9dafe84ecc59bb9f" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="d6/d02/a01542_1aca92cd9bf83a7575260a015a646aca8c" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="da/dcf/a01558_1a663889f78a7dbd3561fa6a497e023a23" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="da/dcf/a01558_1adc61a4813394bdde201018db198544a3" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="da/dcf/a01558_1a4b7267849be75994c85c8ebe7af10465" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="da/dcf/a01558_1afda55d0cee706fa7a2df824e2a149a9e" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
