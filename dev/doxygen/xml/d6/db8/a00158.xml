<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d6/db8/a00158" kind="file" language="C++">
    <compoundname>neohooke.hh</compoundname>
    <includes refid="da/d1e/a00149" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <includes refid="d4/d51/a00017" local="no">ikarus/utils/tensorutils.hh</includes>
    <includedby refid="db/ddf/a00164" local="no">materials.hh</includedby>
    <incdepgraph>
      <node id="29">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="dc/dfe/a00125"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="da/d1e/a00149"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neohooke.hh</label>
        <link refid="d6/db8/a00158"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="d9/db6/a00146"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tags.hh</label>
        <link refid="d7/d9a/a00152"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="db/db2/a00020"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ikarus/utils/math.hh</label>
        <link refid="dd/d32/a00041"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ikarus/utils/traits.hh</label>
        <link refid="d9/d2e/a00056"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Eigen/Core</label>
      </node>
      <node id="21">
        <label>Eigen/Sparse</label>
      </node>
      <node id="37">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="15">
        <label>concepts</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="28">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="25">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="13">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="35">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="20">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="36">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="30">
        <label>iosfwd</label>
      </node>
      <node id="31">
        <label>map</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="34">
        <label>random</label>
      </node>
      <node id="11">
        <label>ranges</label>
      </node>
      <node id="32">
        <label>set</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="7">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="17">
        <label>utility</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d9/dd8/a02481"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>linearelastic.hh</label>
        <link refid="d1/d50/a02487"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>materials.hh</label>
        <link refid="db/ddf/a00164"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neohooke.hh</label>
        <link refid="d6/db8/a00158"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kirchhoffloveshell.hh</label>
        <link refid="de/d4e/a02484"/>
      </node>
      <node id="6">
        <label>linearelastic.hh</label>
        <link refid="d5/ddd/a02490"/>
      </node>
      <node id="8">
        <label>material.hh</label>
        <link refid="de/db1/a00197"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>registerelement.hh</label>
        <link refid="dc/d57/a00194"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>_ikarus.cc</label>
        <link refid="d9/dd6/a00272"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d7/d8c/a01306" prot="public">Ikarus::NeoHookeT</innerclass>
    <innernamespace refid="d1/d67/a00310">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the NeoHooke material model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="da/d1e/a00149" kindref="compound">ikarus/finiteelements/mechanics/materials/interface.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d4/d51/a00017" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d1/d67/a00310" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType_&gt;</highlight></codeline>
<codeline lineno="36" refid="d7/d8c/a01306" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/d8c/a01306" kindref="compound">NeoHookeT</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/d34/a01298" kindref="compound">Material</ref>&lt;NeoHookeT&lt;ScalarType_&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="37" refid="d7/d8c/a01306_1a437008f3343a4f701fdd4c5e425313ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d7/d8c/a01306_1a437008f3343a4f701fdd4c5e425313ce" kindref="member">nameImpl</ref>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NeoHooke&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d7/d8c/a01306_1a10eb1792f7a78e2f52c625a01301f5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a10eb1792f7a78e2f52c625a01301f5ef" kindref="member">NeoHookeT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/dc4/a01354" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>mpt)<sp/>:<sp/><ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>{mpt}<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="d7/d8c/a01306_1a2c6a3eab38f9a88b18a869d9e66eda53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d7/d8c/a01306_1a2c6a3eab38f9a88b18a869d9e66eda53" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ScalarType_;</highlight></codeline>
<codeline lineno="46" refid="d7/d8c/a01306_1a5eebe95a0e13399abd7f26020f0c0f3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a5eebe95a0e13399abd7f26020f0c0f3a" kindref="member">worldDimension</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="47" refid="d7/d8c/a01306_1a273e05e32f6a9728440ad3da6669ec7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d7/d8c/a01306_1a273e05e32f6a9728440ad3da6669ec7a" kindref="member">StrainMatrix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;ScalarType,<sp/>worldDimension,<sp/>worldDimension&gt;;</highlight></codeline>
<codeline lineno="48" refid="d7/d8c/a01306_1ac8ebe95bef84eb82bf38ed45261f2173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d7/d8c/a01306_1ac8ebe95bef84eb82bf38ed45261f2173" kindref="member">StressMatrix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d7/d8c/a01306_1a273e05e32f6a9728440ad3da6669ec7a" kindref="member">StrainMatrix</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d7/d8c/a01306_1a505b0b0ada1c096262412fda6a823cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a505b0b0ada1c096262412fda6a823cef" kindref="member">strainTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d9/d0d/a00298_1ggacef1e451de1a99845c59d7391064fb8faea40a9960a7a89c4f366beeab85d07d2" kindref="member">StrainTags::rightCauchyGreenTensor</ref>;</highlight></codeline>
<codeline lineno="51" refid="d7/d8c/a01306_1aa0b04d47fd84e036f8487cf9641abb41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1aa0b04d47fd84e036f8487cf9641abb41" kindref="member">stressTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d9/d0d/a00298_1gga70b4ce43c53cc5e949d49919f437501eab13248d68ac5516c015337b68346fc21" kindref="member">StressTags::PK2</ref>;</highlight></codeline>
<codeline lineno="52" refid="d7/d8c/a01306_1ab6adef71801c1e3d9cff0fc522950c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1ab6adef71801c1e3d9cff0fc522950c1f" kindref="member">tangentModuliTag</ref><sp/><sp/><sp/>=<sp/><ref refid="d9/d0d/a00298_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">TangentModuliTags::Material</ref>;</highlight></codeline>
<codeline lineno="53" refid="d7/d8c/a01306_1a39c43bb592cf54c9a2fd3b60c741a252" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a39c43bb592cf54c9a2fd3b60c741a252" kindref="member">energyAcceptsVoigt</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54" refid="d7/d8c/a01306_1a37a9776bddff633282912937c1e737a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a37a9776bddff633282912937c1e737a3" kindref="member">stressToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55" refid="d7/d8c/a01306_1ada1f302b0b332d6cff1ddfa62ac72871" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1ada1f302b0b332d6cff1ddfa62ac72871" kindref="member">stressAcceptsVoigt</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56" refid="d7/d8c/a01306_1ad72e02a26d4a3b6d8d29f6341a15952a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1ad72e02a26d4a3b6d8d29f6341a15952a" kindref="member">moduliToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57" refid="d7/d8c/a01306_1a0f1786af1344f46596f6e58babd87543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a0f1786af1344f46596f6e58babd87543" kindref="member">moduliAcceptsVoigt</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58" refid="d7/d8c/a01306_1a38a89c3043d1eaa77d3a743b89a99480" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a38a89c3043d1eaa77d3a743b89a99480" kindref="member">derivativeFactor</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="67" refid="d7/d8c/a01306_1a49da0bb7428a0cf780cdcad97ec97b74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d8c/a01306_1a2c6a3eab38f9a88b18a869d9e66eda53" kindref="member">ScalarType</ref><sp/><ref refid="d7/d8c/a01306_1a49da0bb7428a0cf780cdcad97ec97b74" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>C)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Concepts::EigenMatrixOrVoigtNotation3&lt;Derived&gt;);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="dd/d40/a01636" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>traceC<sp/><sp/>=<sp/>C.trace();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logdetF<sp/>=<sp/>log(sqrt(C.determinant()));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref><sp/>/<sp/>2.0<sp/>*<sp/>(traceC<sp/>-<sp/>3<sp/>-<sp/>2<sp/>*<sp/>logdetF)<sp/>+<sp/><ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>/<sp/>2.0<sp/>*<sp/>logdetF<sp/>*<sp/>logdetF;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="dd/d40/a01636" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>energy<sp/>can<sp/>only<sp/>be<sp/>called<sp/>with<sp/>a<sp/>matrix<sp/>and<sp/>not<sp/>a<sp/>vector<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="86" refid="d7/d8c/a01306_1a2cfcf4034eb9e07c06829785ea92c3f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a2cfcf4034eb9e07c06829785ea92c3f4" kindref="member">stressesImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>C)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Concepts::EigenMatrixOrVoigtNotation3&lt;Derived&gt;);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!voigt)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="dd/d40/a01636" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logdetF<sp/>=<sp/>log(sqrt(C.determinant()));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>invC<sp/><sp/><sp/><sp/>=<sp/>C.inverse().eval();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref><sp/>*<sp/>(StrainMatrix::Identity()<sp/>-<sp/>invC)<sp/>+<sp/><ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>*<sp/>logdetF<sp/>*<sp/>invC).eval();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="dd/d40/a01636" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>can<sp/>only<sp/>be<sp/>called<sp/>with<sp/>a<sp/>matrix<sp/>and<sp/>not<sp/>a<sp/>vector<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(voigt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>does<sp/>not<sp/>support<sp/>returning<sp/>stresses<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="108" refid="d7/d8c/a01306_1aec2dfac0aca87f7998a0f0c2b3b63133" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1aec2dfac0aca87f7998a0f0c2b3b63133" kindref="member">tangentModuliImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>C)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Concepts::EigenMatrixOrVoigtNotation3&lt;Derived&gt;);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!voigt)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>invC<sp/><sp/><sp/><sp/>=<sp/>C.inverse().eval();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logdetF<sp/>=<sp/>log(sqrt(C.determinant()));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>CTinv<sp/><sp/><sp/>=<sp/><ref refid="d1/de3/a00306_1ga5cfd9d098384fb067d897b3c0499b447" kindref="member">tensorView</ref>(invC,<sp/>std::array&lt;Eigen::Index,<sp/>2&gt;({3,<sp/>3}));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Eigen::TensorFixedSize&lt;ScalarType,<sp/>Eigen::Sizes&lt;3,<sp/>3&gt;&gt;::NumIndices<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::TensorFixedSize&lt;ScalarType,<sp/>Eigen::Sizes&lt;3,<sp/>3,<sp/>3,<sp/>3&gt;&gt;<sp/>moduli</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>*<sp/><ref refid="d1/de3/a00306_1gab2cea9ac847cc3635812467c9d96ceb4" kindref="member">dyadic</ref>(CTinv,<sp/>CTinv)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>2<sp/>*<sp/>(<ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref><sp/>-<sp/><ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>.<ref refid="d7/dc4/a01354_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>*<sp/>logdetF)<sp/>*<sp/><ref refid="d1/de3/a00306_1gaea03dbfcd8f85ef7af004c7e09244aa9" kindref="member">symTwoSlots</ref>(<ref refid="d1/de3/a00306_1ga8fa2b440586483c1ee0f9b90b9081da2" kindref="member">fourthOrderIKJL</ref>(invC,<sp/>invC),<sp/>{2,<sp/>3}))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.eval();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moduli;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(voigt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>does<sp/>not<sp/>support<sp/>returning<sp/>tangent<sp/>moduli<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarTypeOther&gt;</highlight></codeline>
<codeline lineno="130" refid="d7/d8c/a01306_1a5d32fe6c728cb508b20bc11099baf6a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306_1a5d32fe6c728cb508b20bc11099baf6a1" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306" kindref="compound">NeoHookeT&lt;ScalarTypeOther&gt;</ref>(<ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dc4/a01354" kindref="compound">LamesFirstParameterAndShearModulus</ref><sp/><ref refid="d7/d8c/a01306_1a65f7f8af8bb74bba74ea19836eceab25" kindref="member">lambdaAndmu</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="d1/d67/a00310_1a8d5cb9f5246159271193458daad08fdd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d7/d8c/a01306" kindref="compound">NeoHookeT&lt;double&gt;</ref><sp/><ref refid="d1/d67/a00310_1a8d5cb9f5246159271193458daad08fdd" kindref="member">NeoHooke</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/neohooke.hh"/>
  </compounddef>
</doxygen>
