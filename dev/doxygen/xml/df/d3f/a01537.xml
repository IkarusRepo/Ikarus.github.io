<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="df/d3f/a01537" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;</compoundname>
    <includes refid="da/d1e/a00149" local="no">ikarus/utils/traits.hh</includes>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename C</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="df/d3f/a01537_1a2f1aa4b39b026b2a5d7ed1aa1771ae99" prot="public" static="no">
        <type>R</type>
        <definition>using Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;::return_type =  R</definition>
        <argsstring></argsstring>
        <name>return_type</name>
        <qualifiedname>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;::return_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" line="388" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d3f/a01537_1a3caad5483987543aa9a6d85ad12afd3f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>typename std::tuple_element&lt; i, std::tuple&lt; Args... &gt; &gt;::type</type>
        <definition>using Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;::args_type =  typename std::tuple_element&lt;i, std::tuple&lt;Args...&gt; &gt;::type</definition>
        <argsstring></argsstring>
        <name>args_type</name>
        <qualifiedname>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;::args_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" line="390" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" bodystart="390" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="df/d3f/a01537_1aa6580752d4a80f10bac3b8f4b558f45a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;::numberOfArguments</definition>
        <argsstring></argsstring>
        <name>numberOfArguments</name>
        <qualifiedname>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;::numberOfArguments</qualifiedname>
        <initializer>= sizeof...(Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" line="391" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" bodystart="391" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialization for const member functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" line="387" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" bodystart="387" bodyend="392"/>
    <listofallmembers>
      <member refid="df/d3f/a01537_1a3caad5483987543aa9a6d85ad12afd3f" prot="public" virt="non-virtual"><scope>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;</scope><name>args_type</name></member>
      <member refid="df/d3f/a01537_1aa6580752d4a80f10bac3b8f4b558f45a" prot="public" virt="non-virtual"><scope>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;</scope><name>numberOfArguments</name></member>
      <member refid="df/d3f/a01537_1a2f1aa4b39b026b2a5d7ed1aa1771ae99" prot="public" virt="non-virtual"><scope>Ikarus::Std::FunctionTraits&lt; R(C::*)(Args...) const &gt;</scope><name>return_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
