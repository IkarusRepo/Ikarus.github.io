<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="df/d03/a00062" kind="file" language="C++">
    <compoundname>resultfunction.hh</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">dune/vtk/vtkwriter.hh</includes>
    <includes refid="db/db2/a00020" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="d3/d8b/a00059" local="no">ikarus/io/resultevaluators.hh</includes>
    <includes refid="d4/d81/a00110" local="no">ikarus/utils/eigendunetransformations.hh</includes>
    <incdepgraph>
      <node id="5">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="db/db2/a00020"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ikarus/io/resultevaluators.hh</label>
        <link refid="d3/d8b/a00059"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>resultfunction.hh</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ikarus/utils/eigendunetransformations.hh</label>
        <link refid="d4/d81/a00110"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d1/dc1/a00092"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Eigen/Core</label>
      </node>
      <node id="16">
        <label>assert.h</label>
      </node>
      <node id="17">
        <label>dune/common/diagonalmatrix.hh</label>
      </node>
      <node id="10">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="18">
        <label>dune/common/fmatrix.hh</label>
      </node>
      <node id="19">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="14">
        <label>dune/common/math.hh</label>
      </node>
      <node id="20">
        <label>dune/istl/scaledidmatrix.hh</label>
      </node>
      <node id="4">
        <label>dune/vtk/vtkwriter.hh</label>
      </node>
      <node id="6">
        <label>iosfwd</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="8">
        <label>set</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="d6/da1/a01233" prot="public">Ikarus::ResultFunction</innerclass>
    <innernamespace refid="dd/df3/a00219">Ikarus</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/vtk/vtkwriter.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db/db2/a00020" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d3/d8b/a00059" kindref="compound">ikarus/io/resultevaluators.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d4/d81/a00110" kindref="compound">ikarus/utils/eigendunetransformations.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dd/df3/a00219" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DefaultUserFunction<sp/>{};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElementType_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UserFunction<sp/>=<sp/>Impl::DefaultUserFunction&gt;</highlight></codeline>
<codeline lineno="32" refid="d6/da1/a01233" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/da1/a01233" kindref="compound">ResultFunction</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Dune::VTKFunction&lt;typename<sp/>ElementType_::GridView&gt;<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="d6/da1/a01233_1af9644b833b303bd3cabf3f4fb284effc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/da1/a01233_1af9644b833b303bd3cabf3f4fb284effc" kindref="member">ElementType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ElementType_;</highlight></codeline>
<codeline lineno="35" refid="d6/da1/a01233_1aa661da19892469d54bc070dbd0e04631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/da1/a01233_1aa661da19892469d54bc070dbd0e04631" kindref="member">ResultRequirements</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElementType::ResultRequirementsType;</highlight></codeline>
<codeline lineno="36" refid="d6/da1/a01233_1a60f3b0a6336812436e18ac14de25e0fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/da1/a01233_1a60f3b0a6336812436e18ac14de25e0fc" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElementType::GridView;</highlight></codeline>
<codeline lineno="37" refid="d6/da1/a01233_1a2b614ca2965a4d07f6388f3070c85c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/da1/a01233_1a2b614ca2965a4d07f6388f3070c85c4f" kindref="member">ctype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GridView::ctype;</highlight></codeline>
<codeline lineno="38" refid="d6/da1/a01233_1a1b40b371171256b66b51c1c2b12a37a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/da1/a01233_1a1b40b371171256b66b51c1c2b12a37a3" kindref="member">griddim</ref><sp/>=<sp/>GridView::dimension;</highlight></codeline>
<codeline lineno="39" refid="d6/da1/a01233_1a95b6a8f8be831236e4b2634bc852a342" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GridView::template<sp/>Codim&lt;0&gt;::Entity<sp/><ref refid="d6/da1/a01233_1a95b6a8f8be831236e4b2634bc852a342" kindref="member">Entity</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="d6/da1/a01233_1ae07a0f7cfdc977d153022c33b2c4ada9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/da1/a01233_1ae07a0f7cfdc977d153022c33b2c4ada9" kindref="member">evaluate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/da1/a01233_1a95b6a8f8be831236e4b2634bc852a342" kindref="member">Entity</ref>&amp;<sp/>e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d19/a01217" kindref="compound">Dune::FieldVector&lt;ctype, griddim&gt;</ref>&amp;<sp/>local)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>gridView.indexSet().index(e);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateStressComponent(index,<sp/>local,<sp/>comp);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d6/da1/a01233_1a55ddba55f148fabc822146919f7c2864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/da1/a01233_1a55ddba55f148fabc822146919f7c2864" kindref="member">ncomps</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d19/a01217" kindref="compound">Dune::FieldVector&lt;ctype, griddim&gt;</ref><sp/>val(0.0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fes_-&gt;at(0).calculateAt(resultRequirements_,<sp/>val,<sp/>resultTypeMap);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resultRequirements_.getRequestedResult()<sp/>!=<sp/>resultTypeMap.<ref refid="d9/d65/a01145_1a6c2c52fc90ff0af02def08b0c8f5deb2" kindref="member">getSingleResult</ref>().first)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>return<sp/>result<sp/>should<sp/>be<sp/>the<sp/>requested<sp/>one&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>resultTypeMap.<ref refid="d9/d65/a01145_1a6c2c52fc90ff0af02def08b0c8f5deb2" kindref="member">getSingleResult</ref>().second;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sigma.rows()<sp/>*<sp/>sigma.cols());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userFunction_.ncomps();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="d6/da1/a01233_1aeab965379985b94a9c60059b01595f6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/da1/a01233_1aeab965379985b94a9c60059b01595f6b" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toString(resultRequirements_.getRequestedResult());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userFunction_.name();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="d6/da1/a01233_1a92ae43568c42e7d621e5a99d8ecce538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/da1/a01233_1a92ae43568c42e7d621e5a99d8ecce538" kindref="member">ResultFunction</ref>(std::vector&lt;ElementType&gt;*<sp/>fes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/da1/a01233_1aa661da19892469d54bc070dbd0e04631" kindref="member">ResultRequirements</ref>&amp;<sp/>req,<sp/>UserFunction<sp/>userFunction<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>gridView{fes-&gt;at(0).localView().globalBasis().gridView()},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultRequirements_{req},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fes_{fes},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userFunction_{userFunction}<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)<sp/>userFunction_<sp/>=<sp/>userFunction;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>evaluateStressComponent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eleID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d19/a01217" kindref="compound">Dune::FieldVector&lt;ctype, griddim&gt;</ref>&amp;<sp/>local,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;UserFunction,<sp/>Impl::DefaultUserFunction&gt;)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userFunction_(fes_-&gt;at(eleID),<sp/>resultRequirements_,<sp/>local,<sp/>comp);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fes_-&gt;at(eleID).calculateAt(resultRequirements_,<sp/>local,<sp/>resultTypeMap);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>resultTypeMap.<ref refid="d9/d65/a01145_1a6c2c52fc90ff0af02def08b0c8f5deb2" kindref="member">getSingleResult</ref>().second;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result(comp);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/da1/a01233_1a60f3b0a6336812436e18ac14de25e0fc" kindref="member">GridView</ref><sp/>gridView;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/da1/a01233_1aa661da19892469d54bc070dbd0e04631" kindref="member">ResultRequirements</ref><sp/>resultRequirements_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ElementType&gt;*<sp/>fes_;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>ResultTypeMap&lt;ctype&gt;<sp/>resultTypeMap;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>[[no_unique_address]]<sp/>std::string<sp/>name_{};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>UserFunction<sp/>userFunction_;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh"/>
  </compounddef>
</doxygen>
