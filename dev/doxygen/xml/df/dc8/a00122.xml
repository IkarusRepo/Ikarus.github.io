<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="df/dc8/a00122" kind="file" language="C++">
    <compoundname>ferequirements.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes local="no">dune/common/exceptions.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="d4/dee/a00008" local="no">ikarus/utils/makeenum.hh</includes>
    <includedby refid="d7/d03/a00254" local="no">_ikarus.cc</includedby>
    <includedby refid="df/d98/a00107" local="no">autodifffe.hh</includedby>
    <includedby refid="d8/da6/a02410" local="no">basis.hh</includedby>
    <includedby refid="de/df3/a00185" local="no">boundarypatch.hh</includedby>
    <includedby refid="d1/da0/a02416" local="no">dirichletvalues.hh</includedby>
    <includedby refid="d1/d88/a00128" local="no">enhancedassumedstrains.hh</includedby>
    <includedby refid="d7/d25/a00182" local="no">flatassembler.hh</includedby>
    <includedby refid="d5/df1/a02392" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="d3/d62/a02395" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="dc/d09/a02398" local="no">linearelastic.hh</includedby>
    <includedby refid="d2/d62/a02401" local="no">linearelastic.hh</includedby>
    <includedby refid="db/db1/a02404" local="no">nonlinearelastic.hh</includedby>
    <includedby refid="d4/dad/a02407" local="no">nonlinearelastic.hh</includedby>
    <includedby refid="d5/de9/a00176" local="no">registerelement.hh</includedby>
    <includedby refid="d6/d7d/a00161" local="no">resultevaluators.hh</includedby>
    <includedby refid="db/ddf/a00164" local="no">resultfunction.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>ferequirements.hh</label>
        <link refid="df/dc8/a00122"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>autodifffe.hh</label>
        <link refid="df/d98/a00107"/>
      </node>
      <node id="1">
        <label>ferequirements.hh</label>
        <link refid="df/dc8/a00122"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>enhancedassumedstrains.hh</label>
        <link refid="d1/d88/a00128"/>
      </node>
      <node id="9">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d5/df1/a02392"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linearelastic.hh</label>
        <link refid="dc/d09/a02398"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>nonlinearelastic.hh</label>
        <link refid="db/db1/a02404"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>resultevaluators.hh</label>
        <link refid="d6/d7d/a00161"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>resultfunction.hh</label>
        <link refid="db/ddf/a00164"/>
      </node>
      <node id="8">
        <label>flatassembler.hh</label>
        <link refid="d7/d25/a00182"/>
      </node>
      <node id="4">
        <label>basis.hh</label>
        <link refid="d8/da6/a02410"/>
      </node>
      <node id="6">
        <label>dirichletvalues.hh</label>
        <link refid="d1/da0/a02416"/>
      </node>
      <node id="10">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d3/d62/a02395"/>
      </node>
      <node id="12">
        <label>linearelastic.hh</label>
        <link refid="d2/d62/a02401"/>
      </node>
      <node id="15">
        <label>nonlinearelastic.hh</label>
        <link refid="d4/dad/a02407"/>
      </node>
      <node id="13">
        <label>registerelement.hh</label>
        <link refid="d5/de9/a00176"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boundarypatch.hh</label>
        <link refid="de/df3/a00185"/>
      </node>
      <node id="2">
        <label>_ikarus.cc</label>
        <link refid="d7/d03/a00254"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d0/d5a/a01199" prot="public">Ikarus::AffordanceCollectionImpl</innerclass>
    <innerclass refid="da/d3f/a01215" prot="public">Ikarus::FErequirements</innerclass>
    <innerclass refid="d5/d39/a01219" prot="public">Ikarus::ResultTypeMap</innerclass>
    <innerclass refid="d7/ddd/a01223" prot="public">Ikarus::ResultRequirements</innerclass>
    <innernamespace refid="d8/d0a/a00292">Ikarus</innernamespace>
    <innernamespace refid="d9/d5e/a00295">Ikarus::AffordanceCollections</innernamespace>
    <briefdescription>
<para>Definition of the LinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/exceptions.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d4/dee/a00008" kindref="compound">ikarus/utils/makeenum.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d8/d0a/a00292" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="d6/d7f/a00287_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="dc/d5d/a00278_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mechanicalPotentialEnergy,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticPotentialEnergy</highlight></codeline>
<codeline lineno="34" refid="dc/d5d/a00278_1ga8a33210894e12be4feb3d96fdfde215c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="d6/d7f/a00287_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="dc/d5d/a00278_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d0a/a00292_1a8d0ca59930b7ae15351497bd14319d1d" kindref="member">forces</ref>,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticForces</highlight></codeline>
<codeline lineno="45" refid="d8/d0a/a00292_1aea6d8dd57847aa02cfe354d03fb33873" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="d6/d7f/a00287_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d0a/a00292_1a5185740b975fb7539a6e07553a061b26" kindref="member">stiffness</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialstiffness,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometricstiffness,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d0a/a00292_1a8191d0e317e1bea2a35d6c8a8f20750f" kindref="member">stiffnessdiffBucklingVector</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticHessian,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d0a/a00292_1a7e05e861b25ca636c1ccba4b8d2a3831" kindref="member">mass</ref></highlight></codeline>
<codeline lineno="60" refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="d6/d7f/a00287_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="d2/d82/a00279_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noParameter,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadfactor,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time</highlight></codeline>
<codeline lineno="71" refid="d2/d82/a00279_1ga0c1577fd05efee8475b0f7fef795bbbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="d6/d7f/a00287_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="d2/d82/a00279_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noSolution,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnetizationAndVectorPotential</highlight></codeline>
<codeline lineno="84" refid="d2/d82/a00279_1gaea763c94a1cecbeefc4f8661debcc5a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="d6/d7f/a00287_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="d2/d82/a00279_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noType,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnetization,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradientNormOfMagnetization,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectorPotential,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divergenceOfVectorPotential,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BField,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HField,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cauchyStress,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PK2Stress,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearStress,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director</highlight></codeline>
<codeline lineno="103" refid="d2/d82/a00279_1ga531be167e924b749eb8b4ccc7f1c18c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="d0/d5a/a01199" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d0/d5a/a01199" kindref="compound">AffordanceCollectionImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="d0/d5a/a01199_1a516061663dea71c22750abaf2175f6d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d5d/a00278_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref><sp/><ref refid="d0/d5a/a01199_1a516061663dea71c22750abaf2175f6d5" kindref="member">scalarAffordances</ref>{<ref refid="dc/d5d/a00278_1gga8a33210894e12be4feb3d96fdfde215ca9a280b29988e2eac8c0767e0fcefb49c" kindref="member">ScalarAffordances::noAffordance</ref>};</highlight></codeline>
<codeline lineno="112" refid="d0/d5a/a01199_1a02e0fc97626b53e154bee9121582a69b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d5d/a00278_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref><sp/><ref refid="d0/d5a/a01199_1a02e0fc97626b53e154bee9121582a69b" kindref="member">vectorAffordances</ref>{<ref refid="dc/d5d/a00278_1gga122268ff4d2c0beee58799d85ba5e52aa9a280b29988e2eac8c0767e0fcefb49c" kindref="member">VectorAffordances::noAffordance</ref>};</highlight></codeline>
<codeline lineno="113" refid="d0/d5a/a01199_1afe3707101cc945fda75d93821846399b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="d0/d5a/a01199_1afe3707101cc945fda75d93821846399b" kindref="member">matrixAffordances</ref>{<ref refid="dc/d5d/a00278_1gga52cb89165daabb500f6e2eb68ddd76eea9a280b29988e2eac8c0767e0fcefb49c" kindref="member">MatrixAffordances::noAffordance</ref>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="120" refid="d0/db9/a01552" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="d0/db9/a01552" kindref="compound">FEAffordance</ref></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::is_same_v&lt;std::remove_cvref_t&lt;Type&gt;,<sp/><ref refid="dc/d5d/a00278_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref>&gt;<sp/>or<sp/>std::is_same_v&lt;std::remove_cvref_t&lt;Type&gt;,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d5d/a00278_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref>&gt;<sp/>or<sp/>std::</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_same_v&lt;std::remove_cvref_t&lt;Type&gt;,<sp/><ref refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref>&gt;<sp/>or<sp/>std::is_same_v&lt;std::remove_cvref_t&lt;Type&gt;,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AffordanceCollectionImpl&gt;;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="d8/d0a/a00292_1a8d0ca59930b7ae15351497bd14319d1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="dc/d5d/a00278_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref><sp/><ref refid="d8/d0a/a00292_1a8d0ca59930b7ae15351497bd14319d1d" kindref="member">forces</ref><sp/>=<sp/><ref refid="dc/d5d/a00278_1gga122268ff4d2c0beee58799d85ba5e52aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordances::forces</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="d8/d0a/a00292_1a5185740b975fb7539a6e07553a061b26" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="d8/d0a/a00292_1a5185740b975fb7539a6e07553a061b26" kindref="member">stiffness</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/d5d/a00278_1gga52cb89165daabb500f6e2eb68ddd76eea086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordances::stiffness</ref>;</highlight></codeline>
<codeline lineno="129" refid="d8/d0a/a00292_1a8191d0e317e1bea2a35d6c8a8f20750f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="d8/d0a/a00292_1a8191d0e317e1bea2a35d6c8a8f20750f" kindref="member">stiffnessdiffBucklingVector</ref><sp/>=<sp/><ref refid="dc/d5d/a00278_1gga52cb89165daabb500f6e2eb68ddd76eeadaa7ff7d704732b763943e3355764532" kindref="member">MatrixAffordances::stiffnessdiffBucklingVector</ref>;</highlight></codeline>
<codeline lineno="130" refid="d8/d0a/a00292_1a7e05e861b25ca636c1ccba4b8d2a3831" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="dc/d5d/a00278_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="d8/d0a/a00292_1a7e05e861b25ca636c1ccba4b8d2a3831" kindref="member">mass</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/d5d/a00278_1gga52cb89165daabb500f6e2eb68ddd76eead90ccffa01275a7a7795fb6d1274e75f" kindref="member">MatrixAffordances::mass</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="d8/d0a/a00292_1a64dfa264a039267932c6c99eb66ae98e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="dc/d5d/a00278_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref><sp/><ref refid="d8/d0a/a00292_1a64dfa264a039267932c6c99eb66ae98e" kindref="member">potentialEnergy</ref><sp/>=<sp/><ref refid="dc/d5d/a00278_1gga8a33210894e12be4feb3d96fdfde215ca814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordances::mechanicalPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="d9/d5e/a00295" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">AffordanceCollections<sp/>{</highlight></codeline>
<codeline lineno="135" refid="d9/d5e/a00295_1a74c1342e9b6a556e6b1276b7fde137e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="d0/d5a/a01199" kindref="compound">AffordanceCollectionImpl</ref><sp/><ref refid="d9/d5e/a00295_1a74c1342e9b6a556e6b1276b7fde137e1" kindref="member">elastoStatics</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<ref refid="dc/d5d/a00278_1gga8a33210894e12be4feb3d96fdfde215ca814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordances::mechanicalPotentialEnergy</ref>,<sp/><ref refid="dc/d5d/a00278_1gga122268ff4d2c0beee58799d85ba5e52aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordances::forces</ref>,<sp/><ref refid="dc/d5d/a00278_1gga52cb89165daabb500f6e2eb68ddd76eea086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordances::stiffness</ref>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceRawVectorType<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!std::is_same&lt;T,<sp/>T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>should<sp/>end<sp/>up<sp/>in<sp/>the<sp/>provided<sp/>specializations&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceRawVectorType&lt;std::reference_wrapper&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceRawVectorType&lt;<ref refid="d9/d0d/a00298" kindref="compound">Eigen</ref>::Ref&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>Eigen::Ref&lt;T&gt;;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SolutionVectorType_<sp/>=<sp/>std::reference_wrapper&lt;Eigen::VectorXd&gt;,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParameterType_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::reference_wrapper&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="170" refid="da/d3f/a01215" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172" refid="da/d3f/a01215_1a410aab421a30588621b0186225dbe3bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/d3f/a01215_1a410aab421a30588621b0186225dbe3bd" kindref="member">SolutionVectorType</ref><sp/><sp/><sp/><sp/>=<sp/>SolutionVectorType_;</highlight></codeline>
<codeline lineno="173" refid="da/d3f/a01215_1afe01a23ad3c9115402dbf4590ace78d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/d3f/a01215_1afe01a23ad3c9115402dbf4590ace78d9" kindref="member">SolutionVectorTypeRaw</ref><sp/>=<sp/>Impl::DeduceRawVectorType&lt;std::remove_cvref_t&lt;SolutionVectorType_&gt;&gt;::Type;</highlight></codeline>
<codeline lineno="174" refid="da/d3f/a01215_1a283e736964dbc4b20b80904020cd5cc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/d3f/a01215_1a283e736964dbc4b20b80904020cd5cc6" kindref="member">ParameterType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ParameterType_;</highlight></codeline>
<codeline lineno="175" refid="da/d3f/a01215_1aa3ecebd0be1a26600e54c0adaa46d74d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/d3f/a01215_1aa3ecebd0be1a26600e54c0adaa46d74d" kindref="member">ParameterTypeRaw</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ParameterType_::type;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FEAffordance<sp/>Affordance&gt;</highlight></codeline>
<codeline lineno="187" refid="da/d3f/a01215_1ac0e6b621432e3afb64b5f2fe16a4f882" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref>&amp;<sp/><ref refid="da/d3f/a01215_1ac0e6b621432e3afb64b5f2fe16a4f882" kindref="member">addAffordance</ref>(Affordance&amp;&amp;<sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>ScalarAffordances&gt;)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>affordances.<ref refid="d0/d5a/a01199_1a516061663dea71c22750abaf2175f6d5" kindref="member">scalarAffordances</ref><sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>VectorAffordances&gt;)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>affordances.<ref refid="d0/d5a/a01199_1a02e0fc97626b53e154bee9121582a69b" kindref="member">vectorAffordances</ref><sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>MatrixAffordances&gt;)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>affordances.<ref refid="d0/d5a/a01199_1afe3707101cc945fda75d93821846399b" kindref="member">matrixAffordances</ref><sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>AffordanceCollectionImpl&gt;)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>affordances<sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="da/d3f/a01215_1a6c148439a43c22ae70d654b54706be02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref>&amp;<sp/><ref refid="da/d3f/a01215_1a6c148439a43c22ae70d654b54706be02" kindref="member">insertParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d82/a00279_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>&amp;<sp/>key,<sp/><ref refid="da/d3f/a01215_1aa3ecebd0be1a26600e54c0adaa46d74d" kindref="member">ParameterTypeRaw</ref>&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parameter.insert_or_assign(key,<sp/>val);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="da/d3f/a01215_1a7da74676b3cc00ac87c05de5a295ebe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref>&amp;<sp/><ref refid="da/d3f/a01215_1a7da74676b3cc00ac87c05de5a295ebe2" kindref="member">insertGlobalSolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d82/a00279_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>&amp;<sp/>key,<sp/><ref refid="da/d3f/a01215_1afe01a23ad3c9115402dbf4590ace78d9" kindref="member">SolutionVectorTypeRaw</ref>&amp;<sp/>sol)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sols.insert_or_assign(key,<sp/>sol);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="da/d3f/a01215_1a6b9d77c43bcb665126cd6aa7a17b8ce0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215_1afe01a23ad3c9115402dbf4590ace78d9" kindref="member">SolutionVectorTypeRaw</ref>&amp;<sp/><ref refid="da/d3f/a01215_1a6b9d77c43bcb665126cd6aa7a17b8ce0" kindref="member">getGlobalSolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d82/a00279_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;SolutionVectorType,<sp/>std::reference_wrapper&lt;Eigen::VectorXd&gt;&gt;)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sols.at(key).get();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sols.at(key);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::out_of_range&amp;<sp/>oor)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::RangeError,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>Range<sp/>error:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::string(oor.what())</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>getGlobalSolution<sp/>with<sp/>key&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="d8/d0a/a00292_1a0853622412d4cedc078b81ba454eb250" kindref="member">toString</ref>(key));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="da/d3f/a01215_1a040ef8c38857afd83c10024931a3b436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215_1aa3ecebd0be1a26600e54c0adaa46d74d" kindref="member">ParameterTypeRaw</ref>&amp;<sp/><ref refid="da/d3f/a01215_1a040ef8c38857afd83c10024931a3b436" kindref="member">getParameter</ref>(<ref refid="d2/d82/a00279_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>&amp;&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameter.at(key).get();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::out_of_range&amp;<sp/>oor)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::RangeError,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>Range<sp/>error:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::string(oor.what())</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>getParameter<sp/>with<sp/>key&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="d8/d0a/a00292_1a0853622412d4cedc078b81ba454eb250" kindref="member">toString</ref>(key));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FEAffordance<sp/>Affordance&gt;</highlight></codeline>
<codeline lineno="280" refid="da/d3f/a01215_1aa778ca2fcb44341b76641c23852c9092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215_1aa778ca2fcb44341b76641c23852c9092" kindref="member">hasAffordance</ref>(Affordance&amp;&amp;<sp/>affordance)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>ScalarAffordances&gt;)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances.<ref refid="d0/d5a/a01199_1a516061663dea71c22750abaf2175f6d5" kindref="member">scalarAffordances</ref><sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>VectorAffordances&gt;)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances.<ref refid="d0/d5a/a01199_1a02e0fc97626b53e154bee9121582a69b" kindref="member">vectorAffordances</ref><sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>MatrixAffordances&gt;)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances.<ref refid="d0/d5a/a01199_1afe3707101cc945fda75d93821846399b" kindref="member">matrixAffordances</ref><sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>AffordanceCollectionImpl&gt;)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances<sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;FESolutions,<sp/>SolutionVectorType&gt;<sp/>sols;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;FEParameter,<sp/>ParameterType&gt;<sp/>parameter;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d5a/a01199" kindref="compound">AffordanceCollectionImpl</ref><sp/>affordances;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParameterType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="308" refid="d5/d39/a01219" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d39/a01219" kindref="compound">ResultTypeMap</ref><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310" refid="d5/d39/a01219_1a72132ad19ec7049750ba2c4f60cde93f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d5/d39/a01219_1a72132ad19ec7049750ba2c4f60cde93f" kindref="member">ResultArray</ref><sp/>=<sp/>Eigen::Matrix&lt;ParameterType,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic,<sp/>0,<sp/>9,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="d5/d39/a01219_1aa399a96000daf40950e388eb0b23a7c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d39/a01219_1aa399a96000daf40950e388eb0b23a7c0" kindref="member">insertOrAssignResult</ref>(<ref refid="d2/d82/a00279_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref>&amp;&amp;<sp/>resultType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d39/a01219_1a72132ad19ec7049750ba2c4f60cde93f" kindref="member">ResultArray</ref>&amp;<sp/>resultArray)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results.insert_or_assign(resultType,<sp/>resultArray);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="d5/d39/a01219_1a7f9a61700e42a5507d7dfcfd059a4067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d39/a01219_1a72132ad19ec7049750ba2c4f60cde93f" kindref="member">ResultArray</ref>&amp;<sp/><ref refid="d5/d39/a01219_1a7f9a61700e42a5507d7dfcfd059a4067" kindref="member">getResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d82/a00279_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref>&amp;<sp/>resultType)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results.at(resultType);<sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="d5/d39/a01219_1a6c2c52fc90ff0af02def08b0c8f5deb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="d5/d39/a01219_1a6c2c52fc90ff0af02def08b0c8f5deb2" kindref="member">getSingleResult</ref>()<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(results.size()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::RangeError,<sp/></highlight><highlight class="stringliteral">&quot;getSingleResult<sp/>can<sp/>only<sp/>be<sp/>called<sp/>when<sp/>a<sp/>single<sp/>result<sp/>was<sp/>inserted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(results.begin());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;ResultType,<sp/>ResultArray&gt;<sp/>results;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="357" refid="de/d2c/a01553" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="de/d2c/a01553" kindref="compound">ResultTypeConcept</ref><sp/>=<sp/>std::is_same_v&lt;Type,<sp/>ResultType&gt;;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FErequirements<sp/>=<sp/>FErequirements&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="371" refid="d7/ddd/a01223" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/ddd/a01223" kindref="compound">ResultRequirements</ref><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="373" refid="d7/ddd/a01223_1a249d873676137eb115f5451427f7503e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d7/ddd/a01223_1a249d873676137eb115f5451427f7503e" kindref="member">ParameterTypeRaw</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215_1aa3ecebd0be1a26600e54c0adaa46d74d" kindref="member">FErequirements::ParameterTypeRaw</ref>;</highlight></codeline>
<codeline lineno="374" refid="d7/ddd/a01223_1ade5c36f80718337e7f4ef4ae8b391146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d7/ddd/a01223_1ade5c36f80718337e7f4ef4ae8b391146" kindref="member">SolutionVectorType</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215_1a410aab421a30588621b0186225dbe3bd" kindref="member">FErequirements::SolutionVectorType</ref>;</highlight></codeline>
<codeline lineno="375" refid="d7/ddd/a01223_1a666b1e8176883471623c42d37211dbbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d7/ddd/a01223_1a666b1e8176883471623c42d37211dbbc" kindref="member">SolutionVectorTypeRaw</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215_1afe01a23ad3c9115402dbf4590ace78d9" kindref="member">FErequirements::SolutionVectorTypeRaw</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="d7/ddd/a01223_1ae63816b06a691101db0313dab0d4ce0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/ddd/a01223_1ae63816b06a691101db0313dab0d4ce0f" kindref="member">ResultRequirements</ref>(<ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref>&amp;&amp;<sp/>req,<sp/>std::set&lt;ResultType&gt;&amp;&amp;<sp/>p_resType)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>reqB{req},<sp/>resType(std::move(p_resType))<sp/>{}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="d7/ddd/a01223_1a0c1bc6b4652926a39d20c8488c297317" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d7/ddd/a01223_1a0c1bc6b4652926a39d20c8488c297317" kindref="member">ResultRequirements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref>&amp;<sp/>req)<sp/>:<sp/>reqB{req}<sp/>{}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="d7/ddd/a01223_1a09b6184e9fa1587fd23d29298e1dd15b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/ddd/a01223_1a09b6184e9fa1587fd23d29298e1dd15b" kindref="member">ResultRequirements</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="d7/ddd/a01223_1a3d41a3aca3b508538bed0246af51e8c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/ddd/a01223_1a3d41a3aca3b508538bed0246af51e8c4" kindref="member">isResultRequested</ref>(<ref refid="d2/d82/a00279_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref>&amp;&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resType.contains(key);<sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FEAffordance<sp/>Affordance&gt;</highlight></codeline>
<codeline lineno="424" refid="d7/ddd/a01223_1a766f4be341a9daf3ac3af27888778eeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/ddd/a01223" kindref="compound">ResultRequirements</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1a766f4be341a9daf3ac3af27888778eeb" kindref="member">addAffordance</ref>(Affordance&amp;&amp;<sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reqB.<ref refid="da/d3f/a01215_1ac0e6b621432e3afb64b5f2fe16a4f882" kindref="member">addAffordance</ref>(std::forward&lt;Affordance&gt;(affordance));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="d7/ddd/a01223_1a3fbc8b71e9463eb2aff7afa73db77023" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/ddd/a01223" kindref="compound">ResultRequirements</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1a3fbc8b71e9463eb2aff7afa73db77023" kindref="member">insertParameter</ref>(<ref refid="d2/d82/a00279_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>&amp;&amp;<sp/>key,<sp/><ref refid="d7/ddd/a01223_1a249d873676137eb115f5451427f7503e" kindref="member">ParameterTypeRaw</ref>&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reqB.<ref refid="da/d3f/a01215_1a6c148439a43c22ae70d654b54706be02" kindref="member">insertParameter</ref>(std::forward&lt;FEParameter&gt;(key),<sp/>val);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="d7/ddd/a01223_1ac70755df382d8f81da6abbaa1c2e5199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/ddd/a01223" kindref="compound">ResultRequirements</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1ac70755df382d8f81da6abbaa1c2e5199" kindref="member">insertGlobalSolution</ref>(<ref refid="d2/d82/a00279_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>&amp;&amp;<sp/>key,<sp/><ref refid="d7/ddd/a01223_1a666b1e8176883471623c42d37211dbbc" kindref="member">SolutionVectorTypeRaw</ref>&amp;<sp/>sol)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reqB.<ref refid="da/d3f/a01215_1a7da74676b3cc00ac87c05de5a295ebe2" kindref="member">insertGlobalSolution</ref>(std::forward&lt;FESolutions&gt;(key),<sp/>sol);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<ref refid="de/d2c/a01553" kindref="compound">ResultTypeConcept</ref>...<sp/>ResultTypes&gt;</highlight></codeline>
<codeline lineno="467" refid="d7/ddd/a01223_1a115edf304fdee5346879789896958ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/ddd/a01223" kindref="compound">ResultRequirements</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1a115edf304fdee5346879789896958ed3" kindref="member">addResultRequest</ref>(ResultTypes&amp;&amp;...<sp/>keys)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resType.insert({std::move(keys)...});</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="d7/ddd/a01223_1ad587482320609b1ab17c82b094000d08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddd/a01223_1a666b1e8176883471623c42d37211dbbc" kindref="member">SolutionVectorTypeRaw</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1ad587482320609b1ab17c82b094000d08" kindref="member">getGlobalSolution</ref>(<ref refid="d2/d82/a00279_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>&amp;&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reqB.<ref refid="da/d3f/a01215_1a6b9d77c43bcb665126cd6aa7a17b8ce0" kindref="member">getGlobalSolution</ref>(std::move(key));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="d7/ddd/a01223_1a6117237834b64f1ebaecafcd282f4d4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddd/a01223_1a249d873676137eb115f5451427f7503e" kindref="member">ParameterTypeRaw</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1a6117237834b64f1ebaecafcd282f4d4b" kindref="member">getParameter</ref>(<ref refid="d2/d82/a00279_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>&amp;&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reqB.<ref refid="da/d3f/a01215_1a040ef8c38857afd83c10024931a3b436" kindref="member">getParameter</ref>(std::move(key));<sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="d7/ddd/a01223_1a84cdc0f3d956bf0f425d0688bfd1e653" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref>&amp;<sp/><ref refid="d7/ddd/a01223_1a84cdc0f3d956bf0f425d0688bfd1e653" kindref="member">getFERequirements</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reqB;<sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="d7/ddd/a01223_1ad622d1a543d8508029519eb401cade0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d7/ddd/a01223_1ad622d1a543d8508029519eb401cade0a" kindref="member">getRequestedResult</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resType.size()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(resType.begin());</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>can<sp/>only<sp/>be<sp/>called<sp/>when<sp/>a<sp/>single<sp/>result<sp/>is<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;ResultType&gt;<sp/>resType;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d3f/a01215" kindref="compound">FErequirements</ref><sp/>reqB;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh"/>
  </compounddef>
</doxygen>
