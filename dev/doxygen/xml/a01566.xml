<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01566" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::IObserver</compoundname>
    <includes refid="a00257" local="no">ikarus/utils/observer/observer.hh</includes>
    <templateparamlist>
      <param>
        <type>typename MessageType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01566_1afda55d0cee706fa7a2df824e2a149a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Ikarus::IObserver&lt; MessageType &gt;::~IObserver</definition>
        <argsstring>()=default</argsstring>
        <name>~IObserver</name>
        <qualifiedname>Ikarus::IObserver::~IObserver</qualifiedname>
        <briefdescription>
<para>Virtual destructor for the observer interface. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="29" column="11"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a8c171635a257ce7fe905a58337717efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="35" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a0f235d3f9f49582c0902dfcd5217f4a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="45" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a97bf3fd861a8eac696a97ec56d953b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="55" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a05a6a76b6875406ae8ff5e05f2662d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="65" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1ab87bc0dab48de914d7f5221fb9c3477b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and two values (integer and double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="76" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a5d2fb507095933199fab726c17e01bcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message, an integer value, and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="87" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a20e3859480f6cab562f33ce9da888380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::update</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an Eigen::VectorXd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorXd associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="97" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01566_1a478eaa94650cf462a050e28ecf098773" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01550_1a10ad975b5a99ce217fd1d122963f46e8">updateImpl</reimplementedby>
        <reimplementedby refid="a01554_1aa0c6914ffa6bcdbf95d0e5a815ca44ef">updateImpl</reimplementedby>
        <reimplementedby refid="a01558_1aa51b225ec700905006965c2ea07aebd3">updateImpl</reimplementedby>
        <reimplementedby refid="a01562_1a131da094b77cab07c39b4017d5419dac">updateImpl</reimplementedby>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="103" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="103" bodyend="103"/>
        <referencedby refid="a01566_1a8c171635a257ce7fe905a58337717efe" compoundref="a00257" startline="35" endline="38">Ikarus::IObserver&lt; MessageType &gt;::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01566_1a663889f78a7dbd3561fa6a497e023a23" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01562_1a17558ed4ad25de4e80b2bccdbf670e0b">updateImpl</reimplementedby>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="104" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1adc61a4813394bdde201018db198544a3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01562_1a2a30782a175f8fc1dfb583531718cabf">updateImpl</reimplementedby>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="105" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1ae97b76e37ab99f985a0ef71f4a9efd37" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01550_1a9c8c660297d060779e05303c63c1b4be">updateImpl</reimplementedby>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="106" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1af53b8b154a887fce37fee355b0244c21" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01550_1a78f7ab50c3ad889e9dafe84ecc59bb9f">updateImpl</reimplementedby>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="107" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a4d0a13cbe1104d10c4ec5e928f64ab4b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01550_1aca92cd9bf83a7575260a015a646aca8c">updateImpl</reimplementedby>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="108" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01566_1a4b7267849be75994c85c8ebe7af10465" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MessageType &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="109" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01566_1abe60eff6a4d8ccbc6fcd519438155b4f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MessageType &gt;::checkMessageType</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>checkMessageType</name>
        <qualifiedname>Ikarus::IObserver::checkMessageType</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="112" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="112" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic observer interface for the Observer design pattern. See <ref refid="a02484_1CITEREF_gamma1995design" kindref="member">[3]</ref> for a description of the design pattern. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MessageType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of message that the observer can handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; ControlMessages &gt;</label>
        <link refid="a01566"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::IObserver&lt; Messages &gt;</label>
        <link refid="a01566"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Messages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01566"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::ControlLogger</label>
        <link refid="a01550"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::ControlSubsamplingVertexVTKWriter&lt; Basis &gt;</label>
        <link refid="a01554"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::GenericObserver&lt; Messages &gt;</label>
        <link refid="a01558"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::IObserver&lt; MessageType &gt;</label>
        <link refid="a01566"/>
      </node>
      <node id="8">
        <label>Ikarus::NonLinearSolverLogger</label>
        <link refid="a01562"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="25" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="26" bodyend="118"/>
    <listofallmembers>
      <member refid="a01566_1abe60eff6a4d8ccbc6fcd519438155b4f" prot="private" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>checkMessageType</name></member>
      <member refid="a01566_1a8c171635a257ce7fe905a58337717efe" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1a0f235d3f9f49582c0902dfcd5217f4a1" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1a97bf3fd861a8eac696a97ec56d953b47" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1a05a6a76b6875406ae8ff5e05f2662d57" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1ab87bc0dab48de914d7f5221fb9c3477b" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1a5d2fb507095933199fab726c17e01bcf" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1a20e3859480f6cab562f33ce9da888380" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01566_1a478eaa94650cf462a050e28ecf098773" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1a663889f78a7dbd3561fa6a497e023a23" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1adc61a4813394bdde201018db198544a3" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1ae97b76e37ab99f985a0ef71f4a9efd37" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1af53b8b154a887fce37fee355b0244c21" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1a4d0a13cbe1104d10c4ec5e928f64ab4b" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1a4b7267849be75994c85c8ebe7af10465" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01566_1afda55d0cee706fa7a2df824e2a149a9e" prot="public" virt="virtual"><scope>Ikarus::IObserver</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
