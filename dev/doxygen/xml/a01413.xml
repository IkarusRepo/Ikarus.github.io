<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01413" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::NonLinearElastic</compoundname>
    <includes refid="a00161" local="no">ikarus/finiteelements/mechanics/nonlinearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="a01245" kindref="compound">PreFE</ref></type>
      </param>
      <param>
        <type>typename <ref refid="a01241" kindref="compound">FE</ref></type>
      </param>
      <param>
        <type>typename PRE</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01413_1a4e4da0d13fa890c98119b9719b2e3e79" prot="public" static="no">
        <type><ref refid="a01245_1a9d8e27b97d32f23d3f27b43d67719712" kindref="member">PreFE::Traits</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::Traits =  PreFE::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::NonLinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="63" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a065dde2d39e9448e9133495f78f7c0c6" prot="public" static="no">
        <type>typename <ref refid="a01301_1a83d1e0b32568746b48ad0217c0cc2727" kindref="member">Traits::Basis</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::Basis =  typename Traits::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::NonLinearElastic::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="64" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a187fd5fbc2a5d42fcf9b5b80c5a3759e" prot="public" static="no">
        <type>typename <ref refid="a01301_1aa25f390625d7c94ec8b72f6fbb9839b5" kindref="member">Traits::FlatBasis</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::FlatBasis =  typename Traits::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::NonLinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="65" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" prot="public" static="no">
        <type>typename <ref refid="a01301_1a07ae507e77464265d631a82eea32e45a" kindref="member">Traits::FERequirementType</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::NonLinearElastic::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="66" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1adac120cca783f4cccb83be6606c11db5" prot="public" static="no">
        <type>typename <ref refid="a01301_1a247c2f275ba82e1c6b73b157c00213c3" kindref="member">Traits::LocalView</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::NonLinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="67" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a0b822da239b00331cc6f5a952976ef1e" prot="public" static="no">
        <type>typename <ref refid="a01301_1af5f946b3f07f3c07dfe28a4170245bdf" kindref="member">Traits::Geometry</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::Geometry =  typename Traits::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::NonLinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="68" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a4e116f42a26bae100cd0cc80e8229662" prot="public" static="no">
        <type>typename <ref refid="a01301_1a4fe2f4314ca474f96a539dad1dd881e7" kindref="member">Traits::GridView</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::NonLinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="69" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a9026fe0824718ef0a81c36d220a18f91" prot="public" static="no">
        <type>typename <ref refid="a01301_1ae954682661b1540992c5d7317e056b6c" kindref="member">Traits::Element</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::NonLinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="70" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a301b03982ef1629b26bac4e6ab522797" prot="public" static="no">
        <type>PRE::Material</type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::Material =  PRE::Material</definition>
        <argsstring></argsstring>
        <name>Material</name>
        <qualifiedname>Ikarus::NonLinearElastic::Material</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="71" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1a91becdb2e38a2e60e5b89ed140326d07" prot="public" static="no">
        <type>PRE</type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::Pre =  PRE</definition>
        <argsstring></argsstring>
        <name>Pre</name>
        <qualifiedname>Ikarus::NonLinearElastic::Pre</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="72" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1ae293c7bd388b1ccb4391066481104220" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="a01413_1adac120cca783f4cccb83be6606c11db5" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().localBasis())</type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::NonLinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="74" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01413_1aae06ccc0a9931d6d618cd1a3809fc246" prot="public" static="no">
        <type>std::tuple&lt; decltype(<ref refid="a00337_1a38629395c2d43ba44328b01ce0c0daf3" kindref="member">makeRT</ref>&lt; ResultTypes::PK2Stress &gt;())&gt;</type>
        <definition>using Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::SupportedResultTypes =  std::tuple&lt;decltype(makeRT&lt;ResultTypes::PK2Stress&gt;())&gt;</definition>
        <argsstring></argsstring>
        <name>SupportedResultTypes</name>
        <qualifiedname>Ikarus::NonLinearElastic::SupportedResultTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="203" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01413_1a75f37a35f01f4440faec8355c25e85e7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::NonLinearElastic::myDim</qualifiedname>
        <initializer>= <ref refid="a01301_1ac9913312b3916225484a0e7125e4f94a" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="76" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="76" bodyend="-1"/>
        <referencedby refid="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" compoundref="a00161" startline="256" endline="279">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01413_1a0beee0bbb5e7df74f41299d40a1bed84" compoundref="a00161" startline="302" endline="319">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01413_1acc4cb40454bb3dd2b78b283f8bfc13d1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::strainType</definition>
        <argsstring></argsstring>
        <name>strainType</name>
        <qualifiedname>Ikarus::NonLinearElastic::strainType</qualifiedname>
        <initializer>= <ref refid="a00326_1ggacef1e451de1a99845c59d7391064fb8faca3f1e4bb21fd00a3d29c5d8aff8e11e" kindref="member">StrainTags::greenLagrangian</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="77" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01413_1a2c3a066728796a18513c7fa15fd1b1a5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="a01413_1a0b822da239b00331cc6f5a952976ef1e" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::NonLinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="241" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01413_1a8b2289ef5f0f6aea80e3de29037e40b1" prot="private" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="a01413_1ae293c7bd388b1ccb4391066481104220" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::localBasis_</definition>
        <argsstring></argsstring>
        <name>localBasis_</name>
        <qualifiedname>Ikarus::NonLinearElastic::localBasis_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="242" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01413_1ab51ecca4f4149a34c91e182bdc4c446c" prot="private" static="no" mutable="no">
        <type><ref refid="a01413_1a301b03982ef1629b26bac4e6ab522797" kindref="member">Material</ref></type>
        <definition>Material Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::mat_</definition>
        <argsstring></argsstring>
        <name>mat_</name>
        <qualifiedname>Ikarus::NonLinearElastic::mat_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="243" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01413_1af0ff1027701dde00002dd27b298d2296" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::numberOfNodes_</definition>
        <argsstring></argsstring>
        <name>numberOfNodes_</name>
        <qualifiedname>Ikarus::NonLinearElastic::numberOfNodes_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="244" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01413_1a97d92a1657d1c30cff75302a1c56cda7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <qualifiedname>Ikarus::NonLinearElastic::order_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="245" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01413_1a8ddec62cfc736709c438a23e9dd71961" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::NonLinearElastic</definition>
        <argsstring>(const Pre &amp;pre)</argsstring>
        <name>NonLinearElastic</name>
        <qualifiedname>Ikarus::NonLinearElastic::NonLinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1a91becdb2e38a2e60e5b89ed140326d07" kindref="member">Pre</ref> &amp;</type>
          <declname>pre</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01413" kindref="compound">NonLinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pre</parametername>
</parameternamelist>
<parameterdescription>
<para>The pre fe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="83" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="83" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1aa53ce42c06c421d160413b7e4066bb7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::displacementFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::NonLinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Get the displacement function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A StandardLocalFunction representing the displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="119" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="119" bodyend="126"/>
        <referencedby refid="a01413_1aa401b25a197ca04921696f625f000895" compoundref="a00161" startline="223" endline="235">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateAtImpl</referencedby>
        <referencedby refid="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" compoundref="a00161" startline="256" endline="279">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01413_1a6cb4536ed6b8e3bec1f9bee8d1e41279" compoundref="a00161" startline="137" endline="141">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01413_1a6cb4536ed6b8e3bec1f9bee8d1e41279" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::strainFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::NonLinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>The strain function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function calculated using greenLagrangeStrains. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="137" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="137" bodyend="141"/>
        <referencedby refid="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" compoundref="a00161" startline="256" endline="279">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01413_1a4082ea59005684ec55c2a8a3eb406661" compoundref="a00161" startline="282" endline="299">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01413_1a0beee0bbb5e7df74f41299d40a1bed84" compoundref="a00161" startline="302" endline="319">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01413_1aaf1eac20d733fcd9f2c7ac68dbbddc5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
          <param>
            <type>int</type>
            <declname>strainDim</declname>
            <defname>strainDim</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::materialTangent</definition>
        <argsstring>(const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;strain) const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::NonLinearElastic::materialTangent</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;</type>
          <declname>strain</declname>
        </param>
        <briefdescription>
<para>Get the material tangent for the given strain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the material and strain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strainDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the strain vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether to use Voigt notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strain</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent calculated using the material&apos;s tangentModuli function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="153" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="153" bodyend="160"/>
        <referencedby refid="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" compoundref="a00161" startline="256" endline="279">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01413_1a01ea8b2e688566c391df267a040298ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
          <param>
            <type>int</type>
            <declname>strainDim</declname>
            <defname>strainDim</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::getInternalEnergy</definition>
        <argsstring>(const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;strain) const</argsstring>
        <name>getInternalEnergy</name>
        <qualifiedname>Ikarus::NonLinearElastic::getInternalEnergy</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;</type>
          <declname>strain</declname>
        </param>
        <briefdescription>
<para>Get the internal energy for the given strain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the material and strain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strainDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strain</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The internal energy calculated using the material&apos;s storedEnergy function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="171" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="171" bodyend="178"/>
        <referencedby refid="a01413_1a4082ea59005684ec55c2a8a3eb406661" compoundref="a00161" startline="282" endline="299">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01413_1af7716846e0ca64181119e58548126231" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
          <param>
            <type>int</type>
            <declname>strainDim</declname>
            <defname>strainDim</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::getStress</definition>
        <argsstring>(const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;strain) const</argsstring>
        <name>getStress</name>
        <qualifiedname>Ikarus::NonLinearElastic::getStress</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;</type>
          <declname>strain</declname>
        </param>
        <briefdescription>
<para>Get the stress for the given strain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the material and strain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strainDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the strain vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to use the Voigt notation for stress. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strain</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The stress vector calculated using the material&apos;s stresses function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="190" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="190" bodyend="197"/>
        <referencedby refid="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" compoundref="a00161" startline="256" endline="279">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01413_1a0beee0bbb5e7df74f41299d40a1bed84" compoundref="a00161" startline="302" endline="319">Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01413_1a6268324f3dce0ad16478747170581a3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01413_1a0b822da239b00331cc6f5a952976ef1e" kindref="member">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>Ikarus::NonLinearElastic::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="199" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1afc0d3706a93eefe0238e9053e8421708" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::numberOfNodes</definition>
        <argsstring>() const</argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::NonLinearElastic::numberOfNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="200" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1ae131607ff0fc7856d7635f8e05c6cf70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::NonLinearElastic::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="201" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1aa401b25a197ca04921696f625f000895" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateAtImpl</definition>
        <argsstring>(const FERequirementType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, Dune::PriorityTag&lt; 1 &gt;) const</argsstring>
        <name>calculateAtImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateAtImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01573" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01301_1ac9913312b3916225484a0e7125e4f94a" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>Dune::PriorityTag&lt; 1 &gt;</type>
        </param>
    <requiresclause>(canProvideResultType&lt;RT&gt;())    </requiresclause>
        <briefdescription>
<para>Calculates a requested result at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object holding the global solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated result</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requested result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="223" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="223" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01413_1a50f23fc87d7be6cd1c7e8a0662e81040" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::bindImpl</definition>
        <argsstring>()</argsstring>
        <name>bindImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::bindImpl</qualifiedname>
        <briefdescription>
<para>A helper function to bind the local view to the element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="90" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="90" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="256" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="256" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1a4082ea59005684ec55c2a8a3eb406661" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="282" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="282" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1a0beee0bbb5e7df74f41299d40a1bed84" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="302" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="302" bodyend="319"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="a01413_1afcd1ed83f421e3b10259720c69d1285b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>static consteval bool Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::canProvideResultType</definition>
        <argsstring>()</argsstring>
        <name>canProvideResultType</name>
        <qualifiedname>Ikarus::NonLinearElastic::canProvideResultType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="207" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="207" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01413_1aa80604c0c11fee7fc40f4214d77fbe81" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::underlying</definition>
        <argsstring>() const</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::NonLinearElastic::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="239" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="a01413_1a45b91b0dd674b44d3fee55b5477cb3ae" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;::underlying</definition>
        <argsstring>()</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::NonLinearElastic::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="240" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="240" bodyend="240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01413" kindref="compound">NonLinearElastic</ref> class represents a non-linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a01245" kindref="compound">PreFE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the total pre finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="a01241" kindref="compound">FE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PRE</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the non-linear elastic pre finite element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="60" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="61" bodyend="320"/>
    <listofallmembers>
      <member refid="a01413_1a065dde2d39e9448e9133495f78f7c0c6" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Basis</name></member>
      <member refid="a01413_1a50f23fc87d7be6cd1c7e8a0662e81040" prot="protected" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>bindImpl</name></member>
      <member refid="a01413_1aa401b25a197ca04921696f625f000895" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateAtImpl</name></member>
      <member refid="a01413_1a34d4d2ab0c8d421ac80024e9177098a5" prot="protected" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01413_1a4082ea59005684ec55c2a8a3eb406661" prot="protected" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01413_1a0beee0bbb5e7df74f41299d40a1bed84" prot="protected" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01413_1afcd1ed83f421e3b10259720c69d1285b" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>canProvideResultType</name></member>
      <member refid="a01413_1aa53ce42c06c421d160413b7e4066bb7f" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>displacementFunction</name></member>
      <member refid="a01413_1a9026fe0824718ef0a81c36d220a18f91" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Element</name></member>
      <member refid="a01413_1ac7cc996489722d3ef5c13e03562b4dcb" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>FERequirementType</name></member>
      <member refid="a01413_1a187fd5fbc2a5d42fcf9b5b80c5a3759e" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>FlatBasis</name></member>
      <member refid="a01413_1a2c3a066728796a18513c7fa15fd1b1a5" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>geo_</name></member>
      <member refid="a01413_1a0b822da239b00331cc6f5a952976ef1e" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Geometry</name></member>
      <member refid="a01413_1a6268324f3dce0ad16478747170581a3e" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>geometry</name></member>
      <member refid="a01413_1a01ea8b2e688566c391df267a040298ee" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>getInternalEnergy</name></member>
      <member refid="a01413_1af7716846e0ca64181119e58548126231" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>getStress</name></member>
      <member refid="a01413_1a4e116f42a26bae100cd0cc80e8229662" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>GridView</name></member>
      <member refid="a01413_1a8b2289ef5f0f6aea80e3de29037e40b1" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>localBasis_</name></member>
      <member refid="a01413_1ae293c7bd388b1ccb4391066481104220" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="a01413_1adac120cca783f4cccb83be6606c11db5" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>LocalView</name></member>
      <member refid="a01413_1ab51ecca4f4149a34c91e182bdc4c446c" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>mat_</name></member>
      <member refid="a01413_1a301b03982ef1629b26bac4e6ab522797" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Material</name></member>
      <member refid="a01413_1aaf1eac20d733fcd9f2c7ac68dbbddc5c" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>materialTangent</name></member>
      <member refid="a01413_1a75f37a35f01f4440faec8355c25e85e7" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>myDim</name></member>
      <member refid="a01413_1a8ddec62cfc736709c438a23e9dd71961" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>NonLinearElastic</name></member>
      <member refid="a01413_1afc0d3706a93eefe0238e9053e8421708" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="a01413_1af0ff1027701dde00002dd27b298d2296" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>numberOfNodes_</name></member>
      <member refid="a01413_1ae131607ff0fc7856d7635f8e05c6cf70" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>order</name></member>
      <member refid="a01413_1a97d92a1657d1c30cff75302a1c56cda7" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>order_</name></member>
      <member refid="a01413_1a91becdb2e38a2e60e5b89ed140326d07" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Pre</name></member>
      <member refid="a01413_1a6cb4536ed6b8e3bec1f9bee8d1e41279" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>strainFunction</name></member>
      <member refid="a01413_1acc4cb40454bb3dd2b78b283f8bfc13d1" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>strainType</name></member>
      <member refid="a01413_1aae06ccc0a9931d6d618cd1a3809fc246" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>SupportedResultTypes</name></member>
      <member refid="a01413_1a4e4da0d13fa890c98119b9719b2e3e79" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Traits</name></member>
      <member refid="a01413_1aa80604c0c11fee7fc40f4214d77fbe81" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>underlying</name></member>
      <member refid="a01413_1a45b91b0dd674b44d3fee55b5477cb3ae" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>underlying</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
