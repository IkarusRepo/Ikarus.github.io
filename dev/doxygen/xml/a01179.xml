<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01179" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::SparseFlatAssembler</compoundname>
    <basecompoundref refid="a01175" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</basecompoundref>
    <includes refid="a00188" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEC</type>
      </param>
      <param>
        <type>typename DV</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01179_1a1eb28b0dea6febdf02f74f3422978ca2" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEC &gt;</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEC&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="279" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1a4f4a61e636a7641a557ae5cdfeabd00f" prot="public" static="no">
        <type><ref refid="a01175" kindref="compound">VectorFlatAssembler</ref>&lt; FEC, DV &gt;</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::Base =  VectorFlatAssembler&lt;FEC, DV&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="280" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1ab9a93227ae1013354e49cf1db29323ae" prot="public" static="no">
        <type>typename Basis::GridView</type>
        <definition>using Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="297" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" static="no">
        <type>typename DV::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::Basis =  typename DV::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="282" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1abf6599ec65ab1574a3282a553584f9e9" prot="public" static="no">
        <type>DV</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::DirichletValuesType =  DV</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="283" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" static="no">
        <type>FEC</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainer =  FEC</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="284" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1a69ef7a0291ed086199b2f5b4b1173bfc" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::FERequirementType</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FERequirementType =  typename FEContainerRaw::value_type::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="285" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01179_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="286" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01167_1ad65c9d93766e445ec688411634e9bce6" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_reference_v&lt; <ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;, const <ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref>, <ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainerType =  std::conditional_t&lt;std::is_reference_v&lt;FEContainer&gt;, const FEContainer, FEContainer&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerType</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="42" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01179_1ac02e9311c716c192d1d48dc39793ec7c" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::spMatRaw_</definition>
        <argsstring></argsstring>
        <name>spMatRaw_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMatRaw_</qualifiedname>
        <briefdescription>
<para>Raw sparse matrix without changes for dirichlet degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="358" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1a030750362ad353ff893431f9e20981cf" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::spMat_</definition>
        <argsstring></argsstring>
        <name>spMat_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMat_</qualifiedname>
        <briefdescription>
<para>Sparse matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="359" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1ac2cb20ad388fb847134389ce10ba9c42" prot="private" static="no" mutable="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>Eigen::SparseMatrix&lt;double&gt; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::spMatReduced_</definition>
        <argsstring></argsstring>
        <name>spMatReduced_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::spMatReduced_</qualifiedname>
        <briefdescription>
<para>Reduced sparse matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="360" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1ae12b089cb197c5f4e588cc9ff6a7e075" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::Index &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::Index&gt; &gt; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::elementLinearIndices_</definition>
        <argsstring></argsstring>
        <name>elementLinearIndices_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::elementLinearIndices_</qualifiedname>
        <briefdescription>
<para>Vector storing indices of matrix entries in linear storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="362" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1ab804f570494cacd49e0a4f494dc671cf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::Index &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::Index&gt; &gt; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::elementLinearReducedIndices_</definition>
        <argsstring></argsstring>
        <name>elementLinearReducedIndices_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::elementLinearReducedIndices_</qualifiedname>
        <briefdescription>
<para>Vector storing indices of matrix entries in linear storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="364" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1a19841e84b46c4e1d1033356e8e6e2c62" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::sparsePreProcessorRaw_</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessorRaw_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessorRaw_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="365" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1aa0c5c8df07388d8d3d45705a4d00cd75" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::sparsePreProcessor_</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessor_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="365" column="41" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01179_1ad4848245fb52edf2ad5b7ba65a6161e3" prot="private" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::sparsePreProcessorReduced_</definition>
        <argsstring></argsstring>
        <name>sparsePreProcessorReduced_</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::sparsePreProcessorReduced_</qualifiedname>
        <briefdescription>
<para>flags that store if the sparsity pattern construction happened </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="366" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="366" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01179_1acc0799517783d8b8b055afe0e11734db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::SparseFlatAssembler</definition>
        <argsstring>(FEContainer &amp;&amp;fes, const DirichletValuesType &amp;dirichletValues)</argsstring>
        <name>SparseFlatAssembler</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::SparseFlatAssembler</qualifiedname>
        <param>
          <type><ref refid="a01167_1a4bb11a213bcf6c6f18e731bf4281edcb" kindref="member">FEContainer</ref> &amp;&amp;</type>
          <declname>fes</declname>
        </param>
        <param>
          <type>const <ref refid="a01167_1abf6599ec65ab1574a3282a553584f9e9" kindref="member">DirichletValuesType</ref> &amp;</type>
          <declname>dirichletValues</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="a01179" kindref="compound">SparseFlatAssembler</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fes</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirichletValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="294" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="294" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1ab3f0321d5506c724e811b6fbb491af11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>const Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::getRawMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getRawMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the raw sparse matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="305" column="29" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1ace023f955094720794257593607b80f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>const Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::getMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom rows and columns, and a one is written on the diagonal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the modified sparse matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="316" column="29" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1ab9732b32498a6852a4e0447cf193722b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>const Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;::getReducedMatrix</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getReducedMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix quantity requested by feRequirements and returns a reference. The size of the matrix has the size of the free degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the reduced sparse matrix quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="327" column="29" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="a01175_1a15da22b282305962bc6498a1451694de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getRawVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getRawVector</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="226" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="a01175_1a027ac8d2135f675df889fdf80a678081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getVector</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. A zero is written on fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="237" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="a01175_1a51fc1c4a8302dd955bd27dfa6e81bc6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd &amp; Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;::getReducedVector</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedVector</name>
        <qualifiedname>Ikarus::VectorFlatAssembler::getReducedVector</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the vectorial quantity requested by feRequirements and returns a reference. This vector has a reduced size by the number of fixed degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated reduced vectorial quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="246" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="a01171_1a0bf594865140bd900a6f31807dfc6f7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; Ikarus::ScalarAssembler&lt; FEC, DV &gt;::getScalar</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getScalar</name>
        <qualifiedname>Ikarus::ScalarAssembler::getScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="165" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="69" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="75" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; B, FEC &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="84" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1aa8da4086d468797668b6d551129e96dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="90" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::constraintsBelow</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="98" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::isConstrained</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="106" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01167_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="114" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="114" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01179_1a33ad1acb1d98811b4e6ebdf068abe7c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::assembleRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements, Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>assembleRawMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::assembleRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="332" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="89" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1acf88cb0efe46a7d3d1c34a39e345ed47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::getRawMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getRawMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getRawMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="333" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1a4ef2a8faa20c9e230509e667088e542e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::getMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="334" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="114" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1ad205c213fe13488619499fe3f55d555f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
        <definition>Eigen::SparseMatrix&lt; double &gt; &amp; Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::getReducedMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;feRequirements)</argsstring>
        <name>getReducedMatrixImpl</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::getReducedMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01167_1a69ef7a0291ed086199b2f5b4b1173bfc" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="335" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="130" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1a796ff26e3b897dfe7f8cab0b862af6da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::createOccupationPattern</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createOccupationPattern</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createOccupationPattern</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the non-zero entries in the full sparse matrix and passes them to the underlying <ref refid="a00333" kindref="compound">Eigen</ref> sparse matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="339" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="162" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1a7d12431bfcec5f8be506a58208cdda10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::createReducedOccupationPattern</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createReducedOccupationPattern</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createReducedOccupationPattern</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the non-zero entries in the sparse matrix and passes them to the underlying <ref refid="a00333" kindref="compound">Eigen</ref> sparse matrix. The size of the matrix has the size of the free degrees of freedom. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="343" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="180" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1a255f4cc6b5f3364b6aa0dc14e825baff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::createLinearDOFsPerElement</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createLinearDOFsPerElement</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createLinearDOFsPerElement</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves the degree of freedom indices of each element in the vector elementLinearIndices. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="346" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="208" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1a971e734181c513427ad8158e5f2460e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::createLinearDOFsPerElementReduced</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>createLinearDOFsPerElementReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::createLinearDOFsPerElementReduced</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves the degree of freedom indices of each element in the vector elementLinearIndices but excludes fixed degrees of freedom. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="350" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="222" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1ab0916773e55ff1252e9f2287e6199b4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::preProcessSparseMatrix</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>preProcessSparseMatrix</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::preProcessSparseMatrix</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-processes the raw sparse matrix before assembly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="353" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="a01179_1a4716dba4fac2d01e7da1e9f9f8bc87e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::SparseFlatAssembler&lt; B, FEC &gt;::preProcessSparseMatrixReduced</definition>
        <argsstring>(Eigen::SparseMatrix&lt; double &gt; &amp;assemblyMat)</argsstring>
        <name>preProcessSparseMatrixReduced</name>
        <qualifiedname>Ikarus::SparseFlatAssembler::preProcessSparseMatrixReduced</qualifiedname>
        <param>
          <type>Eigen::SparseMatrix&lt; double &gt; &amp;</type>
          <declname>assemblyMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-processes the reduced sparse matrix before assembly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="356" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="249" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01179" kindref="compound">SparseFlatAssembler</ref> assembles matrix quantities using a flat basis Indexing strategy. The matrix is stored in a sparse matrix format. This format is exploited during the assembly process. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEC</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DV</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01167"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01171"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01179"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01175"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01167"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01171"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01179"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01175"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="276" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="277" bodyend="367"/>
    <listofallmembers>
      <member refid="a01179_1a33ad1acb1d98811b4e6ebdf068abe7c4" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>assembleRawMatrixImpl</name></member>
      <member refid="a01179_1a4f4a61e636a7641a557ae5cdfeabd00f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>Base</name></member>
      <member refid="a01179_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>Basis</name></member>
      <member refid="a01167_1aa1a20226eacfb65d0f2b09b397578cab" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="a01167_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="a01179_1a255f4cc6b5f3364b6aa0dc14e825baff" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createLinearDOFsPerElement</name></member>
      <member refid="a01179_1a971e734181c513427ad8158e5f2460e4" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createLinearDOFsPerElementReduced</name></member>
      <member refid="a01179_1a796ff26e3b897dfe7f8cab0b862af6da" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createOccupationPattern</name></member>
      <member refid="a01179_1a7d12431bfcec5f8be506a58208cdda10" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>createReducedOccupationPattern</name></member>
      <member refid="a01179_1abf6599ec65ab1574a3282a553584f9e9" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="a01179_1ae12b089cb197c5f4e588cc9ff6a7e075" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>elementLinearIndices_</name></member>
      <member refid="a01179_1ab804f570494cacd49e0a4f494dc671cf" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>elementLinearReducedIndices_</name></member>
      <member refid="a01167_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="a01179_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="a01179_1a1eb28b0dea6febdf02f74f3422978ca2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="a01167_1ad65c9d93766e445ec688411634e9bce6" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FEContainerType</name></member>
      <member refid="a01179_1a69ef7a0291ed086199b2f5b4b1173bfc" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FERequirementType</name></member>
      <member refid="a01167_1aa8da4086d468797668b6d551129e96dd" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="a01167_1a09b56d7e0fd2161b781450e89a8a32d6" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="a01179_1ace023f955094720794257593607b80f9" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getMatrix</name></member>
      <member refid="a01179_1a4ef2a8faa20c9e230509e667088e542e" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getMatrixImpl</name></member>
      <member refid="a01179_1ab3f0321d5506c724e811b6fbb491af11" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawMatrix</name></member>
      <member refid="a01179_1acf88cb0efe46a7d3d1c34a39e345ed47" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawMatrixImpl</name></member>
      <member refid="a01175_1a15da22b282305962bc6498a1451694de" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getRawVector</name></member>
      <member refid="a01179_1ab9732b32498a6852a4e0447cf193722b" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedMatrix</name></member>
      <member refid="a01179_1ad205c213fe13488619499fe3f55d555f" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedMatrixImpl</name></member>
      <member refid="a01175_1a51fc1c4a8302dd955bd27dfa6e81bc6f" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getReducedVector</name></member>
      <member refid="a01171_1a0bf594865140bd900a6f31807dfc6f7e" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getScalar</name></member>
      <member refid="a01175_1a027ac8d2135f675df889fdf80a678081" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>getVector</name></member>
      <member refid="a01179_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="a01179_1ab9a93227ae1013354e49cf1db29323ae" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>GridView</name></member>
      <member refid="a01167_1a75a1882ad41715632ebeb6a13ed14d69" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="a01179_1ab0916773e55ff1252e9f2287e6199b4b" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>preProcessSparseMatrix</name></member>
      <member refid="a01179_1a4716dba4fac2d01e7da1e9f9f8bc87e9" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>preProcessSparseMatrixReduced</name></member>
      <member refid="a01167_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="a01171_1aea70457453f4efbf67bf9541c43afff2" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>ScalarAssembler</name></member>
      <member refid="a01167_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>size</name></member>
      <member refid="a01179_1acc0799517783d8b8b055afe0e11734db" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>SparseFlatAssembler</name></member>
      <member refid="a01179_1aa0c5c8df07388d8d3d45705a4d00cd75" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessor_</name></member>
      <member refid="a01179_1a19841e84b46c4e1d1033356e8e6e2c62" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessorRaw_</name></member>
      <member refid="a01179_1ad4848245fb52edf2ad5b7ba65a6161e3" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>sparsePreProcessorReduced_</name></member>
      <member refid="a01179_1a030750362ad353ff893431f9e20981cf" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMat_</name></member>
      <member refid="a01179_1ac02e9311c716c192d1d48dc39793ec7c" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMatRaw_</name></member>
      <member refid="a01179_1ac2cb20ad388fb847134389ce10ba9c42" prot="private" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>spMatReduced_</name></member>
      <member refid="a01175_1ae1d7d3cba6d1c1ab4373fff67e1a300c" prot="public" virt="non-virtual"><scope>Ikarus::SparseFlatAssembler</scope><name>VectorFlatAssembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
