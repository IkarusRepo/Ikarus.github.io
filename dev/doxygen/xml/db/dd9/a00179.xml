<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="db/dd9/a00179" kind="file" language="C++">
    <compoundname>linearsolver.hh</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">variant</includes>
    <includes local="no">dune/common/exceptions.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">Eigen/SparseCore</includes>
    <includedby refid="d5/dcb/a00170" local="no">newtonraphson.hh</includedby>
    <includedby refid="d5/de9/a00176" local="no">newtonraphsonwithscalarsubsidiaryfunction.hh</includedby>
    <includedby refid="da/d15/a00188" local="no">pathfollowingfunctions.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>linearsolver.hh</label>
        <link refid="db/dd9/a00179"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Core</label>
      </node>
      <node id="7">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="5">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="3">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>variant</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>adaptivestepsizing.hh</label>
        <link refid="de/df3/a00185"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>loadcontrol.hh</label>
        <link refid="d7/d25/a00182"/>
      </node>
      <node id="12">
        <label>pathfollowingfunctions.hh</label>
        <link refid="da/d15/a00188"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>pathfollowingtechnique.hh</label>
        <link refid="d9/dd0/a00191"/>
      </node>
      <node id="6">
        <label>kirchhoffloveshell.hh</label>
        <link refid="da/d6b/a02438"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>materials.hh</label>
        <link refid="dc/dee/a00053"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vanishingstress.hh</label>
        <link refid="dc/d87/a00032"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d9/dd6/a02441"/>
      </node>
      <node id="8">
        <label>material.hh</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>linearsolver.hh</label>
        <link refid="db/dd9/a00179"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>newtonraphson.hh</label>
        <link refid="d5/dcb/a00170"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>newtonraphsonwithscalarsubsidiaryfunction.hh</label>
        <link refid="d5/de9/a00176"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>_ikarus.cc</label>
        <link refid="de/d79/a00203"/>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d85/a01273" prot="public">Ikarus::LinearSolverTemplate</innerclass>
    <innerclass refid="d2/d1d/a01277" prot="private">Ikarus::LinearSolverTemplate::SolverBase</innerclass>
    <innerclass refid="d5/d6f/a01281" prot="private">Ikarus::LinearSolverTemplate::SolverImpl</innerclass>
    <innernamespace refid="dd/df3/a00219">Ikarus</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/exceptions.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/SparseCore&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dd/df3/a00219" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906" kindref="member">SolverTypeTag</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">none</ref>,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a43e7ad1498548ecfbe9359418877c793" kindref="member">si_ConjugateGradient</ref>,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a64a3b585d23ed07479c1452d49f397bb" kindref="member">si_LeastSquaresConjugateGradient</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a3ba09bd833aa666cbeca9bfd4a33be6f" kindref="member">si_BiCGSTAB</ref>,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906acd4c06ca3bfe2246c9ec45bee84b5852" kindref="member">sd_SimplicialLLT</ref>,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906af493d8a2d2d89f06181e77bc79cabf1c" kindref="member">sd_SimplicialLDLT</ref>,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906ae7cfd15be408672026faa788c0c112e5" kindref="member">sd_SparseLU</ref>,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a259246f1b3299da36945e32f5660bebd" kindref="member">sd_SparseQR</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a286dc99776bcd1ea313e669aa17b3236" kindref="member">sd_CholmodSupernodalLLT</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906afe6a46ed15566813699daa9c9cbf85d5" kindref="member">sd_UmfPackLU</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906aa8fe11042608f12d110c154033361fcc" kindref="member">sd_SuperLU</ref>,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a97eafebe024f68db956c95519ddf66f2" kindref="member">d_PartialPivLU</ref>,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a4c20d1c5006d9987b894313a4af5de6e" kindref="member">d_FullPivLU</ref>,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a290d38c1d75cda978733c7ee8266e16e" kindref="member">d_HouseholderQR</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906af66de0478863779eca4d9e7dcf39c59a" kindref="member">d_ColPivHouseholderQR</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a9be60de1df84a8b371f0ad372aba4582" kindref="member">d_FullPivHouseholderQR</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906ae1f5f0486da0c6645a75c3df39d8d942" kindref="member">d_CompleteOrthogonalDecomposition</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a40c05e324bcfe6242fddbef28720e86a" kindref="member">d_LLT</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906ad495de2cc8831501954c24afe8688190" kindref="member">d_LDLT</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="dd/df3/a00219_1a4763ca5888a027ed9b8d965d67cbb9ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="dd/df3/a00219_1a4763ca5888a027ed9b8d965d67cbb9ab" kindref="member">MatrixTypeTag</ref><sp/>{<sp/><ref refid="dd/df3/a00219_1a4763ca5888a027ed9b8d965d67cbb9aba9a71a13863c84ba34fc41595fc2ee0c6" kindref="member">Dense</ref>,<sp/><ref refid="dd/df3/a00219_1a4763ca5888a027ed9b8d965d67cbb9aba7407fb7e6a4df6392aaabd2368157312" kindref="member">Sparse</ref><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="42" refid="de/d85/a01273" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref><sp/>=<sp/>Eigen::SparseMatrix&lt;ScalarType&gt;;</highlight></codeline>
<codeline lineno="45" refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" kindref="member">DenseMatrixType</ref><sp/><sp/>=<sp/>Eigen::MatrixX&lt;ScalarType&gt;;</highlight></codeline>
<codeline lineno="46" refid="de/d85/a01273_1a477e8cefcd049db15451e765fcef4d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a477e8cefcd049db15451e765fcef4d76" kindref="member">LinearSolverTemplate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906" kindref="member">SolverTypeTag</ref>&amp;<sp/>p_solverTypeTag);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="de/d85/a01273_1af2696f3af9722c49e0a828f2e31d8622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d85/a01273_1af2696f3af9722c49e0a828f2e31d8622" kindref="member">~LinearSolverTemplate</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49" refid="de/d85/a01273_1ac7a43c5219405e5a5e5295f18525c54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;<sp/><ref refid="de/d85/a01273_1ac7a43c5219405e5a5e5295f18525c54e" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref><sp/>tmp(other);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="de/d85/a01273_1ab79dba73877784d610d9d0a74acf93f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d85/a01273_1ab79dba73877784d610d9d0a74acf93f1" kindref="member">LinearSolverTemplate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;<sp/>rhs)<sp/>{<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="de/d85/a01273_1ab79dba73877784d610d9d0a74acf93f1" kindref="member">LinearSolverTemplate</ref>(rhs.solverTypeTag);<sp/>}</highlight></codeline>
<codeline lineno="55" refid="de/d85/a01273_1adfd39f1d644239e2bd1febc1d7765944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d85/a01273_1adfd39f1d644239e2bd1febc1d7765944" kindref="member">LinearSolverTemplate</ref>(<ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="56" refid="de/d85/a01273_1a8f9404cb0498f2e48b12312510b2c6fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;<sp/>operator=(<ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>private:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>SolverBase<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~SolverBase()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a33237d5e237bf2272d2c58c648eda5a1" kindref="member">analyzePattern</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" kindref="member">DenseMatrixType</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a33237d5e237bf2272d2c58c648eda5a1" kindref="member">analyzePattern</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1ad9515d35c770a9d2a087a20593af5d85" kindref="member">factorize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" kindref="member">DenseMatrixType</ref>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1ad9515d35c770a9d2a087a20593af5d85" kindref="member">factorize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" kindref="member">DenseMatrixType</ref>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::VectorX&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::MatrixX2&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX2&lt;ScalarType&gt;&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::MatrixX3&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX3&lt;ScalarType&gt;&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::MatrixX&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX&lt;ScalarType&gt;&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Solver&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SolverImpl<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SolverBase<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SolverBase::analyzePattern;<sp/><sp/></highlight><highlight class="comment">//<sp/>forward<sp/>use<sp/>of<sp/>analyzePattern(DenseMatrixType)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a33237d5e237bf2272d2c58c648eda5a1" kindref="member">analyzePattern</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref>&amp;<sp/>A)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Solver<sp/>sol)<sp/>{<sp/>sol.analyzePattern(A);<sp/>})<sp/>solver.analyzePattern(A);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1ad9515d35c770a9d2a087a20593af5d85" kindref="member">factorize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref>&amp;<sp/>A)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Solver<sp/>sol)<sp/>{<sp/>sol.factorize(A);<sp/>})<sp/>solver.factorize(A);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dense<sp/>Solvers<sp/>do<sp/>not<sp/>have<sp/>a<sp/>factorize<sp/>method<sp/>therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>interface<sp/>we<sp/>just<sp/>call<sp/>compute<sp/>for<sp/>dense<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1ad9515d35c770a9d2a087a20593af5d85" kindref="member">factorize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" kindref="member">DenseMatrixType</ref>&amp;<sp/>A)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Solver<sp/>sol)<sp/>{<sp/>sol.compute(A);<sp/>}<sp/>&amp;&amp;<sp/>std::is_base_of_v&lt;Eigen::SolverBase&lt;Solver&gt;,<sp/>Solver&gt;)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.compute(A);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a374226b59baa30615d574bdd7ec230c8" kindref="member">SparseMatrixType</ref>&amp;<sp/>A)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_base_of_v&lt;Eigen::SparseSolverBase&lt;Solver&gt;,<sp/>Solver&gt;)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.<ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(A);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>solver<sp/>does<sp/>not<sp/>support<sp/>solving<sp/>with<sp/>sparse<sp/>matrices.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a878cccde0e595d7b0f7d6a2188aeeb31" kindref="member">DenseMatrixType</ref>&amp;<sp/>A)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_base_of_v&lt;Eigen::SolverBase&lt;Solver&gt;,<sp/>Solver&gt;)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.<ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(A);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>solver<sp/>does<sp/>not<sp/>support<sp/>solving<sp/>with<sp/>dense<sp/>matrices.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::VectorX&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>solver.solve(b);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::MatrixX2&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX2&lt;ScalarType&gt;&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>solver.solve(b);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::MatrixX3&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX3&lt;ScalarType&gt;&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>solver.solve(b);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::MatrixX&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX&lt;ScalarType&gt;&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>solver.solve(b);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Solver<sp/>solver;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SolverBase&gt;<sp/>solverimpl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906" kindref="member">SolverTypeTag</ref><sp/>solverTypeTag{<ref refid="dd/df3/a00219_1a731a9ee6621f91193c15f31b9a399906a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">SolverTypeTag::none</ref>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_same_v&lt;MatrixType,<sp/>DenseMatrixType&gt;<sp/>||<sp/>std::is_same_v&lt;MatrixType,<sp/>SparseMatrixType&gt;</highlight></codeline>
<codeline lineno="130" refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate</ref>&amp;<sp/><ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixType&amp;<sp/>A)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>solverimpl-&gt;<ref refid="de/d85/a01273_1a347fcf892a32d3f382cebe8a09fcb86f" kindref="member">compute</ref>(A);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_same_v&lt;MatrixType,<sp/>DenseMatrixType&gt;<sp/>||<sp/>std::is_same_v&lt;MatrixType,<sp/>SparseMatrixType&gt;</highlight></codeline>
<codeline lineno="136" refid="de/d85/a01273_1a33237d5e237bf2272d2c58c648eda5a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a33237d5e237bf2272d2c58c648eda5a1" kindref="member">analyzePattern</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixType&amp;<sp/>A)<sp/>{<sp/>solverimpl-&gt;analyzePattern(A);<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixType&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_same_v&lt;MatrixType,<sp/>DenseMatrixType&gt;<sp/>||<sp/>std::is_same_v&lt;MatrixType,<sp/>SparseMatrixType&gt;</highlight></codeline>
<codeline lineno="140" refid="de/d85/a01273_1ad9515d35c770a9d2a087a20593af5d85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1ad9515d35c770a9d2a087a20593af5d85" kindref="member">factorize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixType&amp;<sp/>A)<sp/>{<sp/>solverimpl-&gt;factorize(A);<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a4ddf79d3353ecc1c7e7a25c7e249cb78" kindref="member">solve</ref>(Eigen::VectorX&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&amp;<sp/>b)<sp/>{<sp/>solverimpl-&gt;solve(x,<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="143" refid="de/d85/a01273_1af33f3862045be96e92dd09a954260857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1af33f3862045be96e92dd09a954260857" kindref="member">solve</ref>(Eigen::MatrixX3&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX3&lt;ScalarType&gt;&amp;<sp/>b)<sp/>{<sp/>solverimpl-&gt;solve(x,<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="144" refid="de/d85/a01273_1a77afedeea7ca3cc8ee541aade55e859b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a77afedeea7ca3cc8ee541aade55e859b" kindref="member">solve</ref>(Eigen::MatrixX2&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX2&lt;ScalarType&gt;&amp;<sp/>b)<sp/>{<sp/>solverimpl-&gt;solve(x,<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="145" refid="de/d85/a01273_1a0db3eb266a56bb16e2f4fbd22a66b14d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273_1a0db3eb266a56bb16e2f4fbd22a66b14d" kindref="member">solve</ref>(Eigen::MatrixX&lt;ScalarType&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixX&lt;ScalarType&gt;&amp;<sp/>b)<sp/>{<sp/>solverimpl-&gt;solve(x,<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="dd/df3/a00219_1ae747d502e8f67af4c5412d8a6febeb4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate&lt;double&gt;</ref><sp/><ref refid="dd/df3/a00219_1ae747d502e8f67af4c5412d8a6febeb4c" kindref="member">LinearSolver</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d85/a01273" kindref="compound">LinearSolverTemplate&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/linearsolver/linearsolver.hh"/>
  </compounddef>
</doxygen>
