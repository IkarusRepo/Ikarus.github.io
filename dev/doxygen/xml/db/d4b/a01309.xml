<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="db/d4b/a01309" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::NonLinearElastic</compoundname>
    <basecompoundref refid="de/df7/a01201" prot="public" virt="non-virtual">Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</basecompoundref>
    <includes refid="da/d23/a02452" local="no">ikarus/finiteelements/mechanics/nonlinearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename Basis_</type>
      </param>
      <param>
        <type>typename Material_</type>
      </param>
      <param>
        <type>typename FERequirements_</type>
        <defval><ref refid="d8/d53/a01225" kindref="compound">FERequirements</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="db/d4b/a01309_1a35ac696022a324503a5b95fc5453498c" prot="public" static="no">
        <type>Basis_</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::Basis =  Basis_</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::NonLinearElastic::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="46" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1ac44404a0f9d5ee9c786775dc0b8ef760" prot="public" static="no">
        <type>Material_</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::Material =  Material_</definition>
        <argsstring></argsstring>
        <name>Material</name>
        <qualifiedname>Ikarus::NonLinearElastic::Material</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="47" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1add3d82673a057463efdd636c7509accd" prot="public" static="no">
        <type>typename <ref refid="d2/d9b/a01433_1ab9e57abdb5f4abeb030f6122df75849e" kindref="member">Basis::FlatBasis</ref></type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::FlatBasis =  typename Basis::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::NonLinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="48" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1a40a4c51d68b06cefe120b931a6fb8647" prot="public" static="no">
        <type><ref refid="de/df7/a01201" kindref="compound">PowerBasisFE</ref>&lt; <ref refid="db/d4b/a01309_1add3d82673a057463efdd636c7509accd" kindref="member">FlatBasis</ref> &gt;</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::BasePowerFE =  PowerBasisFE&lt;FlatBasis&gt;</definition>
        <argsstring></argsstring>
        <name>BasePowerFE</name>
        <qualifiedname>Ikarus::NonLinearElastic::BasePowerFE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="49" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" prot="public" static="no">
        <type>FERequirements_</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::FERequirementType =  FERequirements_</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::NonLinearElastic::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="50" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1ab98893c89ad3d1b7a51819c50d5b9849" prot="public" static="no">
        <type><ref refid="dc/dab/a01237" kindref="compound">ResultRequirements</ref>&lt; <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &gt;</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::ResultRequirementsType =  ResultRequirements&lt;FERequirementType&gt;</definition>
        <argsstring></argsstring>
        <name>ResultRequirementsType</name>
        <qualifiedname>Ikarus::NonLinearElastic::ResultRequirementsType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="51" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1ae342975d162e693d1bbd6a57198651b3" prot="public" static="no">
        <type>typename FlatBasis::LocalView</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::LocalView =  typename FlatBasis::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::NonLinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="52" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1a08fd6a09968386069f41de2703d11aba" prot="public" static="no">
        <type>typename LocalView::Element</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::Element =  typename LocalView::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::NonLinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="53" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1a915946640658946999ff0a2f8058e059" prot="public" static="no">
        <type>typename Element::Geometry</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::Geometry =  typename Element::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::NonLinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="54" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1a7fdd426490c280dbef9647b5a991dead" prot="public" static="no">
        <type>typename FlatBasis::GridView</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::GridView =  typename FlatBasis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::NonLinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="55" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1a1585e90e9b65b2b5aab1e2ec6749edcd" prot="public" static="no">
        <type><ref refid="de/d90/a01313" kindref="compound">TraitsFromLocalView</ref>&lt; <ref refid="db/d4b/a01309_1ae342975d162e693d1bbd6a57198651b3" kindref="member">LocalView</ref>, useEigenRef &gt;</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::Traits =  TraitsFromLocalView&lt;LocalView, useEigenRef&gt;</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::NonLinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="56" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/d4b/a01309_1ac980630bbf94190d87100b44b7a53837" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="db/d4b/a01309_1ae342975d162e693d1bbd6a57198651b3" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().<ref refid="db/d4b/a01309_1a8faad021597375498642d3db4300a365" kindref="member">localBasis</ref>())</type>
        <definition>using Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::NonLinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="60" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/df7/a01201_1a603635da96938a751807c9dc1dd81f39" prot="public" static="no">
        <type>Basis_::FlatBasis</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::RootBasis =  Basis_::FlatBasis</definition>
        <argsstring></argsstring>
        <name>RootBasis</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::RootBasis</qualifiedname>
        <briefdescription>
<para>Type of the root basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="25" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/df7/a01201_1a6f9f635b6e082d4f56988229a944b4e6" prot="public" static="no">
        <type>typename LocalView::MultiIndex</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::GlobalIndex =  typename LocalView::MultiIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="27" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/df7/a01201_1a74443a55b1c44a242d4089637228d001" prot="public" static="no">
        <type>typename LocalView::Element</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::GridElement =  typename LocalView::Element</definition>
        <argsstring></argsstring>
        <name>GridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::GridElement</qualifiedname>
        <briefdescription>
<para>Type of the grid element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="28" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="db/d4b/a01309_1a089f6bc160374739a5111aa99e2f4b95" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::NonLinearElastic::myDim</qualifiedname>
        <initializer>= <ref refid="de/d90/a01313_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="57" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="57" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" compoundref="da/d23/a02452" startline="218" endline="236">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1addad11570c2b1f2520b32b650931c2bd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::NonLinearElastic::worldDim</qualifiedname>
        <initializer>= <ref refid="de/d90/a01313_1a47ccda97cc8e04f87be6d2c3a165ba98" kindref="member">Traits::worlddim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="58" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1a2b89a8d5f5b634b295327b9cdbf8579d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::strainType</definition>
        <argsstring></argsstring>
        <name>strainType</name>
        <qualifiedname>Ikarus::NonLinearElastic::strainType</qualifiedname>
        <initializer>= <ref refid="d4/d66/a00289_1ggacef1e451de1a99845c59d7391064fb8faca3f1e4bb21fd00a3d29c5d8aff8e11e" kindref="member">StrainTags::greenLagrangian</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="59" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/df7/a01201_1a08d63c99f722a352ee1ebe29bcb88bcd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::num_children</definition>
        <argsstring></argsstring>
        <name>num_children</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::num_children</qualifiedname>
        <briefdescription>
<para>Number of children in the powerBasis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="48" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="db/d4b/a01309_1a359db119203262c5026047ec8695822c" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="db/d4b/a01309_1a915946640658946999ff0a2f8058e059" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::NonLinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="262" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="262" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" compoundref="da/d23/a02452" startline="218" endline="236">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1a89b811cd039a701d8a1d2c5b8796c50f" compoundref="da/d23/a02452" startline="113" endline="119">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::displacementFunction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1a8faad021597375498642d3db4300a365" prot="public" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="db/d4b/a01309_1ac980630bbf94190d87100b44b7a53837" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::localBasis</definition>
        <argsstring></argsstring>
        <name>localBasis</name>
        <qualifiedname>Ikarus::NonLinearElastic::localBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="263" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="263" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1a89b811cd039a701d8a1d2c5b8796c50f" compoundref="da/d23/a02452" startline="113" endline="119">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::displacementFunction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1a86936a63d3b9cd62a726b3d79719981c" prot="public" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="db/d4b/a01309_1addad11570c2b1f2520b32b650931c2bd" kindref="member">worldDim</ref> &gt;(const <ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="db/d4b/a01309_1addad11570c2b1f2520b32b650931c2bd" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::volumeLoad</definition>
        <argsstring></argsstring>
        <name>volumeLoad</name>
        <qualifiedname>Ikarus::NonLinearElastic::volumeLoad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="265" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="265" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1ad6caab093f5466a9c18cc50f0611a3ce" prot="public" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="db/d4b/a01309_1addad11570c2b1f2520b32b650931c2bd" kindref="member">worldDim</ref> &gt;(const <ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="db/d4b/a01309_1addad11570c2b1f2520b32b650931c2bd" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::neumannBoundaryLoad</definition>
        <argsstring></argsstring>
        <name>neumannBoundaryLoad</name>
        <qualifiedname>Ikarus::NonLinearElastic::neumannBoundaryLoad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="267" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="267" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1ad719bcc95293fbe32f399a782bebd684" prot="public" static="no" mutable="no">
        <type>const BoundaryPatch&lt; <ref refid="db/d4b/a01309_1a7fdd426490c280dbef9647b5a991dead" kindref="member">GridView</ref> &gt; *</type>
        <definition>const BoundaryPatch&lt;GridView&gt;* Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::neumannBoundary</definition>
        <argsstring></argsstring>
        <name>neumannBoundary</name>
        <qualifiedname>Ikarus::NonLinearElastic::neumannBoundary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="268" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="268" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1ab44e1c23e8a91a5e9faceed55a1149b1" prot="public" static="no" mutable="no">
        <type><ref refid="db/d4b/a01309_1ac44404a0f9d5ee9c786775dc0b8ef760" kindref="member">Material</ref></type>
        <definition>Material Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::mat</definition>
        <argsstring></argsstring>
        <name>mat</name>
        <qualifiedname>Ikarus::NonLinearElastic::mat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="269" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="269" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1afc5090fbbd1054eaa33932e88f2fdb42" compoundref="da/d23/a02452" startline="245" endline="260">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="db/d4b/a01309_1a5e139eb8977fd8a47656dc680ac15214" compoundref="da/d23/a02452" startline="163" endline="170">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::getInternalEnergy</referencedby>
        <referencedby refid="db/d4b/a01309_1ad86ce202de620c405536c11514a0f6db" compoundref="da/d23/a02452" startline="182" endline="189">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::getStress</referencedby>
        <referencedby refid="db/d4b/a01309_1ae091d629e7aa235d88e381368a75f5bc" compoundref="da/d23/a02452" startline="145" endline="152">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1abad7fc68b05918d1fa3dac025de1eefe" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::numberOfNodes</definition>
        <argsstring></argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::NonLinearElastic::numberOfNodes</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="270" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="270" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" compoundref="da/d23/a02452" startline="218" endline="236">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1af22294395e75ecd2bba06e5716215605" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::NonLinearElastic::order</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="271" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="271" bodyend="-1"/>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d4b/a01309_1afcba98cc2fcdf140b11fd652dcc7d361" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumeLoad</type>
            <defval><ref refid="d4/dfd/a01465" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
          <param>
            <type>typename NeumannBoundaryLoad</type>
            <defval><ref refid="d4/dfd/a01465" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::NonLinearElastic</definition>
        <argsstring>(const Basis &amp;globalBasis, const typename LocalView::Element &amp;element, const Material &amp;p_mat, VolumeLoad p_volumeLoad={}, const BoundaryPatch&lt; GridView &gt; *p_neumannBoundary=nullptr, NeumannBoundaryLoad p_neumannBoundaryLoad={})</argsstring>
        <name>NonLinearElastic</name>
        <qualifiedname>Ikarus::NonLinearElastic::NonLinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1a35ac696022a324503a5b95fc5453498c" kindref="member">Basis</ref> &amp;</type>
          <declname>globalBasis</declname>
        </param>
        <param>
          <type>const typename LocalView::Element &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="db/d4b/a01309_1ac44404a0f9d5ee9c786775dc0b8ef760" kindref="member">Material</ref> &amp;</type>
          <declname>p_mat</declname>
        </param>
        <param>
          <type>VolumeLoad</type>
          <declname>p_volumeLoad</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="db/d4b/a01309_1a7fdd426490c280dbef9647b5a991dead" kindref="member">GridView</ref> &gt; *</type>
          <declname>p_neumannBoundary</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>NeumannBoundaryLoad</type>
          <declname>p_neumannBoundaryLoad</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="db/d4b/a01309" kindref="compound">NonLinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the volume load function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NeumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>The global basis for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element for which the finite element is constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The material for the non-linear elastic element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_volumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch (default is nullptr). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="75" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="75" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1a89b811cd039a701d8a1d2c5b8796c50f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::displacementFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::NonLinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Get the displacement function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A StandardLocalFunction representing the displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="113" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="113" bodyend="119"/>
        <referencedby refid="db/d4b/a01309_1afc5090fbbd1054eaa33932e88f2fdb42" compoundref="da/d23/a02452" startline="245" endline="260">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ae258d2211b130b7b6f167aa86ac1fab7" compoundref="da/d23/a02452" startline="130" endline="133">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1ae258d2211b130b7b6f167aa86ac1fab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::strainFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::NonLinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>The strain function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function calculated using greenLagrangeStrains. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="130" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="130" bodyend="133"/>
        <referencedby refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" compoundref="da/d23/a02452" startline="218" endline="236">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1ae091d629e7aa235d88e381368a75f5bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
          <param>
            <type>int</type>
            <declname>strainDim</declname>
            <defname>strainDim</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::materialTangent</definition>
        <argsstring>(const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;strain) const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::NonLinearElastic::materialTangent</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;</type>
          <declname>strain</declname>
        </param>
        <briefdescription>
<para>Get the material tangent for the given strain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the material and strain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strainDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the strain vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether to use Voigt notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strain</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent calculated using the material&apos;s tangentModuli function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="145" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="145" bodyend="152"/>
        <referencedby refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" compoundref="da/d23/a02452" startline="218" endline="236">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1a5e139eb8977fd8a47656dc680ac15214" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
          <param>
            <type>int</type>
            <declname>strainDim</declname>
            <defname>strainDim</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::getInternalEnergy</definition>
        <argsstring>(const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;strain) const</argsstring>
        <name>getInternalEnergy</name>
        <qualifiedname>Ikarus::NonLinearElastic::getInternalEnergy</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;</type>
          <declname>strain</declname>
        </param>
        <briefdescription>
<para>Get the internal energy for the given strain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the material and strain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strainDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strain</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The internal energy calculated using the material&apos;s storedEnergy function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="163" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="163" bodyend="170"/>
        <referencedby refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" compoundref="da/d23/a02452" startline="275" endline="323">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1ad86ce202de620c405536c11514a0f6db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
          <param>
            <type>int</type>
            <declname>strainDim</declname>
            <defname>strainDim</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::getStress</definition>
        <argsstring>(const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;strain) const</argsstring>
        <name>getStress</name>
        <qualifiedname>Ikarus::NonLinearElastic::getStress</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ScalarType, strainDim &gt; &amp;</type>
          <declname>strain</declname>
        </param>
        <briefdescription>
<para>Get the stress for the given strain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the material and strain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strainDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the strain vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to use the Voigt notation for stress. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strain</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The stress vector calculated using the material&apos;s stresses function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="182" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="182" bodyend="189"/>
        <referencedby refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" compoundref="da/d23/a02452" startline="218" endline="236">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" compoundref="da/d23/a02452" startline="326" endline="381">Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1a744057f5543df5a612211f6fb1acbd7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="198" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1affd164f3f82e4856e5fea2cf9479324c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="207" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="218" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="218" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1afc5090fbbd1054eaa33932e88f2fdb42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateAt</definition>
        <argsstring>(const ResultRequirementsType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, ResultTypeMap&lt; double &gt; &amp;result) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1ab98893c89ad3d1b7a51819c50d5b9849" kindref="member">ResultRequirementsType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="de/d90/a01313_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="d6/da1/a01233" kindref="compound">ResultTypeMap</ref>&lt; double &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculate specified results at a given local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The ResultRequirementsType object specifying the required results. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>The local position for which results are to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="d6/da1/a01233" kindref="compound">ResultTypeMap</ref> object to store the calculated results. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="245" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="245" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a65fbcfb67bd20fd4a434230b5efa5bd1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::size</qualifiedname>
        <briefdescription>
<para>Get the size of the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="54" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1ac47a208cf2511bf8676282280360ab38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::globalFlatIndices</definition>
        <argsstring>(std::vector&lt; GlobalIndex &gt; &amp;globalIndices) const</argsstring>
        <name>globalFlatIndices</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::globalFlatIndices</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="de/df7/a01201_1a6f9f635b6e082d4f56988229a944b4e6" kindref="member">GlobalIndex</ref> &gt; &amp;</type>
          <declname>globalIndices</declname>
        </param>
        <briefdescription>
<para>Get the global flat indices for the power basis. </para>
        </briefdescription>
        <detaileddescription>
<para>The global indices are collected in a FlatInterLeaved order. I.e. x_0, y_0, z_0, ..., x_n, y_n, z_n</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store global indices. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="63" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="de/df7/a01201_1a74443a55b1c44a242d4089637228d001" kindref="member">GridElement</ref> &amp;</type>
        <definition>const GridElement &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::gridElement</definition>
        <argsstring>() const</argsstring>
        <name>gridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::gridElement</qualifiedname>
        <briefdescription>
<para>Get the grid element associated with the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The grid element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="78" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="db/d4b/a01309_1ae342975d162e693d1bbd6a57198651b3" kindref="member">LocalView</ref> &amp;</type>
        <definition>const LocalView &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::localView</definition>
        <argsstring>() const</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the const reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The const reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="84" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a00a045439d18c431ef49d7349230272b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d4b/a01309_1ae342975d162e693d1bbd6a57198651b3" kindref="member">LocalView</ref> &amp;</type>
        <definition>LocalView &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::localView</definition>
        <argsstring>()</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="90" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="275" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="275" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::NonLinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="326" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="326" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="db/d4b/a01309" kindref="compound">NonLinearElastic</ref> class represents a non-linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Basis_</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis type for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Material_</parametername>
</parameternamelist>
<parameterdescription>
<para>The material type for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FERequirements_</parametername>
</parameternamelist>
<parameterdescription>
<para>The requirements for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag indicating whether to use <ref refid="d5/d0f/a00308" kindref="compound">Eigen</ref> references. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;</label>
        <link refid="db/d4b/a01309"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::PowerBasisFE&lt; Basis &gt;</label>
        <link refid="de/df7/a01201"/>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</label>
        <link refid="de/df7/a01201"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Basis_::FlatBasis &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::NonLinearElastic&lt; Basis_, Material_, FERequirements_, useEigenRef &gt;</label>
        <link refid="db/d4b/a01309"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>geo_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::PowerBasisFE&lt; Basis &gt;</label>
        <link refid="de/df7/a01201"/>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</label>
        <link refid="de/df7/a01201"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Basis_::FlatBasis &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="4">
        <label>std::shared_ptr&lt; const Geometry &gt;</label>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; const Geometry &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::shared_ptr&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" line="44" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/nonlinearelastic.hh" bodystart="44" bodyend="382"/>
    <listofallmembers>
      <member refid="db/d4b/a01309_1a40a4c51d68b06cefe120b931a6fb8647" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>BasePowerFE</name></member>
      <member refid="db/d4b/a01309_1a35ac696022a324503a5b95fc5453498c" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Basis</name></member>
      <member refid="db/d4b/a01309_1afc5090fbbd1054eaa33932e88f2fdb42" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateAt</name></member>
      <member refid="db/d4b/a01309_1a4cdd78cc86c784202967911c9953e667" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="db/d4b/a01309_1a744057f5543df5a612211f6fb1acbd7c" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateScalar</name></member>
      <member refid="db/d4b/a01309_1aa5bba94f05661386e4e62d6c74889490" prot="protected" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="db/d4b/a01309_1affd164f3f82e4856e5fea2cf9479324c" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateVector</name></member>
      <member refid="db/d4b/a01309_1ab3328f45d8603589239dcea4c86a745b" prot="protected" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="db/d4b/a01309_1a89b811cd039a701d8a1d2c5b8796c50f" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>displacementFunction</name></member>
      <member refid="db/d4b/a01309_1a08fd6a09968386069f41de2703d11aba" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Element</name></member>
      <member refid="db/d4b/a01309_1aaf1802dd03278847b036a00cc9577ed5" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>FERequirementType</name></member>
      <member refid="db/d4b/a01309_1add3d82673a057463efdd636c7509accd" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>FlatBasis</name></member>
      <member refid="db/d4b/a01309_1a359db119203262c5026047ec8695822c" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>geo_</name></member>
      <member refid="db/d4b/a01309_1a915946640658946999ff0a2f8058e059" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Geometry</name></member>
      <member refid="db/d4b/a01309_1a5e139eb8977fd8a47656dc680ac15214" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>getInternalEnergy</name></member>
      <member refid="db/d4b/a01309_1ad86ce202de620c405536c11514a0f6db" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>getStress</name></member>
      <member refid="de/df7/a01201_1ac47a208cf2511bf8676282280360ab38" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>globalFlatIndices</name></member>
      <member refid="de/df7/a01201_1a6f9f635b6e082d4f56988229a944b4e6" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>GlobalIndex</name></member>
      <member refid="de/df7/a01201_1a74443a55b1c44a242d4089637228d001" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>GridElement</name></member>
      <member refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>gridElement</name></member>
      <member refid="db/d4b/a01309_1a7fdd426490c280dbef9647b5a991dead" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>GridView</name></member>
      <member refid="db/d4b/a01309_1a8faad021597375498642d3db4300a365" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>localBasis</name></member>
      <member refid="db/d4b/a01309_1ac980630bbf94190d87100b44b7a53837" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="db/d4b/a01309_1ae342975d162e693d1bbd6a57198651b3" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>LocalView</name></member>
      <member refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>localView</name></member>
      <member refid="de/df7/a01201_1a00a045439d18c431ef49d7349230272b" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>localView</name></member>
      <member refid="db/d4b/a01309_1ab44e1c23e8a91a5e9faceed55a1149b1" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>mat</name></member>
      <member refid="db/d4b/a01309_1ac44404a0f9d5ee9c786775dc0b8ef760" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Material</name></member>
      <member refid="db/d4b/a01309_1ae091d629e7aa235d88e381368a75f5bc" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>materialTangent</name></member>
      <member refid="db/d4b/a01309_1a089f6bc160374739a5111aa99e2f4b95" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>myDim</name></member>
      <member refid="db/d4b/a01309_1ad719bcc95293fbe32f399a782bebd684" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>neumannBoundary</name></member>
      <member refid="db/d4b/a01309_1ad6caab093f5466a9c18cc50f0611a3ce" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>neumannBoundaryLoad</name></member>
      <member refid="db/d4b/a01309_1afcba98cc2fcdf140b11fd652dcc7d361" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>NonLinearElastic</name></member>
      <member refid="de/df7/a01201_1a08d63c99f722a352ee1ebe29bcb88bcd" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>num_children</name></member>
      <member refid="db/d4b/a01309_1abad7fc68b05918d1fa3dac025de1eefe" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="db/d4b/a01309_1af22294395e75ecd2bba06e5716215605" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>order</name></member>
      <member refid="de/df7/a01201_1a009345be8aeaf011f22f4c32c7d6f638" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>PowerBasisFE</name></member>
      <member refid="db/d4b/a01309_1ab98893c89ad3d1b7a51819c50d5b9849" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>ResultRequirementsType</name></member>
      <member refid="de/df7/a01201_1a603635da96938a751807c9dc1dd81f39" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>RootBasis</name></member>
      <member refid="de/df7/a01201_1a65fbcfb67bd20fd4a434230b5efa5bd1" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>size</name></member>
      <member refid="db/d4b/a01309_1ae258d2211b130b7b6f167aa86ac1fab7" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>strainFunction</name></member>
      <member refid="db/d4b/a01309_1a2b89a8d5f5b634b295327b9cdbf8579d" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>strainType</name></member>
      <member refid="db/d4b/a01309_1a1585e90e9b65b2b5aab1e2ec6749edcd" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>Traits</name></member>
      <member refid="db/d4b/a01309_1a86936a63d3b9cd62a726b3d79719981c" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>volumeLoad</name></member>
      <member refid="db/d4b/a01309_1addad11570c2b1f2520b32b650931c2bd" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearElastic</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
