<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="db/d4b/a01309" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::NonLinearSolverInformation</compoundname>
    <includes refid="dc/de6/a00167" local="no">ikarus/solver/nonlinearsolver/solverinfos.hh</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="db/d4b/a01309_1acb65d72d7b2291a9b0d958ce0e4e0887" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ikarus::NonLinearSolverInformation::success</definition>
        <argsstring></argsstring>
        <name>success</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::success</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="9" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1ab09859737734f97734f20624f9f3c934" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverInformation::residualNorm</definition>
        <argsstring></argsstring>
        <name>residualNorm</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::residualNorm</qualifiedname>
        <initializer>{std::numeric_limits&lt;double&gt;::infinity()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="10" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1a66f51414779f3e563557157fb688f18b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverInformation::correctionNorm</definition>
        <argsstring></argsstring>
        <name>correctionNorm</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::correctionNorm</qualifiedname>
        <initializer>{std::numeric_limits&lt;double&gt;::infinity()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="11" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d4b/a01309_1a81570cd3d9f6589a4d1ba81211f41b99" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::NonLinearSolverInformation::iterations</definition>
        <argsstring></argsstring>
        <name>iterations</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::iterations</qualifiedname>
        <initializer>{-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="12" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d4b/a01309_1a7aaa0619f5238daab90db07d9e29d0d8" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::NonLinearSolverInformation::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="8" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="8" bodyend="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="7" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="7" bodyend="13"/>
    <listofallmembers>
      <member refid="db/d4b/a01309_1a66f51414779f3e563557157fb688f18b" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>correctionNorm</name></member>
      <member refid="db/d4b/a01309_1a81570cd3d9f6589a4d1ba81211f41b99" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>iterations</name></member>
      <member refid="db/d4b/a01309_1a7aaa0619f5238daab90db07d9e29d0d8" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>operator bool</name></member>
      <member refid="db/d4b/a01309_1ab09859737734f97734f20624f9f3c934" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>residualNorm</name></member>
      <member refid="db/d4b/a01309_1acb65d72d7b2291a9b0d958ce0e4e0887" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>success</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
