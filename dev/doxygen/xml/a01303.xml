<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01303" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::Volume</compoundname>
    <includes refid="a00212" local="no">ikarus/finiteelements/mechanics/loads/volume.hh</includes>
    <templateparamlist>
      <param>
        <type>typename DFE</type>
      </param>
      <param>
        <type>typename Traits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01303_1a3095dc94e0800007d462004657c1371a" prot="public" static="no">
        <type>typename Traits::FERequirementType</type>
        <definition>using Ikarus::Volume&lt; DFE, Traits &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::Volume::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="23" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01303_1a378f39e30047caf903ac564848edc697" prot="public" static="no">
        <type>typename Traits::LocalView</type>
        <definition>using Ikarus::Volume&lt; DFE, Traits &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::Volume::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="24" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01303_1a073fb2d3afae0bd3e0afe1c2534f9afd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Volume&lt; DFE, Traits &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Volume::worldDim</qualifiedname>
        <initializer>= Traits::worlddim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="25" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="25" bodyend="-1"/>
        <referencedby refid="a01303_1a9b91a057a51ab4487656d8bd94fdd234" compoundref="a00212" startline="91" endline="109">Ikarus::Volume&lt; DFE, Traits &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01303_1a9c9befc356dd8f5fa8b55d12d8a1487f" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="a01303_1a073fb2d3afae0bd3e0afe1c2534f9afd" kindref="member">worldDim</ref> &gt;(const <ref refid="a01487" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01303_1a073fb2d3afae0bd3e0afe1c2534f9afd" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::Volume&lt; DFE, Traits &gt;::volumeLoad_</definition>
        <argsstring></argsstring>
        <name>volumeLoad_</name>
        <qualifiedname>Ikarus::Volume::volumeLoad_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="116" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01303_1af67372d55f4036736affad41565639bd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VL</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::Volume&lt; DFE, Traits &gt;::Volume</definition>
        <argsstring>(VL volumeLoad={})</argsstring>
        <name>Volume</name>
        <qualifiedname>Ikarus::Volume::Volume</qualifiedname>
        <param>
          <type>VL</type>
          <declname>volumeLoad</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the Loads class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VL</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the volume load function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a01303" kindref="compound">Volume</ref> load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="35" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="a01303_1a57dda3eb802306012e41237636de1ec4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::Volume&lt; DFE, Traits &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;req) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::Volume::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01303_1a3095dc94e0800007d462004657c1371a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the scalar value based on the given <ref refid="a01247" kindref="compound">FERequirements</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="a01247" kindref="compound">FERequirements</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="48" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a01303_1a60ccd349727ba418dbfb1a3012a1d856" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; DFE, Traits &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::Volume::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01303_1a3095dc94e0800007d462004657c1371a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="57" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="a01303_1a50c6859b6c9a40fbb8ac9cc77d8087db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; DFE, Traits &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::Volume::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01303_1a3095dc94e0800007d462004657c1371a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object specifying the requirements for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to store the calculated result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="67" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="67" bodyend="69"/>
        <referencedby refid="a01295_1ab108d5374fab0ec824376ebf0ecb09f5" compoundref="a02455" startline="185" endline="205">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01335_1abe95aba4255becb35502caaa4442063c" compoundref="a02461" startline="224" endline="246">Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01303_1a7ec1326b708d8c08fee05ca7b601f997" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Volume&lt; DFE, Traits &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Volume::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01303_1a3095dc94e0800007d462004657c1371a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="73" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="73" bodyend="88"/>
        <referencedby refid="a01295_1a2bd57b0020bc5144908df7d582533cc7" compoundref="a02455" startline="239" endline="262">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01335_1ad7e34f32d4881e6bd7286bbdc4d6d2af" compoundref="a02461" startline="281" endline="303">Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01287_1a3eff5a18382fed4d45da446ad8d9fdb0" compoundref="a02449" startline="351" endline="374">Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01303_1a9b91a057a51ab4487656d8bd94fdd234" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Volume&lt; DFE, Traits &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Volume::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01303_1a3095dc94e0800007d462004657c1371a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="91" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="91" bodyend="109"/>
        <referencedby refid="a01295_1af75f290aad4b52072053aa027d4b2f0d" compoundref="a02455" startline="265" endline="288">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01335_1aa36fb72f92ed5b674f56b434aedc8845" compoundref="a02461" startline="306" endline="328">Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01287_1a6dbd8faca927367f2665a67132cf66d6" compoundref="a02449" startline="315" endline="348">Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01303_1aaed2462e36f9d119ff5c60867ebcaf62" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Volume&lt; DFE, Traits &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Volume::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01303_1a3095dc94e0800007d462004657c1371a" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="112" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="112" bodyend="113"/>
        <referencedby refid="a01287_1aa6b452c8beb9c8b41899486bdefd793b" compoundref="a02449" startline="269" endline="312">Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrixImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01303_1ae50ea5659d502110b1f9ad83e94bb895" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const DFE &amp;</type>
        <definition>constexpr const DFE &amp; Ikarus::Volume&lt; DFE, Traits &gt;::dbElement</definition>
        <argsstring>() const</argsstring>
        <name>dbElement</name>
        <qualifiedname>Ikarus::Volume::dbElement</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying displacement-based finite element (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying displacement-based finite element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="123" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="123" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01303" kindref="compound">Volume</ref> class represents distributed volume load that can be applied. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DFE</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the displacement-based finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of traits for handling finite elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::KirchhoffLoveShell&lt; BH, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01287"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01295"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::NonLinearElastic&lt; BH, MAT, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01335"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::Volume&lt; DFE, Traits &gt;</label>
        <link refid="a01303"/>
      </node>
      <node id="2">
        <label>Ikarus::Volume&lt; KirchhoffLoveShell&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01303"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; KirchhoffLoveShell&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01303"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Volume&lt; NonLinearElastic&lt; BH, MAT, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01303"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NonLinearElastic&lt; BH, MAT, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="20" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="21" bodyend="124"/>
    <listofallmembers>
      <member refid="a01303_1a50c6859b6c9a40fbb8ac9cc77d8087db" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>calculateMatrix</name></member>
      <member refid="a01303_1aaed2462e36f9d119ff5c60867ebcaf62" prot="protected" virt="non-virtual"><scope>Ikarus::Volume</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01303_1a57dda3eb802306012e41237636de1ec4" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>calculateScalar</name></member>
      <member refid="a01303_1a7ec1326b708d8c08fee05ca7b601f997" prot="protected" virt="non-virtual"><scope>Ikarus::Volume</scope><name>calculateScalarImpl</name></member>
      <member refid="a01303_1a60ccd349727ba418dbfb1a3012a1d856" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>calculateVector</name></member>
      <member refid="a01303_1a9b91a057a51ab4487656d8bd94fdd234" prot="protected" virt="non-virtual"><scope>Ikarus::Volume</scope><name>calculateVectorImpl</name></member>
      <member refid="a01303_1ae50ea5659d502110b1f9ad83e94bb895" prot="private" virt="non-virtual"><scope>Ikarus::Volume</scope><name>dbElement</name></member>
      <member refid="a01303_1a3095dc94e0800007d462004657c1371a" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>FERequirementType</name></member>
      <member refid="a01303_1a378f39e30047caf903ac564848edc697" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>LocalView</name></member>
      <member refid="a01303_1af67372d55f4036736affad41565639bd" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>Volume</name></member>
      <member refid="a01303_1a9c9befc356dd8f5fa8b55d12d8a1487f" prot="private" virt="non-virtual"><scope>Ikarus::Volume</scope><name>volumeLoad_</name></member>
      <member refid="a01303_1a073fb2d3afae0bd3e0afe1c2534f9afd" prot="public" virt="non-virtual"><scope>Ikarus::Volume</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
