<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00254" kind="file" language="C++">
    <compoundname>ferequirements.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes local="no">dune/common/exceptions.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="a00056" local="no">ikarus/utils/makeenum.hh</includes>
    <includedby refid="a00281" local="no">_ikarus.cc</includedby>
    <includedby refid="a00248" local="no">autodifffe.hh</includedby>
    <includedby refid="a02467" local="no">basis.hh</includedby>
    <includedby refid="a00269" local="no">boundarypatch.hh</includedby>
    <includedby refid="a02473" local="no">dirichletvalues.hh</includedby>
    <includedby refid="a00242" local="no">enhancedassumedstrains.hh</includedby>
    <includedby refid="a00260" local="no">febase.hh</includedby>
    <includedby refid="a00257" local="no">fetraits.hh</includedby>
    <includedby refid="a00272" local="no">flatassembler.hh</includedby>
    <includedby refid="a02452" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="a02449" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="a02455" local="no">linearelastic.hh</includedby>
    <includedby refid="a02458" local="no">linearelastic.hh</includedby>
    <includedby refid="a02461" local="no">nonlinearelastic.hh</includedby>
    <includedby refid="a02464" local="no">nonlinearelastic.hh</includedby>
    <includedby refid="a00275" local="no">registerelement.hh</includedby>
    <includedby refid="a00119" local="no">resultfunction.hh</includedby>
    <includedby refid="a00209" local="no">traction.hh</includedby>
    <includedby refid="a00212" local="no">volume.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>ferequirements.hh</label>
        <link refid="a00254"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00056"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>autodifffe.hh</label>
        <link refid="a00248"/>
      </node>
      <node id="8">
        <label>febase.hh</label>
        <link refid="a00260"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ferequirements.hh</label>
        <link refid="a00254"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>fetraits.hh</label>
        <link refid="a00257"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>enhancedassumedstrains.hh</label>
        <link refid="a00242"/>
      </node>
      <node id="9">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a02449"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linearelastic.hh</label>
        <link refid="a02455"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>loads.hh</label>
        <link refid="a00206"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>traction.hh</label>
        <link refid="a00209"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>volume.hh</label>
        <link refid="a00212"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>nonlinearelastic.hh</label>
        <link refid="a02461"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>resultfunction.hh</label>
        <link refid="a00119"/>
      </node>
      <node id="17">
        <label>flatassembler.hh</label>
        <link refid="a00272"/>
      </node>
      <node id="4">
        <label>basis.hh</label>
        <link refid="a02467"/>
      </node>
      <node id="6">
        <label>dirichletvalues.hh</label>
        <link refid="a02473"/>
      </node>
      <node id="10">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a02452"/>
      </node>
      <node id="12">
        <label>linearelastic.hh</label>
        <link refid="a02458"/>
      </node>
      <node id="15">
        <label>nonlinearelastic.hh</label>
        <link refid="a02464"/>
      </node>
      <node id="13">
        <label>registerelement.hh</label>
        <link refid="a00275"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boundarypatch.hh</label>
        <link refid="a00269"/>
      </node>
      <node id="2">
        <label>_ikarus.cc</label>
        <link refid="a00281"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01231" prot="public">Ikarus::AffordanceCollectionImpl</innerclass>
    <innerclass refid="a01247" prot="public">Ikarus::FERequirements</innerclass>
    <innerclass refid="a01251" prot="public">Ikarus::FErequirements</innerclass>
    <innernamespace refid="a00325">Ikarus</innernamespace>
    <innernamespace refid="a00330">Ikarus::AffordanceCollections</innernamespace>
    <briefdescription>
<para>Definition of the LinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/exceptions.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00056" kindref="compound">ikarus/utils/makeenum.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00325" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="a00320_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00311_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mechanicalPotentialEnergy,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticPotentialEnergy</highlight></codeline>
<codeline lineno="34" refid="a00311_1ga8a33210894e12be4feb3d96fdfde215c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="a00320_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00311_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00325_1a8d0ca59930b7ae15351497bd14319d1d" kindref="member">forces</ref>,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticForces</highlight></codeline>
<codeline lineno="45" refid="a00325_1aea6d8dd57847aa02cfe354d03fb33873" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="a00320_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00325_1a5185740b975fb7539a6e07553a061b26" kindref="member">stiffness</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialstiffness,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometricstiffness,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00325_1a8191d0e317e1bea2a35d6c8a8f20750f" kindref="member">stiffnessdiffBucklingVector</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticHessian,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00325_1a7e05e861b25ca636c1ccba4b8d2a3831" kindref="member">mass</ref></highlight></codeline>
<codeline lineno="60" refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="a00320_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00312_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noParameter,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadfactor,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time</highlight></codeline>
<codeline lineno="71" refid="a00312_1ga0c1577fd05efee8475b0f7fef795bbbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="a00320_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00312_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noSolution,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnetizationAndVectorPotential</highlight></codeline>
<codeline lineno="84" refid="a00312_1gaea763c94a1cecbeefc4f8661debcc5a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="a00320_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00312_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noType,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnetization,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradientNormOfMagnetization,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectorPotential,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divergenceOfVectorPotential,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BField,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HField,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cauchyStress,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PK2Stress,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearStress,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director</highlight></codeline>
<codeline lineno="103" refid="a00312_1ga531be167e924b749eb8b4ccc7f1c18c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="a01231" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01231" kindref="compound">AffordanceCollectionImpl</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112" refid="a01231_1a516061663dea71c22750abaf2175f6d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00311_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref><sp/><ref refid="a01231_1a516061663dea71c22750abaf2175f6d5" kindref="member">scalarAffordances</ref>{<ref refid="a00311_1gga8a33210894e12be4feb3d96fdfde215ca9a280b29988e2eac8c0767e0fcefb49c" kindref="member">ScalarAffordances::noAffordance</ref>};</highlight></codeline>
<codeline lineno="113" refid="a01231_1a02e0fc97626b53e154bee9121582a69b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00311_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref><sp/><ref refid="a01231_1a02e0fc97626b53e154bee9121582a69b" kindref="member">vectorAffordances</ref>{<ref refid="a00311_1gga122268ff4d2c0beee58799d85ba5e52aa9a280b29988e2eac8c0767e0fcefb49c" kindref="member">VectorAffordances::noAffordance</ref>};</highlight></codeline>
<codeline lineno="114" refid="a01231_1afe3707101cc945fda75d93821846399b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="a01231_1afe3707101cc945fda75d93821846399b" kindref="member">matrixAffordances</ref>{<ref refid="a00311_1gga52cb89165daabb500f6e2eb68ddd76eea9a280b29988e2eac8c0767e0fcefb49c" kindref="member">MatrixAffordances::noAffordance</ref>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="121" refid="a01612" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="a01612" kindref="compound">FEAffordance</ref><sp/>=<sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/><ref refid="a00311_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref>&gt;<sp/>or</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/><ref refid="a00311_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref>&gt;<sp/>or</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/><ref refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref>&gt;<sp/>or</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/>AffordanceCollectionImpl&gt;;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="a00325_1a8d0ca59930b7ae15351497bd14319d1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00311_1ga122268ff4d2c0beee58799d85ba5e52a" kindref="member">VectorAffordances</ref><sp/><ref refid="a00325_1a8d0ca59930b7ae15351497bd14319d1d" kindref="member">forces</ref><sp/>=<sp/><ref refid="a00311_1gga122268ff4d2c0beee58799d85ba5e52aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordances::forces</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="a00325_1a5185740b975fb7539a6e07553a061b26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="a00325_1a5185740b975fb7539a6e07553a061b26" kindref="member">stiffness</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00311_1gga52cb89165daabb500f6e2eb68ddd76eea086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordances::stiffness</ref>;</highlight></codeline>
<codeline lineno="129" refid="a00325_1a8191d0e317e1bea2a35d6c8a8f20750f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="a00325_1a8191d0e317e1bea2a35d6c8a8f20750f" kindref="member">stiffnessdiffBucklingVector</ref><sp/>=<sp/><ref refid="a00311_1gga52cb89165daabb500f6e2eb68ddd76eeadaa7ff7d704732b763943e3355764532" kindref="member">MatrixAffordances::stiffnessdiffBucklingVector</ref>;</highlight></codeline>
<codeline lineno="130" refid="a00325_1a7e05e861b25ca636c1ccba4b8d2a3831" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00311_1ga52cb89165daabb500f6e2eb68ddd76ee" kindref="member">MatrixAffordances</ref><sp/><ref refid="a00325_1a7e05e861b25ca636c1ccba4b8d2a3831" kindref="member">mass</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00311_1gga52cb89165daabb500f6e2eb68ddd76eead90ccffa01275a7a7795fb6d1274e75f" kindref="member">MatrixAffordances::mass</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="a00325_1a64dfa264a039267932c6c99eb66ae98e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00311_1ga8a33210894e12be4feb3d96fdfde215c" kindref="member">ScalarAffordances</ref><sp/><ref refid="a00325_1a64dfa264a039267932c6c99eb66ae98e" kindref="member">potentialEnergy</ref><sp/>=<sp/><ref refid="a00311_1gga8a33210894e12be4feb3d96fdfde215ca814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordances::mechanicalPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="a00330" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">AffordanceCollections<sp/>{</highlight></codeline>
<codeline lineno="135" refid="a00330_1a74c1342e9b6a556e6b1276b7fde137e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a01231" kindref="compound">AffordanceCollectionImpl</ref><sp/><ref refid="a00330_1a74c1342e9b6a556e6b1276b7fde137e1" kindref="member">elastoStatics</ref><sp/>=<sp/>{<ref refid="a00311_1gga8a33210894e12be4feb3d96fdfde215ca814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordances::mechanicalPotentialEnergy</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00311_1gga122268ff4d2c0beee58799d85ba5e52aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordances::forces</ref>,<sp/><ref refid="a00311_1gga52cb89165daabb500f6e2eb68ddd76eea086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordances::stiffness</ref>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceRawVectorType</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!std::is_same&lt;T,<sp/>T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>should<sp/>end<sp/>up<sp/>in<sp/>the<sp/>provided<sp/>specializations&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceRawVectorType&lt;std::reference_wrapper&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceRawVectorType&lt;<ref refid="a00333" kindref="compound">Eigen</ref>::Ref&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>Eigen::Ref&lt;T&gt;;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SV<sp/>=<sp/>std::reference_wrapper&lt;Eigen::VectorXd&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PM<sp/>=<sp/>std::reference_wrapper&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="172" refid="a01247" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01247" kindref="compound">FERequirements</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175" refid="a01247_1abe68bcd08ef5188a7afb3da261843230" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01247_1abe68bcd08ef5188a7afb3da261843230" kindref="member">SolutionVectorType</ref><sp/><sp/><sp/><sp/>=<sp/>SV;</highlight></codeline>
<codeline lineno="176" refid="a01247_1adc4ad440a8d045f2d048d20130cf323e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01247_1adc4ad440a8d045f2d048d20130cf323e" kindref="member">SolutionVectorTypeRaw</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Impl::DeduceRawVectorType&lt;std::remove_cvref_t&lt;SV&gt;&gt;::Type;</highlight></codeline>
<codeline lineno="177" refid="a01247_1ab71870a060195b870bf050577e1493a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01247_1ab71870a060195b870bf050577e1493a0" kindref="member">ParameterType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>PM;</highlight></codeline>
<codeline lineno="178" refid="a01247_1af80d75a0b1418035a1b5e9658a3a56d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01247_1af80d75a0b1418035a1b5e9658a3a56d9" kindref="member">ParameterTypeRaw</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PM::type;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FEAffordance<sp/>Affordance&gt;</highlight></codeline>
<codeline lineno="190" refid="a01247_1ac691d2377e4df99285b4e2cea067b062" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01247" kindref="compound">FERequirements</ref>&amp;<sp/><ref refid="a01247_1ac691d2377e4df99285b4e2cea067b062" kindref="member">addAffordance</ref>(Affordance&amp;&amp;<sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>ScalarAffordances&gt;)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>affordances_.<ref refid="a01231_1a516061663dea71c22750abaf2175f6d5" kindref="member">scalarAffordances</ref><sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>VectorAffordances&gt;)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>affordances_.<ref refid="a01231_1a02e0fc97626b53e154bee9121582a69b" kindref="member">vectorAffordances</ref><sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>MatrixAffordances&gt;)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>affordances_.<ref refid="a01231_1afe3707101cc945fda75d93821846399b" kindref="member">matrixAffordances</ref><sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>AffordanceCollectionImpl&gt;)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>affordances_<sp/>=<sp/>affordance;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="a01247_1adc86ba90fa2e45c688cf03020f487271" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01247" kindref="compound">FERequirements</ref>&amp;<sp/><ref refid="a01247_1adc86ba90fa2e45c688cf03020f487271" kindref="member">insertParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00312_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>&amp;<sp/>key,<sp/><ref refid="a01247_1af80d75a0b1418035a1b5e9658a3a56d9" kindref="member">ParameterTypeRaw</ref>&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>parameter_.insert_or_assign(key,<sp/>val);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="a01247_1a4fafac757343aa4709c1c986290e3e18" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01247" kindref="compound">FERequirements</ref>&amp;<sp/><ref refid="a01247_1a4fafac757343aa4709c1c986290e3e18" kindref="member">insertGlobalSolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00312_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>&amp;<sp/>key,<sp/><ref refid="a01247_1adc4ad440a8d045f2d048d20130cf323e" kindref="member">SolutionVectorTypeRaw</ref>&amp;<sp/>sol)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>sols_.insert_or_assign(key,<sp/>sol);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="a01247_1a6a1c765d729145258fab79b29f20450c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01247_1adc4ad440a8d045f2d048d20130cf323e" kindref="member">SolutionVectorTypeRaw</ref>&amp;<sp/><ref refid="a01247_1a6a1c765d729145258fab79b29f20450c" kindref="member">getGlobalSolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00312_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;SolutionVectorType,<sp/>std::reference_wrapper&lt;Eigen::VectorXd&gt;&gt;)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sols_.at(key).get();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sols_.at(key);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::out_of_range&amp;<sp/>oor)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::RangeError,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>Range<sp/>error:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::string(oor.what())<sp/>+</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>getGlobalSolution<sp/>with<sp/>key&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="a00325_1a0853622412d4cedc078b81ba454eb250" kindref="member">toString</ref>(key));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="a01247_1a451f4d103d32aa85b43b059642832cb2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01247_1af80d75a0b1418035a1b5e9658a3a56d9" kindref="member">ParameterTypeRaw</ref>&amp;<sp/><ref refid="a01247_1a451f4d103d32aa85b43b059642832cb2" kindref="member">getParameter</ref>(<ref refid="a00312_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>&amp;&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameter_.at(key).get();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::out_of_range&amp;<sp/>oor)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::RangeError,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>Range<sp/>error:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::string(oor.what())<sp/>+</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>getParameter<sp/>with<sp/>key&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="a00325_1a0853622412d4cedc078b81ba454eb250" kindref="member">toString</ref>(key));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FEAffordance<sp/>Affordance&gt;</highlight></codeline>
<codeline lineno="283" refid="a01247_1a01df6acb6d68e28f974dbda21c544cfa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01247_1a01df6acb6d68e28f974dbda21c544cfa" kindref="member">hasAffordance</ref>(Affordance&amp;&amp;<sp/>affordance)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>ScalarAffordances&gt;)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances_.<ref refid="a01231_1a516061663dea71c22750abaf2175f6d5" kindref="member">scalarAffordances</ref><sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>VectorAffordances&gt;)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances_.<ref refid="a01231_1a02e0fc97626b53e154bee9121582a69b" kindref="member">vectorAffordances</ref><sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;Affordance,<sp/>MatrixAffordances&gt;)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances_.<ref refid="a01231_1afe3707101cc945fda75d93821846399b" kindref="member">matrixAffordances</ref><sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;Affordance,<sp/>AffordanceCollectionImpl&gt;)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances_<sp/>==<sp/>affordance;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>std::map&lt;FESolutions,<sp/>SolutionVectorType&gt;<sp/>sols_;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>std::map&lt;FEParameter,<sp/>ParameterType&gt;<sp/>parameter_;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="a01231" kindref="compound">AffordanceCollectionImpl</ref><sp/>affordances_;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SV<sp/>=<sp/>std::reference_wrapper&lt;Eigen::VectorXd&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PM<sp/>=<sp/>std::reference_wrapper&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="314" refid="a01251" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">[[deprecated(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<ref refid="a01251" kindref="compound">FErequirements</ref><sp/>is<sp/>deprecaded<sp/>and<sp/>will<sp/>be<sp/>removed<sp/>after<sp/>v0.5.<sp/>Use<sp/><ref refid="a01247" kindref="compound">FERequirements</ref><sp/>instead.&quot;)]]<sp/><ref refid="a01251" kindref="compound">FErequirements</ref></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01247" kindref="compound">FERequirements</ref>&lt;SV,<sp/>PM&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01247" kindref="compound">Base</ref><sp/>=<sp/><ref refid="a01247" kindref="compound">FERequirements&lt;SV, PM&gt;</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321" refid="a01251_1ac76350ff4a2e0a82d1d71ddcee4f0a77" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01251_1ac76350ff4a2e0a82d1d71ddcee4f0a77" kindref="member">FErequirements</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322" refid="a01251_1af2600ef2e60beb75c1613dbe0b8b0742" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01251_1af2600ef2e60beb75c1613dbe0b8b0742" kindref="member">FErequirements</ref>(<ref refid="a01247" kindref="compound">Base</ref>&amp;&amp;<sp/>base)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="a01247" kindref="compound">Base</ref>(std::forward&lt;<ref refid="a01247" kindref="compound">Base</ref>&gt;(base))<sp/>{}</highlight></codeline>
<codeline lineno="324" refid="a01251_1af9063da0bfecd083b3d021ff9d825c54" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01251_1af9063da0bfecd083b3d021ff9d825c54" kindref="member">FErequirements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01247" kindref="compound">Base</ref>&amp;<sp/>base)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="a01247" kindref="compound">Base</ref>(base)<sp/>{}</highlight></codeline>
<codeline lineno="326" refid="a01251_1a9be0e4fe96a1a0ba082711cc7cac5abd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01251" kindref="compound">FErequirements</ref>&amp;<sp/><ref refid="a01251_1a9be0e4fe96a1a0ba082711cc7cac5abd" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01247" kindref="compound">Base</ref>&amp;<sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>Base::operator=(base);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330" refid="a01251_1ad3f7bbaa6737dfdba2dfe5b75a955818" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01251" kindref="compound">FErequirements</ref>&amp;<sp/><ref refid="a01251_1ad3f7bbaa6737dfdba2dfe5b75a955818" kindref="member">operator=</ref>(<ref refid="a01247" kindref="compound">Base</ref>&amp;&amp;<sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>Base::operator=(std::forward&lt;Base&gt;(base));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="337" refid="a01613" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="a01613" kindref="compound">ResultTypeConcept</ref><sp/>=<sp/>std::is_same_v&lt;Type,<sp/>ResultType&gt;;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh"/>
  </compounddef>
</doxygen>
