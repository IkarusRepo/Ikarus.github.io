<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00128" kind="file" language="C++">
    <compoundname>fefactory.hh</compoundname>
    <includes refid="a00122" local="no">ikarus/finiteelements/febase.hh</includes>
    <includedby refid="a00272" local="no">fe.hh</includedby>
    <incdepgraph>
      <node id="2">
        <label>ikarus/finiteelements/febase.hh</label>
        <link refid="a00122"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>fefactory.hh</label>
        <link refid="a00128"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00125"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00140"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="a00143"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ikarus/finiteelements/mixin.hh</label>
        <link refid="a00131"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00029"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00038"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00050"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00053"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00008"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Eigen/Core</label>
      </node>
      <node id="22">
        <label>Eigen/Sparse</label>
      </node>
      <node id="18">
        <label>concepts</label>
      </node>
      <node id="8">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="26">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="16">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="31">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="20">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="21">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="4">
        <label>iosfwd</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="14">
        <label>ranges</label>
      </node>
      <node id="6">
        <label>set</label>
      </node>
      <node id="25">
        <label>tuple</label>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="19">
        <label>utility</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>fefactory.hh</label>
        <link refid="a00128"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fe.hh</label>
        <link refid="a00272"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01253" prot="public">Ikarus::FEFactory</innerclass>
    <innernamespace refid="a00337">Ikarus</innernamespace>
    <briefdescription>
<para>Contains the definition of the FEFactory class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00122" kindref="compound">ikarus/finiteelements/febase.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00337" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BH,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SK,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FER<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useFlat<sp/>=<sp/>true,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="23" refid="a01253" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01253" kindref="compound">FEFactory</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25" refid="a01253_1a0c3bf54c651915223d6bd033fb1af80e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01253_1a0c3bf54c651915223d6bd033fb1af80e" kindref="member">Skills</ref><sp/>=<sp/>SK;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BH*<sp/>basisHandler_;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>SK<sp/>skills_;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SK2<sp/>=<sp/>SK&gt;</highlight></codeline>
<codeline lineno="38" refid="a01253_1abf5673965ef9a4eb42ee618e1e312453" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01253_1abf5673965ef9a4eb42ee618e1e312453" kindref="member">FEFactory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BH&amp;<sp/>basisHandler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SK2&amp;<sp/>sk)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>basisHandler_{&amp;basisHandler},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skills_{sk}<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="a01253_1a524dd23511e0b34898482211b48ca370" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01253_1a524dd23511e0b34898482211b48ca370" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::apply(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;]&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>template<sp/>would<sp/>not<sp/>be<sp/>needed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1814r0.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>implemented<sp/>in<sp/>clang.<sp/>It<sp/>is<sp/>already<sp/>implemented<sp/>in<sp/>gcc<sp/>12.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01245" kindref="compound">PreFE&lt;BH, FER, useFlat, useEigenRef&gt;::template</ref><sp/><ref refid="a01241" kindref="compound">FE&lt;std::decay_t&lt;Args&gt;::template</ref><sp/>Skill...&gt;<sp/>fe(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*basisHandler_,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fe;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skills_.args);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FER<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useFlat<sp/>=<sp/>true,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BH,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SK&gt;</highlight></codeline>
<codeline lineno="67" refid="a00337_1add8c4206f22324ecc5c13ec49b62083e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00337_1add8c4206f22324ecc5c13ec49b62083e" kindref="member">makeFE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BH&amp;<sp/>basisHandler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SK&amp;<sp/>sk)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="a01253" kindref="compound">FEFactory&lt;BH, SK, FER, useFlat, useEigenRef&gt;</ref><sp/>factory(basisHandler,<sp/>sk);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FER<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BH,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SK&gt;</highlight></codeline>
<codeline lineno="84" refid="a00337_1acd59b021110c6321df400b8c8bc9c7c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00337_1acd59b021110c6321df400b8c8bc9c7c7" kindref="member">makeFEWithUnTouchedBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BH&amp;<sp/>basisHandler,<sp/>SK&amp;&amp;<sp/>sk)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="a01253" kindref="compound">FEFactory&lt;BH, SK, FER, false, useEigenRef&gt;</ref><sp/>factory(basisHandler,<sp/>std::forward&lt;SK&gt;(sk));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh"/>
  </compounddef>
</doxygen>
