<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d7/d68/a01413" kind="class" language="C++" prot="public">
    <compoundname>IObservable</compoundname>
    <includes refid="d7/d06/a00131" local="no">ikarus/utils/observer/observer.hh</includes>
    <templateparamlist>
      <param>
        <type>typename MessageType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d7/d68/a01413_1a08214c1d09435de7ab40cdc0782394b3" prot="private" static="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; MessageType &gt; &gt; &gt;</type>
        <definition>using IObservable&lt; MessageType &gt;::ObserverVector =  std::vector&lt;std::shared_ptr&lt;IObserver&lt;MessageType&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>ObserverVector</name>
        <qualifiedname>IObservable::ObserverVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="93" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d68/a01413_1afbadc7630755dcefc85c948fe3254106" prot="private" static="no">
        <type>std::map&lt; MessageType, ObserverVector &gt;</type>
        <definition>using IObservable&lt; MessageType &gt;::ObserverMap =  std::map&lt;MessageType, ObserverVector&gt;</definition>
        <argsstring></argsstring>
        <name>ObserverMap</name>
        <qualifiedname>IObservable::ObserverMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="94" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d68/a01413_1a54ad7463f11fbc10b2a2f6e80d742261" prot="private" static="no" mutable="no">
        <type>ObserverMap</type>
        <definition>ObserverMap IObservable&lt; MessageType &gt;::observers_</definition>
        <argsstring></argsstring>
        <name>observers_</name>
        <qualifiedname>IObservable::observers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="95" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d68/a01413_1a6b079b316e4e00ab4381f71517b47a98" prot="private" static="no" mutable="no">
        <type>std::vector&lt; MessageType &gt;</type>
        <definition>std::vector&lt;MessageType&gt; IObservable&lt; MessageType &gt;::messages_</definition>
        <argsstring></argsstring>
        <name>messages_</name>
        <qualifiedname>IObservable::messages_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="96" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d68/a01413_1a9aafe435540e6e189f02cdf2156063fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IObservable&lt; MessageType &gt;::IObservable</definition>
        <argsstring>()</argsstring>
        <name>IObservable</name>
        <qualifiedname>IObservable::IObservable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="72" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1ae5717e23ba80e0081db869c6da4dee8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual IObservable&lt; MessageType &gt;::~IObservable</definition>
        <argsstring>()=default</argsstring>
        <name>~IObservable</name>
        <qualifiedname>IObservable::~IObservable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="76" column="11"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::subscribe</definition>
        <argsstring>(MessageType message, std::shared_ptr&lt; IObserver&lt; MessageType &gt; &gt; observer)</argsstring>
        <name>subscribe</name>
        <qualifiedname>IObservable::subscribe</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; MessageType &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="77" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::subscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; MessageType &gt; &gt; observer)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>IObservable::subscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; MessageType &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="78" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::subscribeAll</definition>
        <argsstring>(std::initializer_list&lt; std::shared_ptr&lt; IObserver&lt; MessageType &gt; &gt; &gt; observers)</argsstring>
        <name>subscribeAll</name>
        <qualifiedname>IObservable::subscribeAll</qualifiedname>
        <param>
          <type>std::initializer_list&lt; std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; MessageType &gt; &gt; &gt;</type>
          <declname>observers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="79" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::unSubscribe</definition>
        <argsstring>(MessageType message, std::shared_ptr&lt; IObserver&lt; MessageType &gt; &gt; observer)</argsstring>
        <name>unSubscribe</name>
        <qualifiedname>IObservable::unSubscribe</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; MessageType &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="80" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::unSubscribeAll</definition>
        <argsstring>(std::shared_ptr&lt; IObserver&lt; MessageType &gt; &gt; observer)</argsstring>
        <name>unSubscribeAll</name>
        <qualifiedname>IObservable::unSubscribeAll</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref>&lt; MessageType &gt; &gt;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="82" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::floating_point</type>
            <declname>ScalarType</declname>
            <defname>ScalarType</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message, ScalarType val)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="84" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="85" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="86" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="87" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="88" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::floating_point</type>
            <declname>ScalarType</declname>
            <defname>ScalarType</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void IObservable&lt; MessageType &gt;::notify</definition>
        <argsstring>(MessageType message, Eigen::VectorX&lt; ScalarType &gt; vec)</argsstring>
        <name>notify</name>
        <qualifiedname>IObservable::notify</qualifiedname>
        <param>
          <type>MessageType</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Eigen::VectorX&lt; ScalarType &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="90" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="176" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IObservable&lt; ControlMessages &gt;</label>
        <link refid="d7/d68/a01413"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>IObservable&lt; Ikarus::ControlMessages &gt;</label>
        <link refid="d7/d68/a01413"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Ikarus::ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>IObservable&lt; MessageType &gt;</label>
        <link refid="d7/d68/a01413"/>
      </node>
      <node id="4">
        <label>IObservable&lt; NonLinearSolverMessages &gt;</label>
        <link refid="d7/d68/a01413"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::LoadControl&lt; NonLinearSolver &gt;</label>
        <link refid="d3/dc4/a01089"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::NewtonRaphson&lt; NonLinearOperatorImpl, LinearSolver, UpdateFunctionType_ &gt;</label>
        <link refid="d9/dda/a01289"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::NewtonRaphsonWithSubsidiaryFunction&lt; NonLinearOperatorImpl, LinearSolver, UpdateType &gt;</label>
        <link refid="d3/d07/a01301"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Ikarus::PathFollowing&lt; NonLinearSolver, PathFollowingType, AdaptiveStepSizing &gt;</label>
        <link refid="d8/dbf/a01109"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::TrustRegion&lt; NonLinearOperatorImpl, preConditioner, UpdateType &gt;</label>
        <link refid="dd/d5d/a01325"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="70" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="70" bodyend="97"/>
    <listofallmembers>
      <member refid="d7/d68/a01413_1a9aafe435540e6e189f02cdf2156063fc" prot="public" virt="non-virtual"><scope>IObservable</scope><name>IObservable</name></member>
      <member refid="d7/d68/a01413_1a6b079b316e4e00ab4381f71517b47a98" prot="private" virt="non-virtual"><scope>IObservable</scope><name>messages_</name></member>
      <member refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" prot="public" virt="non-virtual"><scope>IObservable</scope><name>notify</name></member>
      <member refid="d7/d68/a01413_1afbadc7630755dcefc85c948fe3254106" prot="private" virt="non-virtual"><scope>IObservable</scope><name>ObserverMap</name></member>
      <member refid="d7/d68/a01413_1a54ad7463f11fbc10b2a2f6e80d742261" prot="private" virt="non-virtual"><scope>IObservable</scope><name>observers_</name></member>
      <member refid="d7/d68/a01413_1a08214c1d09435de7ab40cdc0782394b3" prot="private" virt="non-virtual"><scope>IObservable</scope><name>ObserverVector</name></member>
      <member refid="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" prot="public" virt="non-virtual"><scope>IObservable</scope><name>subscribe</name></member>
      <member refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" prot="public" virt="non-virtual"><scope>IObservable</scope><name>subscribeAll</name></member>
      <member refid="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" prot="public" virt="non-virtual"><scope>IObservable</scope><name>subscribeAll</name></member>
      <member refid="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" prot="public" virt="non-virtual"><scope>IObservable</scope><name>unSubscribe</name></member>
      <member refid="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" prot="public" virt="non-virtual"><scope>IObservable</scope><name>unSubscribeAll</name></member>
      <member refid="d7/d68/a01413_1ae5717e23ba80e0081db869c6da4dee8c" prot="public" virt="virtual"><scope>IObservable</scope><name>~IObservable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
