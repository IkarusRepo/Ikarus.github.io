<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d7/d06/a00131" kind="file" language="C++">
    <compoundname>observer.hh</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="d1/dc1/a00092" local="no">ikarus/utils/makeenum.hh</includes>
    <includedby refid="df/dc8/a00122" local="yes">controllogger.hh</includedby>
    <includedby refid="d1/d88/a00128" local="yes">controlvtkwriter.hh</includedby>
    <includedby refid="de/d76/a00134" local="no">genericobserver.hh</includedby>
    <includedby refid="d7/d25/a00182" local="no">loadcontrol.hh</includedby>
    <includedby refid="d5/dcb/a00170" local="no">newtonraphson.hh</includedby>
    <includedby refid="d5/de9/a00176" local="no">newtonraphsonwithscalarsubsidiaryfunction.hh</includedby>
    <includedby refid="dc/dfe/a00125" local="yes">nonlinearsolverlogger.hh</includedby>
    <includedby refid="d9/dd0/a00191" local="no">pathfollowingtechnique.hh</includedby>
    <includedby refid="d7/d3f/a00173" local="no">trustregion.hh</includedby>
    <incdepgraph>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d1/dc1/a00092"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>observer.hh</label>
        <link refid="d7/d06/a00131"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>loadcontrol.hh</label>
        <link refid="d7/d25/a00182"/>
      </node>
      <node id="14">
        <label>pathfollowingtechnique.hh</label>
        <link refid="d9/dd0/a00191"/>
      </node>
      <node id="9">
        <label>kirchhoffloveshell.hh</label>
        <link refid="da/d6b/a02438"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>materials.hh</label>
        <link refid="dc/dee/a00053"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vanishingstress.hh</label>
        <link refid="dc/d87/a00032"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d9/dd6/a02441"/>
      </node>
      <node id="11">
        <label>material.hh</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>newtonraphson.hh</label>
        <link refid="d5/dcb/a00170"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>newtonraphsonwithscalarsubsidiaryfunction.hh</label>
        <link refid="d5/de9/a00176"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>trustregion.hh</label>
        <link refid="d7/d3f/a00173"/>
      </node>
      <node id="2">
        <label>controllogger.hh</label>
        <link refid="df/dc8/a00122"/>
      </node>
      <node id="3">
        <label>controlvtkwriter.hh</label>
        <link refid="d1/d88/a00128"/>
      </node>
      <node id="4">
        <label>genericobserver.hh</label>
        <link refid="de/d76/a00134"/>
      </node>
      <node id="15">
        <label>nonlinearsolverlogger.hh</label>
        <link refid="dc/dfe/a00125"/>
      </node>
      <node id="1">
        <label>observer.hh</label>
        <link refid="d7/d06/a00131"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>_ikarus.cc</label>
        <link refid="de/d79/a00203"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/d6e/a01409" prot="public">IObserver</innerclass>
    <innerclass refid="d7/d68/a01413" prot="public">IObservable</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d1/dc1/a00092" kindref="compound">ikarus/utils/makeenum.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="13" refid="d9/d6e/a01409" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d6e/a01409" kindref="compound">IObserver</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="d9/d6e/a01409_1a06d29abd8a33c41df2a6be73f04e8e12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a06d29abd8a33c41df2a6be73f04e8e12" kindref="member">~IObserver</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="d9/d6e/a01409_1a6dd574999a4ed16c6b2552634a3ba843" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a6dd574999a4ed16c6b2552634a3ba843" kindref="member">update</ref>(MessageType<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="d9/d6e/a01409_1ab310853f3a37debf0f75698058f1ad05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1ab310853f3a37debf0f75698058f1ad05" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="d9/d6e/a01409_1ad02f19017df61eb1336bd6e8795bbdd9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1ad02f19017df61eb1336bd6e8795bbdd9" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="d9/d6e/a01409_1afd44e2c321f482c928f28cfc88ae69b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1afd44e2c321f482c928f28cfc88ae69b7" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="d9/d6e/a01409_1afbfeac9bc0114189435004716ece4eb0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1afbfeac9bc0114189435004716ece4eb0" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="d9/d6e/a01409_1a0084fe0709c399962cf356f7e25261e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a0084fe0709c399962cf356f7e25261e9" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="d9/d6e/a01409_1a821866903f9289af1676488bfb3eda2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a821866903f9289af1676488bfb3eda2f" kindref="member">update</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>(message,<sp/>vec);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1ad9d94f81f16c816d41c6347dec10ec30" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message){};</highlight></codeline>
<codeline lineno="54" refid="d9/d6e/a01409_1ab2d8b9b4021e539ee364669275e71a81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1ab2d8b9b4021e539ee364669275e71a81" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val){};</highlight></codeline>
<codeline lineno="55" refid="d9/d6e/a01409_1a1cf1227eba8a4618de3abbd1f0212e54" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a1cf1227eba8a4618de3abbd1f0212e54" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val){};</highlight></codeline>
<codeline lineno="56" refid="d9/d6e/a01409_1a6e024032bd581010d3b620d21e2fc20e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a6e024032bd581010d3b620d21e2fc20e" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val){};</highlight></codeline>
<codeline lineno="57" refid="d9/d6e/a01409_1afe9e2900ee9d19ccdf5d925e1f192c30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1afe9e2900ee9d19ccdf5d925e1f192c30" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2){};</highlight></codeline>
<codeline lineno="58" refid="d9/d6e/a01409_1a49b561ac00eca725b345625dca0842e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a49b561ac00eca725b345625dca0842e4" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2){};</highlight></codeline>
<codeline lineno="59" refid="d9/d6e/a01409_1a677bb40c340376225e092cfed7404fcf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d6e/a01409_1a677bb40c340376225e092cfed7404fcf" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/>MessageType<sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>vec)<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkMessageType(MessageType<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageType::END<sp/>==<sp/>message)<sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>END<sp/>enum<sp/>type<sp/>should<sp/>not<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageType::BEGIN<sp/>==<sp/>message)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>BEGIN<sp/>enum<sp/>type<sp/>should<sp/>not<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="70" refid="d7/d68/a01413" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d68/a01413" kindref="compound">IObservable</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="d7/d68/a01413_1a9aafe435540e6e189f02cdf2156063fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d7/d68/a01413_1a9aafe435540e6e189f02cdf2156063fc" kindref="member">IObservable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MessageType<sp/>msg<sp/>=<sp/>MessageType::BEGIN;<sp/>msg<sp/>!=<sp/>MessageType::END;<sp/><ref refid="dd/df3/a00219_1a5db6e8f04892e85e6b17e276cdbd0e54" kindref="member">Ikarus::increment</ref>(msg))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>messages_.push_back(msg);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76" refid="d7/d68/a01413_1ae5717e23ba80e0081db869c6da4dee8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1ae5717e23ba80e0081db869c6da4dee8c" kindref="member">~IObservable</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77" refid="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" kindref="member">subscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="78" refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" kindref="member">subscribeAll</ref>(std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="79" refid="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" kindref="member">subscribeAll</ref>(std::initializer_list&lt;std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;&gt;<sp/>observers);</highlight></codeline>
<codeline lineno="80" refid="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" kindref="member">unSubscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="81" refid="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" kindref="member">unSubscribeAll</ref>(std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="82" refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">notify</ref>(MessageType<sp/>message);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="84" refid="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" kindref="member">notify</ref>(MessageType<sp/>message,<sp/>ScalarType<sp/>val);</highlight></codeline>
<codeline lineno="85" refid="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="86" refid="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val);</highlight></codeline>
<codeline lineno="87" refid="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2);</highlight></codeline>
<codeline lineno="88" refid="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="90" refid="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" kindref="member">notify</ref>(MessageType<sp/>message,<sp/>Eigen::VectorX&lt;ScalarType&gt;<sp/>vec);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ObserverVector<sp/>=<sp/>std::vector&lt;std::shared_ptr&lt;IObserver&lt;MessageType&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ObserverMap<sp/><sp/><sp/><sp/>=<sp/>std::map&lt;MessageType,<sp/>ObserverVector&gt;;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ObserverMap<sp/>observers_;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::vector&lt;MessageType&gt;<sp/>messages_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="100" refid="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1af3553b1f0693d383b926a7d41ef9cfba" kindref="member">IObservable&lt;MessageType&gt;::subscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>observers_[message];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>vectorOfObserversOfASpecificMessage.push_back(observer);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="107" refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" kindref="member">IObservable&lt;MessageType&gt;::subscribeAll</ref>(std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>subscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="113" refid="d7/d68/a01413_1aabc096399b6dfc39c2679847e70479d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a273c05e01be307f0b68c7324a3e5b5fc" kindref="member">IObservable&lt;MessageType&gt;::subscribeAll</ref>(std::initializer_list&lt;std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;&gt;<sp/>observers)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>observer<sp/>:<sp/>observers)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="120" refid="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a49fbae522276e31eaf42576b529d7c39" kindref="member">IObservable&lt;MessageType&gt;::unSubscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::ranges::remove_if(vectorOfObserversOfASpecificMessage,<sp/>[&amp;observer](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obs<sp/>==<sp/>observer;<sp/>});</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="126" refid="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1aa0aaa380ab52aa54956ab79146ea1ee8" kindref="member">IObservable&lt;MessageType&gt;::unSubscribeAll</ref>(std::shared_ptr&lt;<ref refid="d9/d6e/a01409" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>unSubscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="132" refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="140" refid="d7/d68/a01413_1a7ad4e1f78c9d499c16d1b3a89afbbd85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/>ScalarType<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="147" refid="d7/d68/a01413_1abdcf57d5950f29e3cf60bc4399852c3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="154" refid="d7/d68/a01413_1a40bde4b27ca546193ed27bf903637977" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="161" refid="d7/d68/a01413_1a685615e97a234484882f1fbf5ce2a0ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="168" refid="d7/d68/a01413_1aa8af861cb51e8dd7902d74087b446b36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="176" refid="d7/d68/a01413_1a473491f00b2c473d24193c2c48983058" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d68/a01413_1a55986002430ae0b5d9e12803e28f31d7" kindref="member">IObservable&lt;MessageType&gt;::notify</ref>(MessageType<sp/>message,<sp/>Eigen::VectorX&lt;ScalarType&gt;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>vec);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh"/>
  </compounddef>
</doxygen>
