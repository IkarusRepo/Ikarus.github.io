<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d7/dce/a00143" kind="file" language="C++">
    <compoundname>vanishingstress.hh</compoundname>
    <includes refid="da/d1e/a00149" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <includes refid="d6/de1/a00233" local="no">ikarus/solver/nonlinearsolver/newtonraphson.hh</includes>
    <includes refid="da/d45/a00011" local="no">ikarus/utils/nonlinearoperator.hh</includes>
    <includedby refid="db/ddf/a00164" local="no">materials.hh</includedby>
    <incdepgraph>
      <node id="29">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="dc/dfe/a00125"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="da/d1e/a00149"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="d9/db6/a00146"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tags.hh</label>
        <link refid="d7/d9a/a00152"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>vanishingstress.hh</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="d2/dc8/a00242"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="d6/de1/a00233"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="d1/da8/a00230"/>
      </node>
      <node id="14">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="db/db2/a00020"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ikarus/utils/math.hh</label>
        <link refid="dd/d32/a00041"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="da/d45/a00011"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="dc/d9a/a00218"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="d5/df1/a00206"/>
      </node>
      <node id="9">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ikarus/utils/traits.hh</label>
        <link refid="d9/d2e/a00056"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Eigen/Core</label>
      </node>
      <node id="21">
        <label>Eigen/Sparse</label>
      </node>
      <node id="42">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="37">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="15">
        <label>concepts</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="28">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="25">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="13">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="35">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="20">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="36">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="48">
        <label>functional</label>
      </node>
      <node id="30">
        <label>iosfwd</label>
      </node>
      <node id="31">
        <label>map</label>
      </node>
      <node id="40">
        <label>memory</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="34">
        <label>random</label>
      </node>
      <node id="11">
        <label>ranges</label>
      </node>
      <node id="32">
        <label>set</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="7">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="17">
        <label>utility</label>
      </node>
      <node id="41">
        <label>variant</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d9/dd8/a02481"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>linearelastic.hh</label>
        <link refid="d1/d50/a02487"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>materials.hh</label>
        <link refid="db/ddf/a00164"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>vanishingstress.hh</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kirchhoffloveshell.hh</label>
        <link refid="de/d4e/a02484"/>
      </node>
      <node id="6">
        <label>linearelastic.hh</label>
        <link refid="d5/ddd/a02490"/>
      </node>
      <node id="8">
        <label>material.hh</label>
        <link refid="de/db1/a00197"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>registerelement.hh</label>
        <link refid="dc/d57/a00194"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>_ikarus.cc</label>
        <link refid="d9/dd6/a00272"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d6/dfa/a01318" prot="public">Ikarus::VanishingStress</innerclass>
    <innernamespace refid="d1/d67/a00310">Ikarus</innernamespace>
    <briefdescription>
<para>Defines the VanishingStress material model and related functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="da/d1e/a00149" kindref="compound">ikarus/finiteelements/mechanics/materials/interface.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d6/de1/a00233" kindref="compound">ikarus/solver/nonlinearsolver/newtonraphson.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="da/d45/a00011" kindref="compound">ikarus/utils/nonlinearoperator.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d1/d67/a00310" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">StressIndexPair<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Index<sp/>row;<sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Index<sp/>col;<sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">consteval</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>createfreeVoigtIndices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;StressIndexPair,<sp/>size&gt;&amp;<sp/>fixed)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>6<sp/>-<sp/>size&gt;<sp/>res{};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>size&gt;<sp/>voigtFixedIndices;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::transform(fixed,<sp/>voigtFixedIndices.begin(),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pair)<sp/>{<sp/>return<sp/>toVoigt(pair.row,<sp/>pair.col);<sp/>});</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::sort(voigtFixedIndices);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::set_difference(std::ranges::iota_view(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(0),<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(6)),<sp/>voigtFixedIndices,<sp/>res.begin());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::sort(res);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">consteval</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>createFixedVoigtIndices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;StressIndexPair,<sp/>size&gt;&amp;<sp/>fixed)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>size&gt;<sp/>fixedIndices;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::transform(fixed,<sp/>fixedIndices.begin(),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pair)<sp/>{<sp/>return<sp/>toVoigt(pair.row,<sp/>pair.col);<sp/>});</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::sort(fixedIndices);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fixedIndices;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>countDiagonalIndices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;StressIndexPair,<sp/>size&gt;&amp;<sp/>fixed)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>fixed)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.col<sp/>==<sp/>v.row)<sp/>++count;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;auto<sp/>stressIndexPair,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="85" refid="d6/dfa/a01318" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d6/dfa/a01318" kindref="compound">VanishingStress</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/d34/a01298" kindref="compound">Material</ref>&lt;VanishingStress&lt;stressIndexPair,<sp/>MaterialImpl&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="91" refid="d6/dfa/a01318_1a9a6d28f0977eda48a8a2d5f8e0aac8f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a9a6d28f0977eda48a8a2d5f8e0aac8f6" kindref="member">VanishingStress</ref>(MaterialImpl<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>p_tol<sp/>=<sp/>1e-12)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>matImpl{mat},<sp/>tol{p_tol}<sp/>{}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="d6/dfa/a01318_1ad37a57829794ef9bfd1a583e9fb1920a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/dfa/a01318_1ad37a57829794ef9bfd1a583e9fb1920a" kindref="member">Underlying</ref><sp/>=<sp/>MaterialImpl;<sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stressIndexPair;<sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="d6/dfa/a01318_1a2d54836e17bf2fe768337d0c3044189e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a2d54836e17bf2fe768337d0c3044189e" kindref="member">freeVoigtIndices</ref><sp/><sp/>=<sp/>createfreeVoigtIndices(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="d6/dfa/a01318_1a22cf6e6afdbdf2c3442f353df4df43c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a22cf6e6afdbdf2c3442f353df4df43c3" kindref="member">fixedVoigtIndices</ref><sp/>=<sp/>createFixedVoigtIndices(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="d6/dfa/a01318_1a3b415fdc6e7ec6c5f0dfb896fbb157c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a3b415fdc6e7ec6c5f0dfb896fbb157c5" kindref="member">fixedDiagonalVoigtIndicesSize</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>countDiagonalIndices(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="d6/dfa/a01318_1a335c313f483cd9b6c9aae7a8939e012e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a335c313f483cd9b6c9aae7a8939e012e" kindref="member">freeStrains</ref><sp/>=<sp/><ref refid="d6/dfa/a01318_1a2d54836e17bf2fe768337d0c3044189e" kindref="member">freeVoigtIndices</ref>.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType;<sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="d6/dfa/a01318_1a30f66cb6f5ccb30e08e152b0ce9e5878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/dfa/a01318_1a30f66cb6f5ccb30e08e152b0ce9e5878" kindref="member">nameImpl</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matName<sp/>=<sp/>matImpl.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Vanishing(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(p.row)<sp/>+<sp/>std::to_string(p.col)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matName;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="d6/dfa/a01318_1a1b26c785517e451f78bebea9138468ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a1b26c785517e451f78bebea9138468ab" kindref="member">strainTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>MaterialImpl::strainTag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="d6/dfa/a01318_1a28b62b4e231713db324d97f0a86f4370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a28b62b4e231713db324d97f0a86f4370" kindref="member">stressTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>MaterialImpl::stressTag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="d6/dfa/a01318_1ac14957720de3575a99423a33ec38e4a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1ac14957720de3575a99423a33ec38e4a4" kindref="member">tangentModuliTag</ref><sp/><sp/><sp/>=<sp/>MaterialImpl::tangentModuliTag;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="d6/dfa/a01318_1a6c66547d214dc1e4dd54c0002de1eaf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a6c66547d214dc1e4dd54c0002de1eaf2" kindref="member">energyAcceptsVoigt</ref><sp/>=<sp/>MaterialImpl::energyAcceptsVoigt;<sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="d6/dfa/a01318_1a2c6607a26a8c24687cf88efc041a434c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a2c6607a26a8c24687cf88efc041a434c" kindref="member">stressToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="d6/dfa/a01318_1ac209ebf251b62ac6f4184fb9f42ce718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1ac209ebf251b62ac6f4184fb9f42ce718" kindref="member">stressAcceptsVoigt</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="d6/dfa/a01318_1aac703706261e71517a62cc02e6681dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1aac703706261e71517a62cc02e6681dce" kindref="member">moduliToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="d6/dfa/a01318_1a55c0c5ea836671191ea21dba48168a95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a55c0c5ea836671191ea21dba48168a95" kindref="member">moduliAcceptsVoigt</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="d6/dfa/a01318_1a7a3c35f1d129576897ee5a43bb02d8ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a7a3c35f1d129576897ee5a43bb02d8ef" kindref="member">derivativeFactor</ref><sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="129" refid="d6/dfa/a01318_1aa27b5462fbbb965c8cb5689834c755c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" kindref="member">ScalarType</ref><sp/><ref refid="d6/dfa/a01318_1aa27b5462fbbb965c8cb5689834c755c3" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[nonOp,<sp/>Esol]<sp/>=<sp/>reduceStress(E);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matImpl.storedEnergyImpl(Esol);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="142" refid="d6/dfa/a01318_1a09ee586572c98a89b4b63e4952687ad4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a09ee586572c98a89b4b63e4952687ad4" kindref="member">stressesImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[nonOp,<sp/>Esol]<sp/>=<sp/>reduceStress(E);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stressesRed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matImpl.template<sp/>stresses&lt;MaterialImpl::strainTag,<sp/>true&gt;(Esol);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(voigt)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d07/a00305_1ga2f675229501979101656ec4dee7764d5" kindref="member">removeCol</ref>(stressesRed,<sp/><ref refid="d6/dfa/a01318_1a22cf6e6afdbdf2c3442f353df4df43c3" kindref="member">fixedVoigtIndices</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/de3/a00306_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(stressesRed,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="160" refid="d6/dfa/a01318_1a3fb115007e1e4323b8f3d46f2b681ff0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1a3fb115007e1e4323b8f3d46f2b681ff0" kindref="member">tangentModuliImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[nonOp,<sp/>Esol]<sp/>=<sp/>reduceStress(E);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matImpl.template<sp/>tangentModuli&lt;MaterialImpl::strainTag,<sp/>true&gt;(Esol);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(voigt)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d07/a00305_1ga19d425a4fbc72c2ef7a97d71de9329a4" kindref="member">staticCondensation</ref>(C,<sp/><ref refid="d6/dfa/a01318_1a22cf6e6afdbdf2c3442f353df4df43c3" kindref="member">fixedVoigtIndices</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/de3/a00306_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(C);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarTypeOther&gt;</highlight></codeline>
<codeline lineno="175" refid="d6/dfa/a01318_1abe41f8e6a9be4ed8c7a5bf54f0774c9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318_1abe41f8e6a9be4ed8c7a5bf54f0774c9d" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reboundMatImpl<sp/>=<sp/>matImpl.template<sp/>rebind&lt;ScalarTypeOther&gt;();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318" kindref="compound">VanishingStress&lt;stressIndexPair, decltype(reboundMatImpl)&gt;</ref>(reboundMatImpl,<sp/>tol);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>maybeFromVoigt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="dd/d40/a01636" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>receiving<sp/>vector<sp/>means<sp/>Voigt<sp/>notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/de3/a00306_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(E.derived(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E.derived();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initUnknownStrains(Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" kindref="member">ScalarType</ref><sp/>initialVal<sp/>=<sp/>E(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].row,<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].col);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="d6/dfa/a01318_1a1b26c785517e451f78bebea9138468ab" kindref="member">strainTag</ref><sp/>==<sp/><ref refid="d9/d0d/a00298_1ggacef1e451de1a99845c59d7391064fb8fa61fc106262d2e2049866894bb4f862a5" kindref="member">StrainTags::deformationGradient</ref><sp/>or<sp/><ref refid="d6/dfa/a01318_1a1b26c785517e451f78bebea9138468ab" kindref="member">strainTag</ref><sp/>==<sp/><ref refid="d9/d0d/a00298_1ggacef1e451de1a99845c59d7391064fb8faea40a9960a7a89c4f366beeab85d07d2" kindref="member">StrainTags::rightCauchyGreenTensor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dune::FloatCmp::eq(initialVal,<sp/><ref refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" kindref="member">ScalarType</ref>(0.0))<sp/>and<sp/>(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].row<sp/>==<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].col))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialVal<sp/>=<sp/><ref refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" kindref="member">ScalarType</ref>(1.0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].row<sp/>!=<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].col)<sp/>initialVal<sp/>=<sp/><ref refid="d6/dfa/a01318_1a01a5f04bd4cf950907221fd2fe65c8da" kindref="member">ScalarType</ref>(0.0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].row,<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].col)<sp/>=<sp/>E(<ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].col,<sp/><ref refid="d6/dfa/a01318_1a783fd98a63a76e58e40dbd15eaad23be" kindref="member">fixedPairs</ref>[i].row)<sp/>=<sp/>initialVal;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reduceStress(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>p_Eraw)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>maybeFromVoigt(p_Eraw);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initUnknownStrains(E);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>fixedDiagonalVoigtIndicesSize&gt;<sp/>fixedDiagonalVoigtIndices;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ri<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/><ref refid="d6/dfa/a01318_1a22cf6e6afdbdf2c3442f353df4df43c3" kindref="member">fixedVoigtIndices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexPair<sp/>=<sp/><ref refid="d1/de3/a00306_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(i);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexPair[0]<sp/>==<sp/>indexPair[1])<sp/>fixedDiagonalVoigtIndices[ri++]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>matImpl.template<sp/>stresses&lt;MaterialImpl::strainTag,<sp/>true&gt;(E);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S(fixedDiagonalVoigtIndices).eval();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>moduli<sp/>=<sp/>(matImpl.template<sp/>tangentModuli&lt;MaterialImpl::strainTag,<sp/>true&gt;(E)).eval();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(moduli(fixedDiagonalVoigtIndices,<sp/>fixedDiagonalVoigtIndices)<sp/>/<sp/>MaterialImpl::derivativeFactor).eval();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Er<sp/><sp/><sp/><sp/>=<sp/>E(fixedDiagonalVoigtIndices,<sp/>fixedDiagonalVoigtIndices).eval().template<sp/>cast&lt;ScalarType&gt;();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nonOp<sp/>=<sp/><ref refid="dc/d2d/a01534" kindref="compound">Ikarus::NonLinearOperator</ref>(<ref refid="d1/d67/a00310_1ab787b670f0d338c870988f417cf85f76" kindref="member">functions</ref>(f,<sp/>df),<sp/><ref refid="d1/d67/a00310_1ac00abda505aa8ccc73ce59afd165ce49" kindref="member">parameter</ref>(Er));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nr<sp/><sp/><sp/><sp/>=<sp/><ref refid="d1/d67/a00310_1a88c3bed4f749a93760f96c52c91091e7" kindref="member">Ikarus::makeNewtonRaphson</ref>(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonOp,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>r,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>A)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(A.inverse()<sp/>*<sp/>r).eval();<sp/>},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*<sp/>Ex33<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ecomps)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ri<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>fixedDiagonalVoigtIndices)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexPair<sp/>=<sp/><ref refid="d1/de3/a00306_1ga106e11a950fe2545890e811d2e9545fd" kindref="member">fromVoigt</ref>(i);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E(indexPair[0],<sp/>indexPair[1])<sp/>+=<sp/>Ecomps(ri++);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nr-&gt;setup({.tol<sp/>=<sp/>tol,<sp/>.maxIter<sp/>=<sp/>100});</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nr-&gt;solve()))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>stress<sp/>reduction<sp/>of<sp/>material<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="d6/dfa/a01318_1a30f66cb6f5ccb30e08e152b0ce9e5878" kindref="member">nameImpl</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>unsuccessful\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>strains<sp/>are\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>E<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>The<sp/>stresses<sp/>are\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>f(Er));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(nonOp,<sp/>E);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>MaterialImpl<sp/>matImpl;<sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;Impl::StressIndexPair...<sp/>stressIndexPair,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="271" refid="d1/d67/a00310_1a317c0a50c0a7d482e2a20d8146e08df8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>(MaterialImpl<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>p_tol<sp/>=<sp/>1e-12)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/dfa/a01318" kindref="compound">VanishingStress</ref>&lt;std::to_array({stressIndexPair...}),<sp/>MaterialImpl&gt;(mat,<sp/>p_tol);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="283" refid="d1/d67/a00310_1a9b0fa242d65e9b14680cedcbaeed3301" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a9b0fa242d65e9b14680cedcbaeed3301" kindref="member">planeStress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaterialImpl&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>p_tol<sp/>=<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>&lt;Impl::StressIndexPair{2,<sp/>1},<sp/>Impl::StressIndexPair{2,<sp/>0},<sp/>Impl::StressIndexPair{2,<sp/>2}&gt;(</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat,<sp/>p_tol);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="297" refid="d1/d67/a00310_1a97580749c5279282142d9e17d612b77e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a97580749c5279282142d9e17d612b77e" kindref="member">shellMaterial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaterialImpl&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>p_tol<sp/>=<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>&lt;Impl::StressIndexPair{2,<sp/>2}&gt;(mat,<sp/>p_tol);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="310" refid="d1/d67/a00310_1a9bf89561a3cb74c038a5e137608ee22d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a9bf89561a3cb74c038a5e137608ee22d" kindref="member">beamMaterial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaterialImpl&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>p_tol<sp/>=<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d67/a00310_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>&lt;Impl::StressIndexPair{1,<sp/>1},<sp/>Impl::StressIndexPair{2,<sp/>2}&gt;(mat,<sp/>p_tol);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh"/>
  </compounddef>
</doxygen>
