<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d2/d1d/a01277" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::LinearElastic</compoundname>
    <basecompoundref refid="de/df7/a01201" prot="public" virt="non-virtual">Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</basecompoundref>
    <includes refid="d3/d6c/a02446" local="no">ikarus/finiteelements/mechanics/linearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename Basis_</type>
      </param>
      <param>
        <type>typename FERequirements_</type>
        <defval><ref refid="d8/d53/a01225" kindref="compound">FERequirements</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d2/d1d/a01277_1a5935304c8f08a48d0e3606949be5c8af" prot="public" static="no">
        <type>Basis_</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Basis =  Basis_</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::LinearElastic::Basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="46" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1ad39b9dca6c279697e13d795bccba67c9" prot="public" static="no">
        <type>typename <ref refid="d2/d9b/a01433_1ab9e57abdb5f4abeb030f6122df75849e" kindref="member">Basis::FlatBasis</ref></type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::FlatBasis =  typename Basis::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::LinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="47" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1a46df9b5887e5f1c87dfd24aeca94824a" prot="public" static="no">
        <type><ref refid="de/df7/a01201" kindref="compound">PowerBasisFE</ref>&lt; <ref refid="d2/d1d/a01277_1ad39b9dca6c279697e13d795bccba67c9" kindref="member">FlatBasis</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::BaseDisp =  PowerBasisFE&lt;FlatBasis&gt;</definition>
        <argsstring></argsstring>
        <name>BaseDisp</name>
        <qualifiedname>Ikarus::LinearElastic::BaseDisp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="48" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" prot="public" static="no">
        <type>FERequirements_</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::FERequirementType =  FERequirements_</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::LinearElastic::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="49" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1abe2be58bcd10e27f8e57aab7558dc058" prot="public" static="no">
        <type><ref refid="dc/dab/a01237" kindref="compound">ResultRequirements</ref>&lt; <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::ResultRequirementsType =  ResultRequirements&lt;FERequirementType&gt;</definition>
        <argsstring></argsstring>
        <name>ResultRequirementsType</name>
        <qualifiedname>Ikarus::LinearElastic::ResultRequirementsType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="50" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" prot="public" static="no">
        <type>typename FlatBasis::LocalView</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::LocalView =  typename FlatBasis::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::LinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="51" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1a35694c311107f0ab0a8d356567e55abb" prot="public" static="no">
        <type>typename LocalView::Element</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Element =  typename LocalView::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::LinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="52" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1ac4d98d49f5d7dc9b3797097d918ae3f8" prot="public" static="no">
        <type><ref refid="de/d90/a01313" kindref="compound">TraitsFromLocalView</ref>&lt; <ref refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" kindref="member">LocalView</ref>, useEigenRef &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Traits =  TraitsFromLocalView&lt;LocalView, useEigenRef&gt;</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::LinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="53" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1a5cd6f438ba78449bf2ed541a86473ffe" prot="public" static="no">
        <type>typename Element::Geometry</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::Geometry =  typename Element::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::LinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="54" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1a0c13329c6d3d67101c1017b4df6bcefa" prot="public" static="no">
        <type>typename FlatBasis::GridView</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::GridView =  typename FlatBasis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::LinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="55" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d1d/a01277_1a1d9cc0964e73991e6a06ad38e7bfb78a" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().<ref refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" kindref="member">localBasis</ref>())</type>
        <definition>using Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::LinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="58" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/df7/a01201_1a603635da96938a751807c9dc1dd81f39" prot="public" static="no">
        <type>Basis_::FlatBasis</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::RootBasis =  Basis_::FlatBasis</definition>
        <argsstring></argsstring>
        <name>RootBasis</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::RootBasis</qualifiedname>
        <briefdescription>
<para>Type of the root basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="25" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/df7/a01201_1a6f9f635b6e082d4f56988229a944b4e6" prot="public" static="no">
        <type>typename LocalView::MultiIndex</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::GlobalIndex =  typename LocalView::MultiIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="27" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/df7/a01201_1a74443a55b1c44a242d4089637228d001" prot="public" static="no">
        <type>typename LocalView::Element</type>
        <definition>using Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::GridElement =  typename LocalView::Element</definition>
        <argsstring></argsstring>
        <name>GridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::GridElement</qualifiedname>
        <briefdescription>
<para>Type of the grid element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="28" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::LinearElastic::myDim</qualifiedname>
        <initializer>= <ref refid="de/d90/a01313_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="56" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="56" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d3/d6c/a02446" startline="178" endline="194">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" compoundref="d3/d6c/a02446" startline="137" endline="142">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::LinearElastic::worldDim</qualifiedname>
        <initializer>= <ref refid="de/d90/a01313_1a47ccda97cc8e04f87be6d2c3a165ba98" kindref="member">Traits::worlddim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="57" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/df7/a01201_1a08d63c99f722a352ee1ebe29bcb88bcd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::num_children</definition>
        <argsstring></argsstring>
        <name>num_children</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::num_children</qualifiedname>
        <briefdescription>
<para>Number of children in the powerBasis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="48" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="d2/d1d/a01277_1a5cd6f438ba78449bf2ed541a86473ffe" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::LinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="221" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="221" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d3/d6c/a02446" startline="178" endline="194">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" compoundref="d3/d6c/a02446" startline="111" endline="117">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::displacementFunction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" prot="public" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="d2/d1d/a01277_1a1d9cc0964e73991e6a06ad38e7bfb78a" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::localBasis</definition>
        <argsstring></argsstring>
        <name>localBasis</name>
        <qualifiedname>Ikarus::LinearElastic::localBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="222" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="222" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" compoundref="d3/d6c/a02446" startline="111" endline="117">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::displacementFunction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" prot="public" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" kindref="member">worldDim</ref> &gt;(const <ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::volumeLoad</definition>
        <argsstring></argsstring>
        <name>volumeLoad</name>
        <qualifiedname>Ikarus::LinearElastic::volumeLoad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="224" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="224" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" prot="public" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector&lt; double, <ref refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" kindref="member">worldDim</ref> &gt;(const <ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" kindref="member">worldDim</ref> &gt; &amp;, const double &amp;)&gt;</type>
        <definition>std::function&lt;Eigen::Vector&lt;double, worldDim&gt;(const Dune::FieldVector&lt;double, worldDim&gt;&amp;, const double&amp;)&gt; Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::neumannBoundaryLoad</definition>
        <argsstring></argsstring>
        <name>neumannBoundaryLoad</name>
        <qualifiedname>Ikarus::LinearElastic::neumannBoundaryLoad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="226" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="226" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" prot="public" static="no" mutable="no">
        <type>const BoundaryPatch&lt; <ref refid="d2/d1d/a01277_1a0c13329c6d3d67101c1017b4df6bcefa" kindref="member">GridView</ref> &gt; *</type>
        <definition>const BoundaryPatch&lt;GridView&gt;* Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::neumannBoundary</definition>
        <argsstring></argsstring>
        <name>neumannBoundary</name>
        <qualifiedname>Ikarus::LinearElastic::neumannBoundary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="227" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="227" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::emod_</definition>
        <argsstring></argsstring>
        <name>emod_</name>
        <qualifiedname>Ikarus::LinearElastic::emod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="228" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="228" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" compoundref="d3/d6c/a02446" startline="137" endline="142">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>Ikarus::LinearElastic::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="229" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="229" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" compoundref="d3/d6c/a02446" startline="137" endline="142">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::numberOfNodes</definition>
        <argsstring></argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="230" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="230" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d3/d6c/a02446" startline="178" endline="194">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::LinearElastic::order</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="231" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="231" bodyend="-1"/>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d1d/a01277_1a99c658e2b0aa008672bfbc67e11c56db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumeLoad</type>
            <defval><ref refid="d4/dfd/a01465" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
          <param>
            <type>typename NeumannBoundaryLoad</type>
            <defval><ref refid="d4/dfd/a01465" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::LinearElastic</definition>
        <argsstring>(const Basis &amp;globalBasis, const typename LocalView::Element &amp;element, double emod, double nu, VolumeLoad p_volumeLoad={}, const BoundaryPatch&lt; GridView &gt; *p_neumannBoundary=nullptr, NeumannBoundaryLoad p_neumannBoundaryLoad={})</argsstring>
        <name>LinearElastic</name>
        <qualifiedname>Ikarus::LinearElastic::LinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a5935304c8f08a48d0e3606949be5c8af" kindref="member">Basis</ref> &amp;</type>
          <declname>globalBasis</declname>
        </param>
        <param>
          <type>const typename LocalView::Element &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>double</type>
          <declname>emod</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>VolumeLoad</type>
          <declname>p_volumeLoad</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="d2/d1d/a01277_1a0c13329c6d3d67101c1017b4df6bcefa" kindref="member">GridView</ref> &gt; *</type>
          <declname>p_neumannBoundary</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>NeumannBoundaryLoad</type>
          <declname>p_neumannBoundaryLoad</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="d2/d1d/a01277" kindref="compound">LinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the volume load function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NeumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>The global basis for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element for which the finite element is constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emod</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_volumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch (default is nullptr). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="74" column="5" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="74" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::displacementFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::LinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the displacement function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="111" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="111" bodyend="117"/>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" compoundref="d3/d6c/a02446" startline="127" endline="130">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::strainFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::LinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the strain function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="127" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="127" bodyend="130"/>
        <referencedby refid="d2/d1d/a01277_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" compoundref="d3/d6c/a02446" startline="203" endline="219">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d3/d6c/a02446" startline="178" endline="194">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangent</definition>
        <argsstring>() const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangent</qualifiedname>
        <briefdescription>
<para>Gets the material tangent matrix for the linear elastic material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The material tangent matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="137" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="137" bodyend="142"/>
        <referencedby refid="d2/d1d/a01277_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" compoundref="d3/d6c/a02446" startline="203" endline="219">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateAt</referencedby>
        <referencedby refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" compoundref="d3/d6c/a02446" startline="178" endline="194">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</referencedby>
        <referencedby refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" compoundref="d3/d6c/a02446" startline="235" endline="286">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" compoundref="d3/d6c/a02446" startline="289" endline="345">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="d2/d1d/a01277_1a23a003fe0c49bfc18714da0889b00c65" compoundref="d3/d6c/a02446" startline="150" endline="152">Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangentFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a23a003fe0c49bfc18714da0889b00c65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::materialTangentFunction</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>materialTangentFunction</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangentFunction</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Gets the material tangent function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="150" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar energy for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The scalar energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="160" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a35aa251bcd641913a8448b9502030349" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates the vector force for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the calculated force. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="168" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::LinearElastic::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix stiffness for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store the calculated stiffness. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="178" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="178" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateAt</definition>
        <argsstring>(const ResultRequirementsType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, ResultTypeMap&lt; double &gt; &amp;result) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::LinearElastic::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1abe2be58bcd10e27f8e57aab7558dc058" kindref="member">ResultRequirementsType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="d4/deb/a01345" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="de/d90/a01313_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="d6/da1/a01233" kindref="compound">ResultTypeMap</ref>&lt; double &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates results at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The ResultRequirementsType object specifying the requested results. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Map to store the calculated results. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="203" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="203" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a65fbcfb67bd20fd4a434230b5efa5bd1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::size</qualifiedname>
        <briefdescription>
<para>Get the size of the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="54" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1ac47a208cf2511bf8676282280360ab38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::globalFlatIndices</definition>
        <argsstring>(std::vector&lt; GlobalIndex &gt; &amp;globalIndices) const</argsstring>
        <name>globalFlatIndices</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::globalFlatIndices</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="de/df7/a01201_1a6f9f635b6e082d4f56988229a944b4e6" kindref="member">GlobalIndex</ref> &gt; &amp;</type>
          <declname>globalIndices</declname>
        </param>
        <briefdescription>
<para>Get the global flat indices for the power basis. </para>
        </briefdescription>
        <detaileddescription>
<para>The global indices are collected in a FlatInterLeaved order. I.e. x_0, y_0, z_0, ..., x_n, y_n, z_n</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector to store global indices. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="63" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="de/df7/a01201_1a74443a55b1c44a242d4089637228d001" kindref="member">GridElement</ref> &amp;</type>
        <definition>const GridElement &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::gridElement</definition>
        <argsstring>() const</argsstring>
        <name>gridElement</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::gridElement</qualifiedname>
        <briefdescription>
<para>Get the grid element associated with the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The grid element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="78" column="23" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" kindref="member">LocalView</ref> &amp;</type>
        <definition>const LocalView &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::localView</definition>
        <argsstring>() const</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the const reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The const reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="84" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="de/df7/a01201_1a00a045439d18c431ef49d7349230272b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" kindref="member">LocalView</ref> &amp;</type>
        <definition>LocalView &amp; Ikarus::PowerBasisFE&lt; Basis_::FlatBasis  &gt;::localView</definition>
        <argsstring>()</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" line="90" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febases/powerbasisfe.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="235" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="235" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="289" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="289" bodyend="345"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d2/d1d/a01277" kindref="compound">LinearElastic</ref> class represents a linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Basis_</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis type for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FERequirements_</parametername>
</parameternamelist>
<parameterdescription>
<para>The requirements for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag indicating whether to use <ref refid="d5/d0f/a00308" kindref="compound">Eigen</ref> references. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;</label>
        <link refid="d2/d1d/a01277"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::PowerBasisFE&lt; Basis &gt;</label>
        <link refid="de/df7/a01201"/>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</label>
        <link refid="de/df7/a01201"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Basis_::FlatBasis &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; Basis_, FERequirements_, useEigenRef &gt;</label>
        <link refid="d2/d1d/a01277"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>geo_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::PowerBasisFE&lt; Basis &gt;</label>
        <link refid="de/df7/a01201"/>
      </node>
      <node id="2">
        <label>Ikarus::PowerBasisFE&lt; Basis_::FlatBasis &gt;</label>
        <link refid="de/df7/a01201"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Basis_::FlatBasis &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="4">
        <label>std::shared_ptr&lt; const Geometry &gt;</label>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; const Geometry &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::shared_ptr&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="44" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="44" bodyend="346"/>
    <listofallmembers>
      <member refid="d2/d1d/a01277_1a46df9b5887e5f1c87dfd24aeca94824a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>BaseDisp</name></member>
      <member refid="d2/d1d/a01277_1a5935304c8f08a48d0e3606949be5c8af" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Basis</name></member>
      <member refid="d2/d1d/a01277_1a51a4d30fb9b0ee5c2bf7683b69f0eda9" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateAt</name></member>
      <member refid="d2/d1d/a01277_1a9d491b6c69f9f28b2a838075526fa705" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="d2/d1d/a01277_1afa5f1b3ac1cb7ccfa05d396377f8ac9c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="d2/d1d/a01277_1a2f4e42b682af401fcfaada66e5a05d53" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="d2/d1d/a01277_1a35aa251bcd641913a8448b9502030349" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="d2/d1d/a01277_1a3cb0f7f1a2745097f3e91b9c0928722f" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="d2/d1d/a01277_1a80bcd6e7b26b4529df93d12314d92117" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>displacementFunction</name></member>
      <member refid="d2/d1d/a01277_1a35694c311107f0ab0a8d356567e55abb" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Element</name></member>
      <member refid="d2/d1d/a01277_1ae98a4458c10414b5a86e2d57aded34b5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>emod_</name></member>
      <member refid="d2/d1d/a01277_1a33dd9dc45823d8a0d70ed8b84ad35c90" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FERequirementType</name></member>
      <member refid="d2/d1d/a01277_1ad39b9dca6c279697e13d795bccba67c9" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FlatBasis</name></member>
      <member refid="d2/d1d/a01277_1af3ddba31ce5bb464d3831e5aa37cbc00" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geo_</name></member>
      <member refid="d2/d1d/a01277_1a5cd6f438ba78449bf2ed541a86473ffe" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Geometry</name></member>
      <member refid="de/df7/a01201_1ac47a208cf2511bf8676282280360ab38" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>globalFlatIndices</name></member>
      <member refid="de/df7/a01201_1a6f9f635b6e082d4f56988229a944b4e6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GlobalIndex</name></member>
      <member refid="de/df7/a01201_1a74443a55b1c44a242d4089637228d001" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridElement</name></member>
      <member refid="de/df7/a01201_1a0fe5d4e10f331905629351786c72ce6a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>gridElement</name></member>
      <member refid="d2/d1d/a01277_1a0c13329c6d3d67101c1017b4df6bcefa" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridView</name></member>
      <member refid="d2/d1d/a01277_1a99c658e2b0aa008672bfbc67e11c56db" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LinearElastic</name></member>
      <member refid="d2/d1d/a01277_1acf549079afaf07ee432d7d4d313bf328" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localBasis</name></member>
      <member refid="d2/d1d/a01277_1a1d9cc0964e73991e6a06ad38e7bfb78a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="de/df7/a01201_1a4b49c02de08fb5c115affa646c5f249a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="de/df7/a01201_1a00a045439d18c431ef49d7349230272b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="d2/d1d/a01277_1ae61c1276f6660a2026626a3fcdebbfbd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalView</name></member>
      <member refid="d2/d1d/a01277_1ae9391f3895e965ecc5dfea1af1ac62f7" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangent</name></member>
      <member refid="d2/d1d/a01277_1a23a003fe0c49bfc18714da0889b00c65" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangentFunction</name></member>
      <member refid="d2/d1d/a01277_1a2279ac283b972f47d58c51730ca47d6b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>myDim</name></member>
      <member refid="d2/d1d/a01277_1a48ad1b490e84e23d02b4266eb527ad52" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>neumannBoundary</name></member>
      <member refid="d2/d1d/a01277_1a8f5cd86d75db485066cb9dc1fd3c1dcd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>neumannBoundaryLoad</name></member>
      <member refid="d2/d1d/a01277_1a33fbf32f4837529fb342bc3ced62107b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>nu_</name></member>
      <member refid="de/df7/a01201_1a08d63c99f722a352ee1ebe29bcb88bcd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>num_children</name></member>
      <member refid="d2/d1d/a01277_1ac9a0b28abbc352e63eab24d1c3c5233b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="d2/d1d/a01277_1aa8f4542d65e2154fefce9d235178c71b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order</name></member>
      <member refid="de/df7/a01201_1a009345be8aeaf011f22f4c32c7d6f638" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>PowerBasisFE</name></member>
      <member refid="d2/d1d/a01277_1abe2be58bcd10e27f8e57aab7558dc058" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>ResultRequirementsType</name></member>
      <member refid="de/df7/a01201_1a603635da96938a751807c9dc1dd81f39" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>RootBasis</name></member>
      <member refid="de/df7/a01201_1a65fbcfb67bd20fd4a434230b5efa5bd1" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>size</name></member>
      <member refid="d2/d1d/a01277_1a8622364f84baada158d636021dc3d3d4" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>strainFunction</name></member>
      <member refid="d2/d1d/a01277_1ac4d98d49f5d7dc9b3797097d918ae3f8" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traits</name></member>
      <member refid="d2/d1d/a01277_1af1236ddd4ef97539f0cd97049bcd1542" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>volumeLoad</name></member>
      <member refid="d2/d1d/a01277_1a75cc18c556aceed92b649654b9ed6e33" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
