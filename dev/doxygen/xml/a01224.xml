<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01224" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::AutoDiffFE</compoundname>
    <basecompoundref prot="public" virt="non-virtual">FEImpl</basecompoundref>
    <includes refid="a00248" local="no">ikarus/finiteelements/autodiff/autodifffe.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEImpl</type>
      </param>
      <param>
        <type>bool</type>
        <declname>forceAutoDiff</declname>
        <defname>forceAutoDiff</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01224_1ac6509944238101aef666b1614df1d443" prot="public" static="no">
        <type>FEImpl</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::RealFE =  FEImpl</definition>
        <argsstring></argsstring>
        <name>RealFE</name>
        <qualifiedname>Ikarus::AutoDiffFE::RealFE</qualifiedname>
        <briefdescription>
<para>Type of the base finite element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="30" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01224_1ace1636b5cd13f380d0865682480e81b2" prot="public" static="no">
        <type>typename RealFE::BasisHandler</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::BasisHandler =  typename RealFE::BasisHandler</definition>
        <argsstring></argsstring>
        <name>BasisHandler</name>
        <qualifiedname>Ikarus::AutoDiffFE::BasisHandler</qualifiedname>
        <briefdescription>
<para>Type of the basis handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="31" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01224_1acb52d8adef8b40aabec280ecd1db60f6" prot="public" static="no">
        <type>typename RealFE::Base</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::Base =  typename RealFE::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::AutoDiffFE::Base</qualifiedname>
        <briefdescription>
<para>Type of the <ref refid="a01228" kindref="compound">FEBase</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="32" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01224_1a25b17a1ebebcf86b4994f735ae7b5281" prot="public" static="no">
        <type>typename Base::Traits</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::Traits =  typename Base::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::AutoDiffFE::Traits</qualifiedname>
        <briefdescription>
<para>Type traits for local view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="33" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01224_1ae985fb2fdb86d514700c4d57f03e97d5" prot="public" static="no">
        <type>typename Traits::LocalView</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::AutoDiffFE::LocalView</qualifiedname>
        <briefdescription>
<para>Type of the local view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="34" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01224_1af1d3fa6b651ee728bd39a33c3c3da250" prot="public" static="no">
        <type>typename Traits::Element</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::AutoDiffFE::Element</qualifiedname>
        <briefdescription>
<para>Type of the element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="35" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01224_1a4d0caa6dbe1dea19b8a265e7074cc45f" prot="public" static="no">
        <type>typename Traits::FERequirementType</type>
        <definition>using Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::AutoDiffFE::FERequirementType</qualifiedname>
        <briefdescription>
<para>Type of the Finite Element Requirements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="36" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01224_1a374cdfcdf85fcaba0114571ee4ef95d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; h) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01224_1a4d0caa6dbe1dea19b8a265e7074cc45f" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Calculate the matrix associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="44" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="44" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="a01224_1ae2d3a5600747957c5dfb84455c1e1648" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template VectorType&lt;&gt; g) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01224_1a4d0caa6dbe1dea19b8a265e7074cc45f" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Calculate the vector associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="86" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="86" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01224_1a26b7180649b487ae56f5c31e53276cd4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::calculateLocalSystem</definition>
        <argsstring>(const FERequirementType &amp;req, typename Traits::template MatrixType&lt;&gt; h, typename Traits::template VectorType&lt;&gt; g) const</argsstring>
        <name>calculateLocalSystem</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateLocalSystem</qualifiedname>
        <param>
          <type>const <ref refid="a01224_1a4d0caa6dbe1dea19b8a265e7074cc45f" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Calculate the local system associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="117" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="a01224_1a4092c3249a569470e2d9dfbd0af72749" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::AutoDiffFE::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01224_1a4d0caa6dbe1dea19b8a265e7074cc45f" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculate the scalar value associated with the finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>Finite Element Requirements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated scalar value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="131" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="131" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="a01224_1a8bd5af319955bc66a08c074858df2303" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01224_1ac6509944238101aef666b1614df1d443" kindref="member">RealFE</ref> &amp;</type>
        <definition>const RealFE &amp; Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::realFE</definition>
        <argsstring>() const</argsstring>
        <name>realFE</name>
        <qualifiedname>Ikarus::AutoDiffFE::realFE</qualifiedname>
        <briefdescription>
<para>Get the reference to the base finite element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the base finite element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="150" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="a01224_1a26248faa29dc3165140f3647f94c5d4a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;::AutoDiffFE</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>AutoDiffFE</name>
        <qualifiedname>Ikarus::AutoDiffFE::AutoDiffFE</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01224" kindref="compound">AutoDiffFE</ref> class. Forward the construction to the underlying element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Variadic template for constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Constructor arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="160" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="160" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01224" kindref="compound">AutoDiffFE</ref> class, an automatic differentiation wrapper for finite elements. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the original finite element, which does not implement the derivatives </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forceAutoDiff</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to force the use of automatic differentiation, even when the real element implements the derivatives. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>FEImpl</label>
      </node>
      <node id="1">
        <label>Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;</label>
        <link refid="a01224"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>FEImpl</label>
      </node>
      <node id="1">
        <label>Ikarus::AutoDiffFE&lt; FEImpl, forceAutoDiff &gt;</label>
        <link refid="a01224"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" line="27" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/autodiff/autodifffe.hh" bodystart="28" bodyend="162"/>
    <listofallmembers>
      <member refid="a01224_1a26248faa29dc3165140f3647f94c5d4a" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>AutoDiffFE</name></member>
      <member refid="a01224_1acb52d8adef8b40aabec280ecd1db60f6" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>Base</name></member>
      <member refid="a01224_1ace1636b5cd13f380d0865682480e81b2" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>BasisHandler</name></member>
      <member refid="a01224_1a26b7180649b487ae56f5c31e53276cd4" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateLocalSystem</name></member>
      <member refid="a01224_1a374cdfcdf85fcaba0114571ee4ef95d0" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateMatrix</name></member>
      <member refid="a01224_1a4092c3249a569470e2d9dfbd0af72749" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateScalar</name></member>
      <member refid="a01224_1ae2d3a5600747957c5dfb84455c1e1648" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>calculateVector</name></member>
      <member refid="a01224_1af1d3fa6b651ee728bd39a33c3c3da250" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>Element</name></member>
      <member refid="a01224_1a4d0caa6dbe1dea19b8a265e7074cc45f" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>FERequirementType</name></member>
      <member refid="a01224_1ae985fb2fdb86d514700c4d57f03e97d5" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>LocalView</name></member>
      <member refid="a01224_1ac6509944238101aef666b1614df1d443" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>RealFE</name></member>
      <member refid="a01224_1a8bd5af319955bc66a08c074858df2303" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>realFE</name></member>
      <member refid="a01224_1a25b17a1ebebcf86b4994f735ae7b5281" prot="public" virt="non-virtual"><scope>Ikarus::AutoDiffFE</scope><name>Traits</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
