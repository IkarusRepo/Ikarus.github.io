<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01295" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::LinearElastic</compoundname>
    <basecompoundref refid="a01227" prot="public" virt="non-virtual">Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;</basecompoundref>
    <basecompoundref refid="a01303" prot="public" virt="non-virtual">Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</basecompoundref>
    <basecompoundref refid="a01299" prot="public" virt="non-virtual">Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</basecompoundref>
    <includes refid="a02455" local="no">ikarus/finiteelements/mechanics/linearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename BH</type>
      </param>
      <param>
        <type>typename FER</type>
        <defval><ref refid="a01247" kindref="compound">FERequirements</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useFlat</declname>
        <defname>useFlat</defname>
        <defval>true</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01295_1a40eee3838220cccab2e15e7047991988" prot="public" static="no">
        <type><ref refid="a01227" kindref="compound">FEBase</ref>&lt; BH, useFlat, FER, useEigenRef &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::Base =  FEBase&lt;BH, useFlat, FER, useEigenRef&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::LinearElastic::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="53" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a950078f863ac0e34a6633eaa6efb16e9" prot="public" static="no">
        <type>typename <ref refid="a01227_1ac5fdc9a8e9d4a7d670df89d397129588" kindref="member">Base::Traits</ref></type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::Traits =  typename Base::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::LinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="54" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a660143a4c32e9768e75cbad2365c3f7b" prot="public" static="no">
        <type>typename Traits::BasisHandler</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::BasisHandler =  typename Traits::BasisHandler</definition>
        <argsstring></argsstring>
        <name>BasisHandler</name>
        <qualifiedname>Ikarus::LinearElastic::BasisHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="55" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a814b5f30cae83d0bf86cb814e1d1b087" prot="public" static="no">
        <type>typename Traits::FlatBasis</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::FlatBasis =  typename Traits::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::LinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="56" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" prot="public" static="no">
        <type>typename Traits::FERequirementType</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::FERequirementType =  typename Traits::FERequirementType</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::LinearElastic::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="57" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a5522b3975f13520030ce71dd68ad9b84" prot="public" static="no">
        <type>typename Traits::LocalView</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::LinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="58" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a8b5becbccef0dc42423cd76c27bef5b8" prot="public" static="no">
        <type>typename Traits::Geometry</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::Geometry =  typename Traits::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::LinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="59" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1ad517cec2661544d1be2525a529f91432" prot="public" static="no">
        <type>typename Traits::GridView</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::LinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="60" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a042a0043867c47d57faf6db8f5b96de0" prot="public" static="no">
        <type>typename Traits::Element</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::LinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="61" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a827cb2b8d4b745e07db3955c25c35f4b" prot="public" static="no">
        <type><ref refid="a01303" kindref="compound">Volume</ref>&lt; <ref refid="a01295" kindref="compound">LinearElastic</ref>, <ref refid="a01295_1a950078f863ac0e34a6633eaa6efb16e9" kindref="member">Traits</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::VolumeType =  Volume&lt;LinearElastic, Traits&gt;</definition>
        <argsstring></argsstring>
        <name>VolumeType</name>
        <qualifiedname>Ikarus::LinearElastic::VolumeType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="62" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a1fc3d5fa49ff4f5c1e46c9f0844afc05" prot="public" static="no">
        <type><ref refid="a01299" kindref="compound">Traction</ref>&lt; <ref refid="a01295" kindref="compound">LinearElastic</ref>, <ref refid="a01295_1a950078f863ac0e34a6633eaa6efb16e9" kindref="member">Traits</ref> &gt;</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::TractionType =  Traction&lt;LinearElastic, Traits&gt;</definition>
        <argsstring></argsstring>
        <name>TractionType</name>
        <qualifiedname>Ikarus::LinearElastic::TractionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="63" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01295_1a91770d9f8e1c7c06007d91ac3999999e" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="a01295_1a5522b3975f13520030ce71dd68ad9b84" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().localBasis())</type>
        <definition>using Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::LinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="65" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01227_1a0475c47f864b7ac2a19c69c679e565ff" prot="public" static="no">
        <type>typename Traits::GlobalIndex</type>
        <definition>using Ikarus::FEBase&lt; BH, useFlat, FERequirements&lt;&gt; , useEigenRef &gt;::GlobalIndex =  typename Traits::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" line="34" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01227_1ae72a95377bf3b1c256d5429f37b0f504" prot="public" static="no">
        <type>typename Traits::Element</type>
        <definition>using Ikarus::FEBase&lt; BH, useFlat, FERequirements&lt;&gt; , useEigenRef &gt;::GridElement =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>GridElement</name>
        <qualifiedname>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::GridElement</qualifiedname>
        <briefdescription>
<para>Type of the grid element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" line="35" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01295_1abdafebbb8089d2c0a9ec5ff9ec30e87e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::LinearElastic::myDim</qualifiedname>
        <initializer>= Traits::mydim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="64" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="64" bodyend="-1"/>
        <referencedby refid="a01295_1ab108d5374fab0ec824376ebf0ecb09f5" compoundref="a02455" startline="185" endline="205">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01295_1af75f290aad4b52072053aa027d4b2f0d" compoundref="a02455" startline="265" endline="288">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01295_1a9b8a8b22100c74f236bc974262db042a" compoundref="a02455" startline="140" endline="145">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::materialTangent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01303_1a073fb2d3afae0bd3e0afe1c2534f9afd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::worldDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="25" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01299_1a1d2ad110e77cf497bc88ac1a8735fc97" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::worldDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="29" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01295_1aeed512e9ac2bb074acd713a9f53a3a49" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="a01295_1a8b5becbccef0dc42423cd76c27bef5b8" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::LinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="230" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01295_1a1905a4f930655703f094011fa116df5a" prot="private" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="a01295_1a91770d9f8e1c7c06007d91ac3999999e" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::localBasis_</definition>
        <argsstring></argsstring>
        <name>localBasis_</name>
        <qualifiedname>Ikarus::LinearElastic::localBasis_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="231" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01295_1ad6e4fc735e3537c94643edb17fe55c67" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::emod_</definition>
        <argsstring></argsstring>
        <name>emod_</name>
        <qualifiedname>Ikarus::LinearElastic::emod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="232" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01295_1a97d4d1a02fdc94d0650488a32939f467" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>Ikarus::LinearElastic::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="233" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01295_1a886b4cc237c85655d0c1a19239bdfd15" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::numberOfNodes_</definition>
        <argsstring></argsstring>
        <name>numberOfNodes_</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="234" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01295_1a1814a346b8b38086aa421642cec8a9da" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <qualifiedname>Ikarus::LinearElastic::order_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="235" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01295_1a3089737b2164de05fb2604d55bce0e01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumeLoad</type>
            <defval><ref refid="a01483" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
          <param>
            <type>typename NeumannBoundaryLoad</type>
            <defval><ref refid="a01483" kindref="compound">utils::LoadDefault</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::LinearElastic</definition>
        <argsstring>(const BasisHandler &amp;basisHandler, const typename LocalView::Element &amp;element, double emod, double nu, VolumeLoad volumeLoad={}, const BoundaryPatch&lt; GridView &gt; *neumannBoundary=nullptr, NeumannBoundaryLoad neumannBoundaryLoad={})</argsstring>
        <name>LinearElastic</name>
        <qualifiedname>Ikarus::LinearElastic::LinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a660143a4c32e9768e75cbad2365c3f7b" kindref="member">BasisHandler</ref> &amp;</type>
          <declname>basisHandler</declname>
        </param>
        <param>
          <type>const typename LocalView::Element &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>double</type>
          <declname>emod</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>VolumeLoad</type>
          <declname>volumeLoad</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const BoundaryPatch&lt; <ref refid="a01295_1ad517cec2661544d1be2525a529f91432" kindref="member">GridView</ref> &gt; *</type>
          <declname>neumannBoundary</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>NeumannBoundaryLoad</type>
          <declname>neumannBoundaryLoad</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01295" kindref="compound">LinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the volume load function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NeumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the Neumann boundary load function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>basisHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis handler for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element for which the finite element is constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emod</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volumeLoad</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a01303" kindref="compound">Volume</ref> load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neumannBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary patch (default is nullptr). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neumannBoundaryLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Neumann boundary load function (default is LoadDefault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="81" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="81" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1a6526cbcd08616598920cf2286ff041bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::displacementFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::LinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the displacement function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="114" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="114" bodyend="120"/>
        <referencedby refid="a01295_1a2bd57b0020bc5144908df7d582533cc7" compoundref="a02455" startline="239" endline="262">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01295_1a950067ec358a96fdff38c38ac6ac6ca4" compoundref="a02455" startline="130" endline="133">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01295_1a950067ec358a96fdff38c38ac6ac6ca4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::strainFunction</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::LinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the strain function for the given FERequirementType and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="130" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="130" bodyend="133"/>
        <referencedby refid="a01295_1aa624dfb73fb0e733821bb63734718b04" compoundref="a02455" startline="217" endline="227">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateAt</referencedby>
        <referencedby refid="a01295_1ab108d5374fab0ec824376ebf0ecb09f5" compoundref="a02455" startline="185" endline="205">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01295_1a2bd57b0020bc5144908df7d582533cc7" compoundref="a02455" startline="239" endline="262">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01295_1af75f290aad4b52072053aa027d4b2f0d" compoundref="a02455" startline="265" endline="288">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01295_1a9b8a8b22100c74f236bc974262db042a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::materialTangent</definition>
        <argsstring>() const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangent</qualifiedname>
        <briefdescription>
<para>Gets the material tangent matrix for the linear elastic material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The material tangent matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="140" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="140" bodyend="145"/>
        <referencedby refid="a01295_1aa624dfb73fb0e733821bb63734718b04" compoundref="a02455" startline="217" endline="227">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateAt</referencedby>
        <referencedby refid="a01295_1ab108d5374fab0ec824376ebf0ecb09f5" compoundref="a02455" startline="185" endline="205">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrix</referencedby>
        <referencedby refid="a01295_1a2bd57b0020bc5144908df7d582533cc7" compoundref="a02455" startline="239" endline="262">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01295_1af75f290aad4b52072053aa027d4b2f0d" compoundref="a02455" startline="265" endline="288">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01295_1a33d2cf28926eaf2e46e3231d750b4e82" compoundref="a02455" startline="153" endline="155">Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::materialTangentFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01295_1a33d2cf28926eaf2e46e3231d750b4e82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::materialTangentFunction</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>materialTangentFunction</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangentFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Gets the material tangent function for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="153" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1a246ca86f533ad0ceadb983a4dbd4ae80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01295_1a8b5becbccef0dc42423cd76c27bef5b8" kindref="member">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>Ikarus::LinearElastic::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="157" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1ad1604e983d8de31a5ca747c35bf509f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::numberOfNodes</definition>
        <argsstring>() const</argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="158" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1ad2da7f4caadbc6df50553d71900b3bb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::LinearElastic::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="159" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1ababbfa85d0473cf7a7bd38b8f1351e1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalar</definition>
        <argsstring>(const FERequirementType &amp;par) const</argsstring>
        <name>calculateScalar</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalar</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar energy for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The scalar energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="167" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1a7ca7b43c3fe2c59cf64ff7a818025d63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVector</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt;&gt; force) const</argsstring>
        <name>calculateVector</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVector</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt;&gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates the vector force for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the calculated force. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="175" column="15" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1ab108d5374fab0ec824376ebf0ecb09f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateMatrix</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K) const</argsstring>
        <name>calculateMatrix</name>
        <qualifiedname>Ikarus::LinearElastic::calculateMatrix</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Calculates the matrix stiffness for the given FERequirementType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store the calculated stiffness. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="185" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="185" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1aa624dfb73fb0e733821bb63734718b04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00312_1ga531be167e924b749eb8b4ccc7f1c18c9" kindref="member">ResultType</ref></type>
            <declname>resType</declname>
            <defname>resType</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateAt</definition>
        <argsstring>(const FERequirementType &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local) const</argsstring>
        <name>calculateAt</name>
        <qualifiedname>Ikarus::LinearElastic::calculateAt</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01487" kindref="compound">Dune::FieldVector</ref>&lt; double, Traits::mydim &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
<para>Calculates a requested result at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The FERequirementType object holding the global solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated result</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>resType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requested result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="217" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="217" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="a01227_1a61ccfd550c88670bb02528e2ef00d6fd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t Ikarus::FEBase&lt; BH, useFlat, FERequirements&lt;&gt; , useEigenRef &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::size</qualifiedname>
        <briefdescription>
<para>Get the size of the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" line="57" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="a01227_1a986d3b0d39a10f702bddff51023d38ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01227_1ae72a95377bf3b1c256d5429f37b0f504" kindref="member">GridElement</ref> &amp;</type>
        <definition>const GridElement &amp; Ikarus::FEBase&lt; BH, useFlat, FERequirements&lt;&gt; , useEigenRef &gt;::gridElement</definition>
        <argsstring>() const</argsstring>
        <name>gridElement</name>
        <qualifiedname>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::gridElement</qualifiedname>
        <briefdescription>
<para>Get the grid element associated with the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The grid element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" line="63" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="a01227_1a53a30773e643a5bc8709ae74a2ba68d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01295_1a5522b3975f13520030ce71dd68ad9b84" kindref="member">LocalView</ref> &amp;</type>
        <definition>const LocalView &amp; Ikarus::FEBase&lt; BH, useFlat, FERequirements&lt;&gt; , useEigenRef &gt;::localView</definition>
        <argsstring>() const</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the const reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The const reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" line="69" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01227_1acdf2172a6e355e863baacd9fbc757f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01295_1a5522b3975f13520030ce71dd68ad9b84" kindref="member">LocalView</ref> &amp;</type>
        <definition>LocalView &amp; Ikarus::FEBase&lt; BH, useFlat, FERequirements&lt;&gt; , useEigenRef &gt;::localView</definition>
        <argsstring>()</argsstring>
        <name>localView</name>
        <qualifiedname>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::localView</qualifiedname>
        <briefdescription>
<para>Get the reference to the local view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the local view. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" line="75" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/febase.hh" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01295_1a2bd57b0020bc5144908df7d582533cc7" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="239" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="239" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="a01295_1af75f290aad4b52072053aa027d4b2f0d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="265" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="265" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="a01303_1a7ec1326b708d8c08fee05ca7b601f997" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="73" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="a01303_1a9b91a057a51ab4487656d8bd94fdd234" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="91" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="91" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="a01303_1aaed2462e36f9d119ff5c60867ebcaf62" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" line="112" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/volume.hh" bodystart="112" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="a01299_1a2576d38cb79bb0b5bf59f433fa7c1633" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::calculateScalarImpl</definition>
        <argsstring>(const FERequirementType &amp;par, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const -&gt; ST</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="81" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="81" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="a01299_1aabcfd5d855e2230fe90abb12a1ba8d2b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::calculateVectorImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template VectorType&lt; ST &gt; force, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ST &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Integration rule along the boundary</para>
<para>The value of the local function wrt the i-th coeff</para>
<para>Value of the Neumann data at the current position</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="115" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="115" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="a01299_1a38ba7822f8f38691c80a0b607e488d03" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt; , FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits  &gt;::calculateMatrixImpl</definition>
        <argsstring>(const FERequirementType &amp;par, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" kindref="member">FERequirementType</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; const Eigen::VectorX&lt; ST &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" line="149" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/loads/traction.hh" bodystart="149" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01295" kindref="compound">LinearElastic</ref> class represents a linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>BH</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis handler type for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FER</parametername>
</parameternamelist>
<parameterdescription>
<para>The requirements for the finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag indicating whether to use <ref refid="a00333" kindref="compound">Eigen</ref> references. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useFlat</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating if the type of the underlying basis is of the flat or the untouched version. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;</label>
        <link refid="a01227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; BH, true, FERequirements&lt;&gt;, false &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::FEBase&lt; BH, useFlat, FER, useEigenRef &gt;</label>
        <link refid="a01227"/>
      </node>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01295"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::Traction&lt; DFE, Traits &gt;</label>
        <link refid="a01299"/>
      </node>
      <node id="5">
        <label>Ikarus::Volume&lt; DFE, Traits &gt;</label>
        <link refid="a01303"/>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01299"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01303"/>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;</label>
        <link refid="a01227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; BH, true, FERequirements&lt;&gt;, false &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::FEBase&lt; BH, useFlat, FER, useEigenRef &gt;</label>
        <link refid="a01227"/>
      </node>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; BH, FER, useEigenRef, useFlat &gt;</label>
        <link refid="a01295"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::Traction&lt; DFE, Traits &gt;</label>
        <link refid="a01299"/>
      </node>
      <node id="5">
        <label>Ikarus::Volume&lt; DFE, Traits &gt;</label>
        <link refid="a01303"/>
      </node>
      <node id="6">
        <label>Ikarus::Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01299"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</label>
        <link refid="a01303"/>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="46" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="51" bodyend="289"/>
    <listofallmembers>
      <member refid="a01295_1a40eee3838220cccab2e15e7047991988" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Base</name></member>
      <member refid="a01295_1a660143a4c32e9768e75cbad2365c3f7b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>BasisHandler</name></member>
      <member refid="a01295_1aa624dfb73fb0e733821bb63734718b04" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateAt</name></member>
      <member refid="a01295_1ab108d5374fab0ec824376ebf0ecb09f5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateMatrix</name></member>
      <member refid="a01303_1aaed2462e36f9d119ff5c60867ebcaf62" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01299_1a38ba7822f8f38691c80a0b607e488d03" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01295_1ababbfa85d0473cf7a7bd38b8f1351e1d" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalar</name></member>
      <member refid="a01295_1a2bd57b0020bc5144908df7d582533cc7" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01303_1a7ec1326b708d8c08fee05ca7b601f997" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01299_1a2576d38cb79bb0b5bf59f433fa7c1633" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01295_1a7ca7b43c3fe2c59cf64ff7a818025d63" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVector</name></member>
      <member refid="a01295_1af75f290aad4b52072053aa027d4b2f0d" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01303_1a9b91a057a51ab4487656d8bd94fdd234" prot="protected" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01299_1aabcfd5d855e2230fe90abb12a1ba8d2b" prot="protected" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01295_1a6526cbcd08616598920cf2286ff041bf" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>displacementFunction</name></member>
      <member refid="a01295_1a042a0043867c47d57faf6db8f5b96de0" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Element</name></member>
      <member refid="a01295_1ad6e4fc735e3537c94643edb17fe55c67" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>emod_</name></member>
      <member refid="a01227_1a713a999716e92ec0f07a17e2cc6fc2af" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FEBase</name></member>
      <member refid="a01295_1a68a72cb2746c3c4cac9ee3878d5d548e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FERequirementType</name></member>
      <member refid="a01295_1a814b5f30cae83d0bf86cb814e1d1b087" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FlatBasis</name></member>
      <member refid="a01295_1aeed512e9ac2bb074acd713a9f53a3a49" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geo_</name></member>
      <member refid="a01295_1a8b5becbccef0dc42423cd76c27bef5b8" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Geometry</name></member>
      <member refid="a01295_1a246ca86f533ad0ceadb983a4dbd4ae80" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geometry</name></member>
      <member refid="a01227_1a0475c47f864b7ac2a19c69c679e565ff" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GlobalIndex</name></member>
      <member refid="a01227_1ae72a95377bf3b1c256d5429f37b0f504" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridElement</name></member>
      <member refid="a01227_1a986d3b0d39a10f702bddff51023d38ef" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>gridElement</name></member>
      <member refid="a01295_1ad517cec2661544d1be2525a529f91432" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridView</name></member>
      <member refid="a01295_1a3089737b2164de05fb2604d55bce0e01" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LinearElastic</name></member>
      <member refid="a01295_1a1905a4f930655703f094011fa116df5a" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localBasis_</name></member>
      <member refid="a01295_1a91770d9f8e1c7c06007d91ac3999999e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="a01295_1a5522b3975f13520030ce71dd68ad9b84" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalView</name></member>
      <member refid="a01227_1a53a30773e643a5bc8709ae74a2ba68d3" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="a01227_1acdf2172a6e355e863baacd9fbc757f8a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localView</name></member>
      <member refid="a01295_1a9b8a8b22100c74f236bc974262db042a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangent</name></member>
      <member refid="a01295_1a33d2cf28926eaf2e46e3231d750b4e82" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangentFunction</name></member>
      <member refid="a01295_1abdafebbb8089d2c0a9ec5ff9ec30e87e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>myDim</name></member>
      <member refid="a01295_1a97d4d1a02fdc94d0650488a32939f467" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>nu_</name></member>
      <member refid="a01295_1ad1604e983d8de31a5ca747c35bf509f5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="a01295_1a886b4cc237c85655d0c1a19239bdfd15" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes_</name></member>
      <member refid="a01295_1ad2da7f4caadbc6df50553d71900b3bb6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order</name></member>
      <member refid="a01295_1a1814a346b8b38086aa421642cec8a9da" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order_</name></member>
      <member refid="a01227_1a61ccfd550c88670bb02528e2ef00d6fd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>size</name></member>
      <member refid="a01295_1a950067ec358a96fdff38c38ac6ac6ca4" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>strainFunction</name></member>
      <member refid="a01299_1a3fa13c11a3d654ba3800c233856574a6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traction</name></member>
      <member refid="a01295_1a1fc3d5fa49ff4f5c1e46c9f0844afc05" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>TractionType</name></member>
      <member refid="a01295_1a950078f863ac0e34a6633eaa6efb16e9" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traits</name></member>
      <member refid="a01303_1af67372d55f4036736affad41565639bd" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Volume</name></member>
      <member refid="a01295_1a827cb2b8d4b745e07db3955c25c35f4b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>VolumeType</name></member>
      <member refid="a01303_1a073fb2d3afae0bd3e0afe1c2534f9afd" prot="public" virt="non-virtual" ambiguityscope="Volume&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
      <member refid="a01299_1a1d2ad110e77cf497bc88ac1a8735fc97" prot="public" virt="non-virtual" ambiguityscope="Traction&lt; LinearElastic&lt; BH, FERequirements&lt;&gt;, false, true &gt;, FEBase&lt; BH, true, FERequirements&lt;&gt;, false &gt;::Traits &gt;::"><scope>Ikarus::LinearElastic</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
