<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01612" kind="concept">
    <compoundname>Ikarus::MaterialParameterTuple</compoundname>
    <includes refid="a00173" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <templateparamlist>
      <param>
        <type>typename MaterialParameter</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename MaterialParameter&gt;
concept <ref refid="a01612" kindref="compound">Ikarus::MaterialParameterTuple</ref> =  std::is_same_v&lt;MaterialParameter, YoungsModulusAndPoissonsRatio&gt; or
                                 std::is_same_v&lt;MaterialParameter, YoungsModulusAndBulkModulus&gt; or
                                 std::is_same_v&lt;MaterialParameter, YoungsModulusAndLamesFirstParameter&gt; or
                                 std::is_same_v&lt;MaterialParameter, BulkModulusAndLamesFirstParameter&gt; or
                                 std::is_same_v&lt;MaterialParameter, LamesFirstParameterAndShearModulus&gt; or
                                 std::is_same_v&lt;MaterialParameter, YoungsModulusAndShearModulus&gt;    </initializer>
    <briefdescription>
<para>Concept for checking if a type is a valid material parameter tuple. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MaterialParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/physicshelper.hh" line="107" column="1"/>
  </compounddef>
</doxygen>
