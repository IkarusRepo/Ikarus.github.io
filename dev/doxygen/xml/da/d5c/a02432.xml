<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="da/d5c/a02432" kind="file" language="C++">
    <compoundname>finiteelements/mechanics/kirchhoffloveshell.hh</compoundname>
    <includes local="no">dune/fufem/boundarypatch.hh</includes>
    <includes local="no">dune/geometry/quadraturerules.hh</includes>
    <includes local="no">dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh</includes>
    <includes local="no">dune/localfefunctions/impl/standardLocalFunction.hh</includes>
    <includes local="no">dune/localfefunctions/manifolds/realTuple.hh</includes>
    <includes refid="d3/d00/a00113" local="no">ikarus/finiteelements/febases/powerbasisfe.hh</includes>
    <includes refid="dc/dfe/a00125" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="d6/db8/a00158" local="no">ikarus/finiteelements/mechanics/materials.hh</includes>
    <includes refid="db/ddf/a00164" local="no">ikarus/finiteelements/mechanics/membranestrains.hh</includes>
    <includes refid="df/d6a/a00119" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includedby refid="d1/de1/a02435" local="no">kirchhoffloveshell.hh</includedby>
    <incdepgraph>
      <node id="7">
        <label>ikarus/finiteelements/febases/powerbasisfe.hh</label>
        <link refid="d3/d00/a00113"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="dc/dfe/a00125"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="df/dc8/a00122"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kirchhoffloveshell.hh</label>
        <link refid="da/d5c/a02432"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/finiteelements/mechanics/materials.hh</label>
        <link refid="d6/db8/a00158"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/finiteelements/mechanics/materials/linearelasticity.hh</label>
        <link refid="da/d1e/a00149"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>ikarus/finiteelements/mechanics/materials/neohooke.hh</label>
        <link refid="d7/d9a/a00152"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="d5/db1/a00140"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>svk.hh</label>
        <link refid="de/d76/a00134"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>tags.hh</label>
        <link refid="d9/db6/a00146"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ikarus/finiteelements/mechanics/materials/vanishingstress.hh</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>ikarus/finiteelements/mechanics/membranestrains.hh</label>
        <link refid="db/ddf/a00164"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="d1/da8/a00230"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="dd/d52/a00221"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="dc/d9a/a00218"/>
      </node>
      <node id="9">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="db/db2/a00020"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="d5/d16/a00029"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ikarus/utils/math.hh</label>
        <link refid="dd/d32/a00041"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="da/d45/a00011"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="d5/df1/a00206"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="dc/d57/a00194"/>
      </node>
      <node id="35">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/utils/traits.hh</label>
        <link refid="d9/d2e/a00056"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Eigen/Core</label>
      </node>
      <node id="16">
        <label>Eigen/Sparse</label>
      </node>
      <node id="54">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="47">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="10">
        <label>concepts</label>
      </node>
      <node id="25">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="42">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="62">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="20">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="39">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="45">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="2">
        <label>dune/fufem/boundarypatch.hh</label>
      </node>
      <node id="14">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="15">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="3">
        <label>dune/geometry/quadraturerules.hh</label>
      </node>
      <node id="46">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="4">
        <label>dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh</label>
      </node>
      <node id="5">
        <label>dune/localfefunctions/impl/standardLocalFunction.hh</label>
      </node>
      <node id="6">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="60">
        <label>functional</label>
      </node>
      <node id="22">
        <label>iosfwd</label>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="52">
        <label>memory</label>
      </node>
      <node id="36">
        <label>numeric</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="44">
        <label>random</label>
      </node>
      <node id="37">
        <label>ranges</label>
      </node>
      <node id="24">
        <label>set</label>
      </node>
      <node id="19">
        <label>tuple</label>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="38">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="34">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="53">
        <label>variant</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>kirchhoffloveshell.hh</label>
        <link refid="da/d5c/a02432"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kirchhoffloveshell.hh</label>
        <link refid="d1/de1/a02435"/>
      </node>
    </invincdepgraph>
    <innerclass refid="da/dd8/a01265" prot="public">Ikarus::KirchhoffLoveShell</innerclass>
    <innerclass refid="d6/d16/a01269" prot="public">Ikarus::KirchhoffLoveShell::KinematicVariables</innerclass>
    <innernamespace refid="d9/d0d/a00298">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the KirchhoffLoveShell class for Kirchhoff-Love shell elements in <ref refid="d9/d0d/a00298" kindref="compound">Ikarus</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2024<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/fufem/boundarypatch.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/geometry/quadraturerules.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/impl/standardLocalFunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/manifolds/realTuple.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d3/d00/a00113" kindref="compound">ikarus/finiteelements/febases/powerbasisfe.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dc/dfe/a00125" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d6/db8/a00158" kindref="compound">ikarus/finiteelements/mechanics/materials.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db/ddf/a00164" kindref="compound">ikarus/finiteelements/mechanics/membranestrains.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="df/d6a/a00119" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/d0d/a00298" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FERequirements_<sp/>=<sp/>FERequirements&lt;&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useEigenRef<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="37" refid="da/dd8/a01265" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265" kindref="compound">KirchhoffLoveShell</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/d10/a01197" kindref="compound">PowerBasisFE</ref>&lt;typename<sp/>Basis_::FlatBasis&gt;<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="da/dd8/a01265_1aff08f23fc6273613460eb026e8600b55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1aff08f23fc6273613460eb026e8600b55" kindref="member">Basis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Basis_;</highlight></codeline>
<codeline lineno="40" refid="da/dd8/a01265_1a01bddbf8b0a84653e765e254592cbe1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1a01bddbf8b0a84653e765e254592cbe1c" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="d1/d3b/a01429_1ab9e57abdb5f4abeb030f6122df75849e" kindref="member">Basis::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="41" refid="da/dd8/a01265_1aeaf83b598c252b329eca52e852768e0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d4/d10/a01197" kindref="compound">BasePowerFE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d4/d10/a01197" kindref="compound">PowerBasisFE&lt;FlatBasis&gt;</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>globalIndices<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FERequirements_;</highlight></codeline>
<codeline lineno="43" refid="da/dd8/a01265_1af72a994d64102ab7b0988eca829ddaa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/da1/a01233" kindref="compound">ResultRequirementsType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d6/da1/a01233" kindref="compound">ResultRequirements&lt;FERequirementType&gt;</ref>;</highlight></codeline>
<codeline lineno="44" refid="da/dd8/a01265_1a1c7174db95cf392d498ed6a79e54004a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1a1c7174db95cf392d498ed6a79e54004a" kindref="member">LocalView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FlatBasis::LocalView;</highlight></codeline>
<codeline lineno="45" refid="da/dd8/a01265_1a665a7d8755b3ca37133a8fdfecbb5e53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1a665a7d8755b3ca37133a8fdfecbb5e53" kindref="member">Element</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element;</highlight></codeline>
<codeline lineno="46" refid="da/dd8/a01265_1a53ff5e7dfc6018836c490d40160fa901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1a53ff5e7dfc6018836c490d40160fa901" kindref="member">Geometry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Element::Geometry;</highlight></codeline>
<codeline lineno="47" refid="da/dd8/a01265_1ab0f57da5f1f7d65ae88278f4ee6e8870" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="da/dd8/a01265_1ab0f57da5f1f7d65ae88278f4ee6e8870" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FlatBasis::GridView;</highlight></codeline>
<codeline lineno="48" refid="da/dd8/a01265_1a6419fdc9d308eda0155d587bf0d55c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="db/d4b/a01309" kindref="compound">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="db/d4b/a01309" kindref="compound">TraitsFromLocalView&lt;LocalView, useEigenRef&gt;</ref>;</highlight></codeline>
<codeline lineno="49" refid="da/dd8/a01265_1a22273fa4834535f534e9dfab377aec83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a22273fa4834535f534e9dfab377aec83" kindref="member">myDim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="db/d4b/a01309_1ab29f61e7d71697962fe41642d683f9f5" kindref="member">Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="50" refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="db/d4b/a01309_1a47ccda97cc8e04f87be6d2c3a165ba98" kindref="member">Traits::worlddim</ref>;</highlight></codeline>
<codeline lineno="51" refid="da/dd8/a01265_1a28615c16c3294908775337438007dbff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a28615c16c3294908775337438007dbff" kindref="member">membraneStrainSize</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="52" refid="da/dd8/a01265_1aff4ce56707d43655851a80dc37f3f19b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1aff4ce56707d43655851a80dc37f3f19b" kindref="member">bendingStrainSize</ref><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="64" refid="d6/d16/a01269" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d6/d16/a01269" kindref="compound">KinematicVariables</ref><sp/>{</highlight></codeline>
<codeline lineno="65" refid="d6/d16/a01269_1ad316c22f4d476201d66dd916ce51579a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/><ref refid="d6/d16/a01269_1ad316c22f4d476201d66dd916ce51579a" kindref="member">C</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="d6/d16/a01269_1adb0ea578820d6324bd697abf0103ceaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ScalarType&gt;<sp/><ref refid="d6/d16/a01269_1adb0ea578820d6324bd697abf0103ceaf" kindref="member">epsV</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="d6/d16/a01269_1a385e50cb48b7f29f352913ef01e857ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ScalarType&gt;<sp/><ref refid="d6/d16/a01269_1a385e50cb48b7f29f352913ef01e857ff" kindref="member">kappaV</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="d6/d16/a01269_1a448b848a807d314c3d9b1a07bea0cc9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>2,<sp/>3&gt;<sp/><ref refid="d6/d16/a01269_1a448b848a807d314c3d9b1a07bea0cc9e" kindref="member">j</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="d6/d16/a01269_1a0ab087b4fe7a12f7cad0a0f2f1ab6bd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>2,<sp/>3&gt;<sp/><ref refid="d6/d16/a01269_1a0ab087b4fe7a12f7cad0a0f2f1ab6bd3" kindref="member">J</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="d6/d16/a01269_1a5afc75ec69c2154ac00733db1fe5ea6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix3&lt;ScalarType&gt;<sp/><ref refid="d6/d16/a01269_1a5afc75ec69c2154ac00733db1fe5ea6f" kindref="member">h</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="d6/d16/a01269_1ad8bae2aebefb88c7d7888b14a58e0c22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix3&lt;double&gt;<sp/><ref refid="d6/d16/a01269_1ad8bae2aebefb88c7d7888b14a58e0c22" kindref="member">H</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="d6/d16/a01269_1acd947bf70bae3f7ec5f58e679b19619e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ScalarType&gt;<sp/><ref refid="d6/d16/a01269_1acd947bf70bae3f7ec5f58e679b19619e" kindref="member">a3N</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="d6/d16/a01269_1a333dd0e23eb3fe1606a281a4f4620b05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ScalarType&gt;<sp/><ref refid="d6/d16/a01269_1a333dd0e23eb3fe1606a281a4f4620b05" kindref="member">a3</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VolumeLoad<sp/>=<sp/>utils::LoadDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeumannBoundaryLoad<sp/>=<sp/>utils::LoadDefault&gt;</highlight></codeline>
<codeline lineno="93" refid="da/dd8/a01265_1ae749b820da13eb29aafad5f0b704ea39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1ae749b820da13eb29aafad5f0b704ea39" kindref="member">KirchhoffLoveShell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1aff08f23fc6273613460eb026e8600b55" kindref="member">Basis</ref>&amp;<sp/>globalBasis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::Element&amp;<sp/>element,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>emod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thickness,<sp/>VolumeLoad<sp/>p_volumeLoad<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/>p_neumannBoundary<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeumannBoundaryLoad<sp/>p_neumannBoundaryLoad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="da/dd8/a01265_1aeaf83b598c252b329eca52e852768e0c" kindref="member">BasePowerFE</ref>(globalBasis.flat(),<sp/>element),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref>{p_neumannBoundary},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a4b65a8b484bd3c7fb306557dc8e63848" kindref="member">emod_</ref>{emod},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" kindref="member">nu_</ref>{nu},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref>{thickness}<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().bind(element);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>first_child<sp/>=<sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().tree().child(0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/><sp/><sp/><sp/>=<sp/>first_child.finiteElement();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>fe.size();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a4a66b053a96b697a9f11efaf1376b0e7" kindref="member">dispAtNodes</ref>.resize(fe.size());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>(fe.localBasis().order());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref><sp/>=<sp/>Dune::CachedLocalBasis(fe.localBasis());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().getQuadratureRule(<ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>);<sp/>})</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().impl().isTrimmed())</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.bind(this-&gt;localView().element().impl().getQuadratureRule(<ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>),<sp/>Dune::bindDerivatives(0,<sp/>1,<sp/>2));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/><ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1,<sp/>2));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().type(),<sp/><ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1,<sp/>2));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;VolumeLoad,<sp/>utils::LoadDefault&gt;)<sp/><ref refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" kindref="member">volumeLoad</ref><sp/>=<sp/>p_volumeLoad;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!std::is_same_v&lt;NeumannBoundaryLoad,<sp/>utils::LoadDefault&gt;)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref><sp/>=<sp/>p_neumannBoundaryLoad;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(((not<sp/>p_neumannBoundary<sp/>and<sp/>not<sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>)<sp/>or<sp/>(p_neumannBoundary<sp/>and<sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>you<sp/>pass<sp/>a<sp/>Neumann<sp/>boundary<sp/>you<sp/>should<sp/>also<sp/>pass<sp/>the<sp/>function<sp/>for<sp/>the<sp/>Neumann<sp/>load!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="139" refid="da/dd8/a01265_1a7e42edf0686f54efc607942eb1f9be44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a7e42edf0686f54efc607942eb1f9be44" kindref="member">getDisplacementFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.getGlobalSolution(<ref refid="d3/d58/a00285_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">FESolutions::displacement</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_shared&lt;const<sp/>typename<sp/>GridView::GridView::template<sp/>Codim&lt;0&gt;::Entity::Geometry&gt;(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().geometry());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::BlockVector&lt;Dune::RealTuple&lt;ScalarType,<sp/>Traits::worlddim&gt;&gt;<sp/>disp(<ref refid="da/dd8/a01265_1a4a66b053a96b697a9f11efaf1376b0e7" kindref="member">dispAtNodes</ref>.size());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>disp.size();<sp/>++i)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>0U;<sp/>k2<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref>;<sp/>++k2)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp[i][k2]<sp/>=<sp/>dx.value()[i<sp/>*<sp/><ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref><sp/>+<sp/>k2]</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>d[this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().index(this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().tree().child(k2).localIndex(i))[0]];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>disp.size();<sp/>++i)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>0U;<sp/>k2<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref>;<sp/>++k2)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp[i][k2]<sp/>=<sp/>d[this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().index(this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().tree().child(k2).localIndex(i))[0]];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::StandardLocalFunction<sp/>uFunction(<ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>,<sp/>disp,<sp/>geo);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uFunction;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="da/dd8/a01265_1adc4d072b60d55436de62651fb8af784d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1adc4d072b60d55436de62651fb8af784d" kindref="member">calculateScalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>req)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateScalarImpl&lt;double&gt;(req);<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="da/dd8/a01265_1a1ff594b2a01b8f20a2ff9f7dfa77a763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a1ff594b2a01b8f20a2ff9f7dfa77a763" kindref="member">calculateVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;&gt;<sp/>force)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateVectorImpl&lt;double&gt;(req,<sp/>force);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188" refid="da/dd8/a01265_1abfce8179210ee09d9b86c6444adf7f62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1abfce8179210ee09d9b86c6444adf7f62" kindref="member">calculateMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;&gt;<sp/>K)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateMatrixImpl&lt;double&gt;(req,<sp/>K);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="da/dd8/a01265_1aadd4c3a051e2c530a9fa5ebb86417141" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1aadd4c3a051e2c530a9fa5ebb86417141" kindref="member">calculateAt</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/da1/a01233" kindref="compound">ResultRequirementsType</ref>&amp;<sp/>req,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/da0/a01341" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/><ref refid="db/d1c/a01229" kindref="compound">ResultTypeMap&lt;double&gt;</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>results<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::CachedLocalBasis&lt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_cvref_t&lt;decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())&gt;&gt;</highlight></codeline>
<codeline lineno="210" refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;Eigen::Vector&lt;double,<sp/>Traits::worlddim&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/da0/a01341" kindref="compound">Dune::FieldVector&lt;double, Traits::worlddim&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;)&gt;</highlight></codeline>
<codeline lineno="213" refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" kindref="member">volumeLoad</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;Eigen::Vector&lt;double,<sp/>Traits::worlddim&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/da0/a01341" kindref="compound">Dune::FieldVector&lt;double, Traits::worlddim&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;)&gt;</highlight></codeline>
<codeline lineno="216" refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>;</highlight></codeline>
<codeline lineno="217" refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundaryPatch&lt;GridView&gt;*<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref>;</highlight></codeline>
<codeline lineno="218" refid="da/dd8/a01265_1a4a66b053a96b697a9f11efaf1376b0e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>Dune::BlockVector&lt;Dune::RealTuple&lt;double,<sp/>Traits::dimension&gt;&gt;<sp/><ref refid="da/dd8/a01265_1a4a66b053a96b697a9f11efaf1376b0e7" kindref="member">dispAtNodes</ref>;</highlight></codeline>
<codeline lineno="219" refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d07/a01301" kindref="compound">DefaultMembraneStrain</ref><sp/><ref refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" kindref="member">membraneStrain</ref>;</highlight></codeline>
<codeline lineno="220" refid="da/dd8/a01265_1a4b65a8b484bd3c7fb306557dc8e63848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a4b65a8b484bd3c7fb306557dc8e63848" kindref="member">emod_</ref>;</highlight></codeline>
<codeline lineno="221" refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" kindref="member">nu_</ref>;</highlight></codeline>
<codeline lineno="222" refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref>;</highlight></codeline>
<codeline lineno="223" refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref>{0};</highlight></codeline>
<codeline lineno="224" refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>{};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246" refid="da/dd8/a01265_1a02b95fb491292c3230a70d4ea77b85c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a02b95fb491292c3230a70d4ea77b85c8" kindref="member">computeMaterialAndStrains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/da0/a01341" kindref="compound">Dune::FieldVector&lt;double, 2&gt;</ref>&amp;<sp/>gpPos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a53ff5e7dfc6018836c490d40160fa901" kindref="member">Geometry</ref>&amp;<sp/>geo,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>uFunction)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ScalarType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(uFunction)&gt;::ctype;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d16/a01269" kindref="compound">KinematicVariables&lt;ScalarType&gt;</ref><sp/>kin;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d61/a00302" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[X,<sp/>Jd,<sp/>Hd]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>geo.impl().zeroFirstAndSecondDerivativeOfPosition(gpPos);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.J<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>toEigen(Jd);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>toEigen(Hd);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>2,<sp/>2&gt;<sp/>A<sp/>=<sp/>kin.J<sp/>*<sp/>kin.J.transpose();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/>G<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Zero();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G.block&lt;2,<sp/>2&gt;(0,<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>A;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G(2,<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/>GInv<sp/>=<sp/>G.inverse();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1aa135b5062856432512c7d29f1ff675b0" kindref="member">materialTangent</ref>(GInv);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.epsV<sp/>=<sp/><ref refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" kindref="member">membraneStrain</ref>.<ref refid="d3/d07/a01301_1acfe8c5424970d44c34005e13e851494a" kindref="member">value</ref>(gpPos,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ndd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.evaluateSecondDerivatives(gpIndex);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uasMatrix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d6/d82/a00293_1gaf9d7cf401f9f03ce1aae728c646ce178" kindref="member">Dune::viewAsEigenMatrixAsDynFixed</ref>(uFunction.coefficientsRef());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hessianu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Ndd.transpose().template<sp/>cast&lt;ScalarType&gt;()<sp/>*<sp/>uasMatrix;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.H<sp/>+<sp/>hessianu;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>2&gt;<sp/>gradu<sp/>=<sp/>toEigen(uFunction.evaluateDerivative(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpIndex,<sp/>Dune::wrt(spatialAll),<sp/>Dune::on(Dune::DerivativeDirections::referenceElement)));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.j<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.J<sp/>+<sp/>gradu.transpose();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.a3N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(kin.j.row(0).cross(kin.j.row(1)));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.a3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.a3N.normalized();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;ScalarType,<sp/>3&gt;<sp/>bV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.h<sp/>*<sp/>kin.a3;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bV(2)<sp/>*=<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>Voigt<sp/>notation<sp/>requires<sp/>the<sp/>two<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>BV<sp/>=<sp/><ref refid="d4/d5b/a00294_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(toEigen(geo.impl().secondFundamentalForm(gpPos)));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kin.kappaV<sp/><sp/><sp/><sp/>=<sp/>BV<sp/>-<sp/>bV;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kin;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="283" refid="da/dd8/a01265_1aab5382fc4bf1bac0f78dbd306a6ba010" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1aab5382fc4bf1bac0f78dbd306a6ba010" kindref="member">calculateMatrixImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;ScalarType&gt;<sp/>K,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K.setZero();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d61/a00302" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="da/dd8/a01265_1a7e42edf0686f54efc607942eb1f9be44" kindref="member">getDisplacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="d3/d58/a00285_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().geometry();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[C,<sp/>epsV,<sp/>kappaV,<sp/>jE,<sp/>J,<sp/>h,<sp/>H,<sp/>a3N,<sp/>a3]</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a02b95fb491292c3230a70d4ea77b85c8" kindref="member">computeMaterialAndStrains</ref>(gp.position(),<sp/>gpIndex,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>membraneStrainSize&gt;<sp/>membraneForces<sp/>=<sp/><ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref><sp/>*<sp/>C<sp/>*<sp/>epsV;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>bendingStrainSize&gt;<sp/>moments<sp/>=<sp/>Dune::power(<ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref>,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>C<sp/>*<sp/>kappaV;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Nd<sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.evaluateJacobian(gpIndex);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ndd<sp/>=<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.evaluateSecondDerivatives(gpIndex);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>membraneStrainSize,<sp/>worlddim&gt;<sp/>bopIMembrane</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" kindref="member">membraneStrain</ref>.<ref refid="d3/d07/a01301_1a1c17239105e26dfdc369583624d8a200" kindref="member">derivative</ref>(gp.position(),<sp/>jE,<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>bendingStrainSize,<sp/>worlddim&gt;<sp/>bopIBending<sp/>=<sp/><ref refid="da/dd8/a01265_1a90e0bb85ca10d2bb5b97f509cc973931" kindref="member">bopBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>i,<sp/>a3N,<sp/>a3);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>KBlock<sp/>=<sp/>K.template<sp/>block&lt;worlddim,<sp/>worlddim&gt;(<ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref><sp/>*<sp/>i,<sp/><ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref><sp/>*<sp/>j);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>membraneStrainSize,<sp/>worlddim&gt;<sp/>bopJMembrane</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" kindref="member">membraneStrain</ref>.<ref refid="d3/d07/a01301_1a1c17239105e26dfdc369583624d8a200" kindref="member">derivative</ref>(gp.position(),<sp/>jE,<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>,<sp/>j);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>bendingStrainSize,<sp/>worlddim&gt;<sp/>bopJBending<sp/>=<sp/><ref refid="da/dd8/a01265_1a90e0bb85ca10d2bb5b97f509cc973931" kindref="member">bopBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>j,<sp/>a3N,<sp/>a3);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/><ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref><sp/>*<sp/>bopIMembrane.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJMembrane<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>Dune::power(<ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref>,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>bopIBending.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJBending<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>worlddim,<sp/>worlddim&gt;<sp/>kgMembraneIJ</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" kindref="member">membraneStrain</ref>.<ref refid="d3/d07/a01301_1a95cb97998e73fcf05fb7d9df0249b2e9" kindref="member">secondDerivative</ref>(gp.position(),<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>,<sp/>membraneForces,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>worlddim,<sp/>worlddim&gt;<sp/>kgBendingIJ</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a1acdd9123a1e1268a5f990b5655a737c" kindref="member">kgBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>a3N,<sp/>a3,<sp/>moments,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>kgMembraneIJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>kgBendingIJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K.template<sp/>triangularView&lt;Eigen::StrictlyLower&gt;()<sp/>=<sp/>K.transpose();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="327" refid="da/dd8/a01265_1a41a0a9873dd4107fd444250de72e99bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a41a0a9873dd4107fd444250de72e99bc" kindref="member">calculateVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ScalarType&gt;<sp/>force,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>force.setZero();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d61/a00302" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="da/dd8/a01265_1a7e42edf0686f54efc607942eb1f9be44" kindref="member">getDisplacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="d3/d58/a00285_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().geometry();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[C,<sp/>epsV,<sp/>kappaV,<sp/>jE,<sp/>J,<sp/>h,<sp/>H,<sp/>a3N,<sp/>a3]</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a02b95fb491292c3230a70d4ea77b85c8" kindref="member">computeMaterialAndStrains</ref>(gp.position(),<sp/>gpIndex,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>3&gt;<sp/>membraneForces<sp/>=<sp/><ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref><sp/>*<sp/>C<sp/>*<sp/>epsV;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ScalarType,<sp/>3&gt;<sp/>moments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::power(<ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref>,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>C<sp/>*<sp/>kappaV;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Nd<sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.evaluateJacobian(gpIndex);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ndd<sp/>=<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>.evaluateSecondDerivatives(gpIndex);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>bopIMembrane</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1afb9f4a8b2231fb00b6cb8d4426d7482b" kindref="member">membraneStrain</ref>.<ref refid="d3/d07/a01301_1a1c17239105e26dfdc369583624d8a200" kindref="member">derivative</ref>(gp.position(),<sp/>jE,<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/><ref refid="da/dd8/a01265_1a9bb0dc0af5e814b54f98b1ae39c31332" kindref="member">localBasis</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>bopIBending<sp/>=<sp/><ref refid="da/dd8/a01265_1a90e0bb85ca10d2bb5b97f509cc973931" kindref="member">bopBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>i,<sp/>a3N,<sp/>a3);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;3&gt;(3<sp/>*<sp/>i)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>bopIMembrane.transpose()<sp/>*<sp/>membraneForces<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;3&gt;(3<sp/>*<sp/>i)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>bopIBending.transpose()<sp/>*<sp/>moments<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces<sp/>volume<sp/>forces<sp/>over<sp/>the<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" kindref="member">volumeLoad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>=<sp/><ref refid="da/dd8/a01265_1a7e42edf0686f54efc607942eb1f9be44" kindref="member">getDisplacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;double,<sp/>Traits::worlddim&gt;<sp/>fext<sp/>=<sp/><ref refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" kindref="member">volumeLoad</ref>(geo.global(gp.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>udCi<sp/>=<sp/>uFunction.evaluateDerivative(gpIndex,<sp/>wrt(coeff(i)));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;worlddim&gt;(<ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref><sp/>*<sp/>i)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/>udCi<sp/>*<sp/>fext<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref><sp/>and<sp/>not<sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>forces,<sp/>boundary<sp/>forces,<sp/>i.e.<sp/>at<sp/>the<sp/>Neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>intersection<sp/>:<sp/>intersections(<ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref>-&gt;gridView(),<sp/>this-&gt;localView().element()))<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref><sp/>or<sp/>not<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref>-&gt;contains(intersection))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>quadLine<sp/>=<sp/>QuadratureRules&lt;double,<sp/>Element::mydimension<sp/>-<sp/>1&gt;::rule(intersection.type(),<sp/><ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>curQuad<sp/>:<sp/>quadLine)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>position<sp/>of<sp/>the<sp/>quadrature<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/da0/a01341" kindref="compound">FieldVector&lt;double, Element::mydimension&gt;</ref>&amp;<sp/>quadPos</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>intersection.geometryInInside().global(curQuad.position());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>intersection.geometry().integrationElement(curQuad.position())<sp/>*<sp/>curQuad.weight();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="da/dd8/a01265_1a56e9fd510e99e289f2adb7ed355533f4" kindref="member">numberOfNodes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>udCi<sp/>=<sp/>uFunction.evaluateDerivative(quadPos,<sp/>wrt(coeff(i)));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>of<sp/>the<sp/>Neumann<sp/>data<sp/>at<sp/>the<sp/>current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>neumannValue<sp/>=<sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>(intersection.geometry().global(curQuad.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;worlddim&gt;(<ref refid="da/dd8/a01265_1a72ab40a0cd36ae7aed708f82780c20b0" kindref="member">worlddim</ref><sp/>*<sp/>i)<sp/>-=<sp/>udCi<sp/>*<sp/>neumannValue<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="395" refid="da/dd8/a01265_1a83c5d12a0591fce31bc29ea903156863" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1a83c5d12a0591fce31bc29ea903156863" kindref="member">calculateScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd8/a01265_1ada03913c70f89a6feab860e6871b1a58" kindref="member">FERequirementType</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&amp;<sp/>dx</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>ScalarType<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d61/a00302" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="da/dd8/a01265_1a7e42edf0686f54efc607942eb1f9be44" kindref="member">getDisplacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.getParameter(<ref refid="d3/d58/a00285_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">FEParameter::loadfactor</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element().geometry();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ScalarType<sp/>energy<sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[C,<sp/>epsV,<sp/>kappaV,<sp/>j,<sp/>J,<sp/>h,<sp/>H,<sp/>a3N,<sp/>a3]</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a02b95fb491292c3230a70d4ea77b85c8" kindref="member">computeMaterialAndStrains</ref>(gp.position(),<sp/>gpIndex,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScalarType<sp/>membraneEnergy<sp/>=<sp/>0.5<sp/>*<sp/><ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref><sp/>*<sp/>epsV.dot(C<sp/>*<sp/>epsV);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScalarType<sp/>bendingEnergy<sp/><sp/>=<sp/>0.5<sp/>*<sp/>Dune::power(<ref refid="da/dd8/a01265_1aa055b97524c73a6917b026571f3de686" kindref="member">thickness_</ref>,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>kappaV.dot(C<sp/>*<sp/>kappaV);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>(membraneEnergy<sp/>+<sp/>bendingEnergy)<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" kindref="member">volumeLoad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>uFunction.evaluate(gpIndex);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;double,<sp/>Traits::worlddim&gt;<sp/>fExt<sp/>=<sp/><ref refid="da/dd8/a01265_1a48296d1b90c462c24b85472103261e72" kindref="member">volumeLoad</ref>(geo.global(gp.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>-=<sp/>u.dot(fExt)<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref><sp/>and<sp/>not<sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>or<sp/>surface<sp/>loads,<sp/>i.e.,<sp/>neumann<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element<sp/>=<sp/>this-&gt;<ref refid="d4/d10/a01197_1a4b49c02de08fb5c115affa646c5f249a" kindref="member">localView</ref>().element();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>intersection<sp/>:<sp/>intersections(<ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref>-&gt;gridView(),<sp/>element))<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref><sp/>or<sp/>not<sp/><ref refid="da/dd8/a01265_1a06d85364de82f545719a105ecd6d9629" kindref="member">neumannBoundary</ref>-&gt;contains(intersection))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>quadLine<sp/>=<sp/>QuadratureRules&lt;double,<sp/>Traits::mydim<sp/>-<sp/>1&gt;::rule(intersection.type(),<sp/><ref refid="da/dd8/a01265_1a63b27f61b7f57f12671618edf3ef99ef" kindref="member">order</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>curQuad<sp/>:<sp/>quadLine)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>position<sp/>of<sp/>the<sp/>quadrature<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/da0/a01341" kindref="compound">FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>quadPos</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>intersection.geometryInInside().global(curQuad.position());</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>intersection.geometry().integrationElement(curQuad.position());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>of<sp/>the<sp/>local<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>uFunction.evaluate(quadPos);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>of<sp/>the<sp/>Neumann<sp/>data<sp/>at<sp/>the<sp/>current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>neumannValue<sp/>=<sp/><ref refid="da/dd8/a01265_1a3f955c9f6dfc845cd44a5a75aad79e38" kindref="member">neumannBoundaryLoad</ref>(intersection.geometry().global(curQuad.position()),<sp/>lambda);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>-=<sp/>neumannValue.dot(u)<sp/>*<sp/>curQuad.weight()<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="449" refid="da/dd8/a01265_1a1acdd9123a1e1268a5f990b5655a737c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/><ref refid="da/dd8/a01265_1a1acdd9123a1e1268a5f990b5655a737c" kindref="member">kgBending</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>2,<sp/>3&gt;&amp;<sp/>jcur,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix3&lt;ScalarType&gt;&amp;<sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddN,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ScalarType&gt;&amp;<sp/>a3N,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ScalarType&gt;&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ScalarType&gt;&amp;<sp/>S,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>kg;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kg.setZero();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN1i<sp/>=<sp/>dN(I,<sp/>0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN1j<sp/>=<sp/>dN(J,<sp/>0);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN2i<sp/>=<sp/>dN(I,<sp/>1);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN2j<sp/>=<sp/>dN(J,<sp/>1);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>P</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0<sp/>/<sp/>a3N.norm()<sp/>*<sp/>(Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>-<sp/>a3<sp/>*<sp/>a3.transpose());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1dxI<sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dN1i;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>auto<sp/>here<sp/>allows<sp/>the<sp/>exploitation<sp/>of<sp/>the<sp/>identity<sp/>matrices,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>Eigen&apos;s<sp/>expression<sp/>templates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2dxI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN2i;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1dxJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN1j;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2dxJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN2j;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(0);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(1);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3NdI<sp/>=<sp/>a1dxI.colwise().cross(a2)<sp/>-<sp/>a2dxI.colwise().cross(a1);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3NdJ<sp/>=<sp/>a1dxJ.colwise().cross(a2)<sp/>-<sp/>a2dxJ.colwise().cross(a1);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3dI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>P<sp/>*<sp/>a3NdI;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3dJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>P<sp/>*<sp/>a3NdJ;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a_albe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>h.row(i).transpose();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddNI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ddN(I,<sp/>i);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddNJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ddN(J,<sp/>i);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ScalarType&gt;<sp/>vecd<sp/>=<sp/>P<sp/>*<sp/>a_albe;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3Ndd</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0<sp/>/<sp/>a3N.squaredNorm()</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((3<sp/>*<sp/>a3<sp/>*<sp/>a3.transpose()<sp/>-<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity())<sp/>*<sp/>(a3.dot(a_albe))</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>a_albe<sp/>*<sp/>a3.transpose()<sp/>-<sp/>a3<sp/>*<sp/>a_albe.transpose());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>secondDerivativeDirectorIJ<sp/>=<sp/><ref refid="d6/d82/a00293_1ga1496a9776a583f8b09c4244a68453394" kindref="member">skew</ref>(((dN2i<sp/>*<sp/>dN1j<sp/>-<sp/>dN1i<sp/>*<sp/>dN2j)<sp/>*<sp/>vecd).eval());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kg<sp/>-=<sp/>(a3NdI.transpose()<sp/>*<sp/>a3Ndd<sp/>*<sp/>a3NdJ<sp/>+<sp/>secondDerivativeDirectorIJ<sp/>+<sp/>(ddNI<sp/>*<sp/>a3dJ<sp/>+<sp/>ddNJ<sp/>*<sp/>a3dI.transpose()))</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>S[i]<sp/>*<sp/>(i<sp/>==<sp/>2<sp/>?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kg;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="497" refid="da/dd8/a01265_1a90e0bb85ca10d2bb5b97f509cc973931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/><ref refid="da/dd8/a01265_1a90e0bb85ca10d2bb5b97f509cc973931" kindref="member">bopBending</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>2,<sp/>3&gt;&amp;<sp/>jcur,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix3&lt;ScalarType&gt;&amp;<sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddN,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ScalarType&gt;&amp;<sp/>a3N,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ScalarType&gt;&amp;<sp/>a3)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a1dxI</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN(node,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>cross-product<sp/>below<sp/>complains<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a2dxI<sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN(node,<sp/>1);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(0);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(1);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3NdI</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>a1dxI.colwise().cross(a2)<sp/>-<sp/>a2dxI.colwise().cross(a1);<sp/><sp/></highlight><highlight class="comment">//<sp/>minus<sp/>needed<sp/>since<sp/>order<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>swapped<sp/>to<sp/>get<sp/>column-wise<sp/>cross<sp/>product<sp/>working</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>a3d1</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0<sp/>/<sp/>a3N.norm()<sp/>*<sp/>(Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>-<sp/>a3<sp/>*<sp/>a3.transpose())<sp/>*<sp/>a3NdI;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ScalarType,<sp/>3,<sp/>3&gt;<sp/>bop<sp/>=<sp/>-(h<sp/>*<sp/>a3d1<sp/>+<sp/>(a3<sp/>*<sp/>ddN.row(node)).<ref refid="d9/d0d/a00298_1ac2c6469be19ce4ef2e630bfa1c5a5e24" kindref="member">transpose</ref>());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bop.row(2)<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bop;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="da/dd8/a01265_1aa135b5062856432512c7d29f1ff675b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/><ref refid="da/dd8/a01265_1aa135b5062856432512c7d29f1ff675b0" kindref="member">materialTangent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;&amp;<sp/>Aconv)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a4b65a8b484bd3c7fb306557dc8e63848" kindref="member">emod_</ref><sp/>*<sp/><ref refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" kindref="member">nu_</ref><sp/>/<sp/>((1.0<sp/>+<sp/><ref refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" kindref="member">nu_</ref>)<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/><ref refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" kindref="member">nu_</ref>));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/dd8/a01265_1a4b65a8b484bd3c7fb306557dc8e63848" kindref="member">emod_</ref><sp/>/<sp/>(2.0<sp/>*<sp/>(1.0<sp/>+<sp/><ref refid="da/dd8/a01265_1a2cabafb4cfd93e8dd230d6ebb79bf529" kindref="member">nu_</ref>));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambdbar<sp/>=<sp/>2.0<sp/>*<sp/>lambda<sp/>*<sp/>mu<sp/>/<sp/>(lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::TensorFixedSize&lt;double,<sp/>Eigen::Sizes&lt;3,<sp/>3,<sp/>3,<sp/>3&gt;&gt;<sp/>moduli;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>AconvT<sp/>=<sp/><ref refid="d4/d5b/a00294_1ga5cfd9d098384fb067d897b3c0499b447" kindref="member">tensorView</ref>(Aconv,<sp/>std::array&lt;Eigen::Index,<sp/>2&gt;({3,<sp/>3}));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>moduli<sp/>=<sp/>lambdbar<sp/>*<sp/><ref refid="d4/d5b/a00294_1gab2cea9ac847cc3635812467c9d96ceb4" kindref="member">dyadic</ref>(AconvT,<sp/>AconvT).eval()<sp/>+<sp/>2.0<sp/>*<sp/>mu<sp/>*<sp/>symmetricFourthOrder&lt;double&gt;(Aconv,<sp/>Aconv);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d4/d5b/a00294_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(moduli);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/>C33<sp/>=<sp/>C({0,<sp/>1,<sp/>5},<sp/>{0,<sp/>1,<sp/>5});</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C33;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/kirchhoffloveshell.hh"/>
  </compounddef>
</doxygen>
